{"version":3,"sources":["webpack:///./src/app/modules/provisioner/components/provisioner-list/provisioner-list.component.html","webpack:///./src/app/modules/provisioner/components/provisioner-list/provisioner-list.component.scss","webpack:///./src/app/modules/provisioner/components/provisioner-list/provisioner-list.component.ts","webpack:///./src/app/modules/provisioner/components/provisioner-row/provisioner-row.component.html","webpack:///./src/app/modules/provisioner/components/provisioner-row/provisioner-row.component.scss","webpack:///./src/app/modules/provisioner/components/provisioner-row/provisioner-row.component.ts","webpack:///./src/app/modules/provisioner/components/provisioner-widgets/provisioner-widgets.component.html","webpack:///./src/app/modules/provisioner/components/provisioner-widgets/provisioner-widgets.component.scss","webpack:///./src/app/modules/provisioner/components/provisioner-widgets/provisioner-widgets.component.ts","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-site/provisioner-dash-by-site.component.html","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-site/provisioner-dash-by-site.component.scss","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-site/provisioner-dash-by-site.component.ts","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-user/provisioner-dash-by-user.component.html","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-user/provisioner-dash-by-user.component.scss","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dash-by-user/provisioner-dash-by-user.component.ts","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dashboard.component.html","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dashboard.component.scss","webpack:///./src/app/modules/provisioner/pages/provisioner-dashboard/provisioner-dashboard.component.ts","webpack:///./src/app/modules/provisioner/pages/provisioner-details/provisioner-details.component.html","webpack:///./src/app/modules/provisioner/pages/provisioner-details/provisioner-details.component.scss","webpack:///./src/app/modules/provisioner/pages/provisioner-details/provisioner-details.component.ts","webpack:///./src/app/modules/provisioner/provisioner-routing.modules.ts","webpack:///./src/app/modules/provisioner/provisioner.module.ts"],"names":[],"mappings":"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","file":"app-modules-provisioner-provisioner-module.js","sourcesContent":["module.exports = \"<!-- <div class=\\\"enrollment-list-controls bg-light\\\">\\n  <form class=\\\"form-inline\\\">\\n    <input class=\\\"form-control\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" (input)=\\\"search($event.target.value)\\\">\\n  </form>\\n\\n  <form class=\\\"form-inline\\\">\\n\\n    <button class='btn btn-default mr-3' (click)=\\\"sort()\\\">\\n      <i class=\\\"fa fa-sort-alpha-asc\\\" aria-hidden=\\\"true\\\"></i>\\n    </button>\\n\\n    <label for=\\\"enrollmentViewSelector\\\" class='d-none d-sm-flex mr-0 mr-sm-2'>View</label>\\n    <select id=\\\"enrollmentViewSelector\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"viewTypeSelector\\\" (change)=\\\"viewTypes($event.target.value)\\\">\\n      <option value=\\\"View All\\\">View All</option>\\n      <option *ngFor=\\\"let status of EnrollmentStatus\\\" value=\\\"{{status}}\\\">\\n        {{status}}\\n      </option>\\n    </select>\\n  </form>\\n\\n</div> -->\\n\\n<div class=\\\"enrollment-list-controls bg-light\\\">\\n    <div>\\n     <!-- <form class=\\\"form-inline\\\">\\n        <span class=\\\"has-float-label\\\">\\n          <input class=\\\"form-control bg-transparent\\\" type=\\\"search\\\" placeholder=\\\"Sites\\\" aria-label=\\\"Sites\\\" (input)=\\\"search($event.target.value)\\\">\\n          <span>Sites</span>\\n        </span>\\n\\n        <label class=\\\"has-float-label mx-2\\\">\\n          <select id=\\\"enrollmentViewSelector\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"viewTypeSelector\\\" (change)=\\\"viewTypes($event.target.value)\\\">\\n            <option value=\\\"View All\\\">All</option>\\n            <option *ngFor=\\\"let status of EnrollmentStatus\\\" value=\\\"{{status}}\\\">\\n              {{status}}\\n            </option>\\n          </select>\\n          <span>View</span>\\n        </label>\\n      </form>-->\\n    </div>\\n    <div>\\n      <prime-alert inlineBlock='true' *ngIf=\\\"showSaveMessage\\\" [@fadeIn] dismissable='' type='success'>Saved....</prime-alert>\\n\\n      <button [disabled]=\\\"!updated\\\" type=\\\"button\\\" class=\\\"btn btn-default mx-2\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n      <button [disabled]=\\\"!updated\\\" type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"save()\\\" [primeLoadingSpinner]=\\\"loadingSpinner\\\" >Save</button>\\n      <prime-add-user-button *ngIf=\\\"primaryType === 'Site'\\\" (onAddNewUser)=\\\"onAddNewPerson($event)\\\">\\n      </prime-add-user-button>\\n    </div>\\n  </div>\\n\\n\\n<div class=\\\"enrollment-item-container\\\">\\n  <div class=\\\"enrollment-item-inner\\\">\\n    <prime-provisioner-row\\n      *ngFor=\\\"let item of data\\\"\\n      [rowData]='item'\\n      [primaryType]='primaryType'\\n      (onRowOpened)='rowOpened($event)'\\n      (siteAccessChange)='onSiteAccessChange($event)'>\\n    </prime-provisioner-row>\\n  </div>\\n</div>\\n\\n\"","module.exports = \".enrollment-item-container {\\n  border-top: none;\\n  height: 25rem;\\n  overflow-y: scroll; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border-right: 2px solid #dee2e6;\\n    border-left: 2px solid #dee2e6;\\n    border-bottom: 2px solid #dee2e6;\\n    min-height: 100%; }\\n  .enrollment-list-controls {\\n  border: 2px solid #dee2e6;\\n  min-height: 4em;\\n  padding: 1em;\\n  border-bottom: none;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n  .enrollment-view-selector {\\n  min-width: 5em; }\\n  .has-float-label + .has-float-label {\\n  margin-top: initial; }\\n  .has-float-label + .has-float-label select {\\n    height: auto; }\\n  .enrollment-list-controls {\\n  border: 2px solid #dee2e6; }\\n  .enrollment-item-container {\\n  border-top: none;\\n  overflow-y: scroll;\\n  height: 25rem;\\n  overflow-x: hidden; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border-right: 2px solid #dee2e6;\\n    border-left: 2px solid #dee2e6;\\n    border-bottom: 2px solid #dee2e6;\\n    min-height: 100%; }\\n  .enrollment-list-controls {\\n  min-height: 4em;\\n  padding: 1em;\\n  border-bottom: none;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n  .enrollment-view-selector {\\n  min-width: 5em; }\\n\"","import {Component, Input, OnInit, QueryList, ViewChildren, ChangeDetectorRef, Output, EventEmitter} from '@angular/core';\nimport { EnrollmentRowItem } from '../../../verifier/components/enrollment-row/enrollment-row.component';\nimport { EnrollmentList, defaultViewSelector } from '../../../../core/enrollment-list/enrollment-list.class';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { ProvisionerRowComponent } from '../provisioner-row/provisioner-row.component';\nimport { ProvisionerRowItem } from '../provisioner-row/provisioner-row.component';\nimport { Site, SiteAccess,ProvisionedStatus } from '../../../../models/sites.model';\nimport { cloneDeep } from 'lodash';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { fadeIn } from '../../../../animations/animations';\nimport { Person } from '../../../../models/person.model';\nimport { OrganizationAccess } from '../../../../models/organization-access.model';\n\n@Component({\n  selector: 'prime-provisioner-list',\n  templateUrl: './provisioner-list.component.html',\n  styleUrls: ['./provisioner-list.component.scss'],\n  animations: [fadeIn]\n})\nexport class ProvisionerListComponent extends EnrollmentList implements OnInit {\n\n  @Input() rowItems: ProvisionerRowItem[] = [];\n  @Input() primaryType: 'User'|'Site' = 'User';\n\n  @Output() change = new EventEmitter<boolean>(false);\n  @Input() parentSite: Site;\n  public showSaveMessage = false;\n  public loadingSpinner = false;\n  private _pendingUpdates: SiteAccess[] = [];\n\n  @ViewChildren(ProvisionerRowComponent) rowElements: QueryList<ProvisionerRowComponent>;\n\n\n  private _enrollmentStatus: string [] = [\n    EnrollmentStatus.Approved,\n    EnrollmentStatus.Declined,\n    EnrollmentStatus.New,\n  ];\n\n  constructor(private dataService: PrimeDataService, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.rowItems){\n      // this.data = this.rowItems;\n      this.data = cloneDeep(this.rowItems);\n      console.log('OnInit (ProvisionerListComponent): ', this.data );\n    }\n  }\n\n  ngOnChanges(changes){\n    if (this.rowItems && this.data && this.rowItems.length !== this.data.length){\n      this.data = cloneDeep(this.rowItems);\n    }\n  }\n\n  get EnrollmentStatus() {\n    return this._enrollmentStatus;\n  }\n\n  onAddNewPerson(person: Person){\n    console.log('onAddNewPerson', person);\n    const sa = new SiteAccess();\n    sa.site = this.parentSite;\n    sa.person = person;\n    person.siteAccess.push(sa);\n    this.parentSite.siteAccess.push(sa);\n\n    // For prototype, we simulate as if the user already has org selected\n    const orgs = this.dataService.findCollectionFromSite(this.parentSite);\n\n    if (orgs.length){\n      const org = orgs[0];\n      const orgAccess = new OrganizationAccess(person, org);\n      person.organizationAccess.push(orgAccess);\n      org.organizationAccess.push(orgAccess);\n      this.dataService.organizationAccess.push(orgAccess);\n    }\n\n    console.log('New Person created, associated with site')\n\n    this.dataService.siteAccesses.push(sa);\n  }\n\n  rowOpened(item) {\n    console.log('rowOpened', { item, rowElements: this.rowElements });\n    this.rowElements.filter(x => x !== item)\n      .map(x => x.closeRow());\n  }\n\n  cancel(){\n    console.log('Cancel');\n    this._pendingUpdates = [];\n\n    // Revert to orig data\n    this.data = cloneDeep( this.rowItems );\n  }\n\n  save(){\n    console.log('Save!');\n    this.loadingSpinner = true;\n\n    setTimeout(() => {\n\n      const now = new Date();\n\n      this._pendingUpdates.map(sa => {\n        const orig: SiteAccess = this.dataService.findSiteAccessByObjectId(sa.objectId);\n\n        if (sa.endDate && sa.endDate.getDate && now > sa.endDate){\n          sa.status = EnrollmentStatus.Ended;\n        }\n        else {\n          sa.status = EnrollmentStatus.Provisioning;\n        }\n\n        this.updateSiteAccess(orig, sa);\n      });\n\n      this.loadingSpinner = false;\n      this.showSaveMessage = true;\n      // Update orig copy of data now that user has saved them.\n      this.rowItems = cloneDeep(this.data);\n      this._pendingUpdates = [];\n\n    }, 3000);\n  }\n\n  onSiteAccessChange(item: SiteAccess){\n    this.showSaveMessage = false; //Now there are pending unsaved changes, so hide message.\n    const found = this._pendingUpdates.find(sa => sa.objectId === item.objectId);\n    console.log('ProvList, onSiteAccessChange', {item, found})\n    if (found){\n      this.updateSiteAccess(found, item);\n    } else {\n      this._pendingUpdates.push(item);\n    }\n  }\n\n\n  search(phrase){\n    console.log('ProvisionerList SEARCH:', phrase);\n  }\n\n  viewTypes(type){\n    if (type === defaultViewSelector){\n      return this.data = this.rowItems;\n    }\n\n    this.deepSearch(expandableRow => {\n      return expandableRow.status.includes(type);\n    });\n  }\n\n  get updated(): boolean {\n    return this._pendingUpdates.length >= 1 && !this.loadingSpinner;\n  }\n\n  private updateSiteAccess(target: SiteAccess, source: SiteAccess): SiteAccess {\n    console.log(\"status\"+target.status);\n    target.personalAccess = source.personalAccess;\n    target.provisionedDate = source.provisionedDate;\n    target.posUserId = source.posUserId;\n    target.status = source.status;\n    target.startDate = source.startDate ;\n    target.endDate = source.endDate ;\n    return target;\n  }\n\n}\n","module.exports = \"<div  *ngIf=\\\"primaryType === 'User'\\\" class=\\\"enrollment-list-item\\\" (click)=\\\"toggleRow()\\\">\\n\\n  <div class=\\\"enrollment-text-container\\\">\\n    <span class=\\\"enrollment-text-main font-weight-bold\\\">\\n      <i class='fa fa-caret-down' [@rotate180]='showProvisionerDetailsRowOverride ? \\\"opened\\\" : \\\"closed\\\"'></i>\\n      {{orgName}}</span>\\n  </div>\\n</div>\\n\\n<div [@growVertical] class=\\\"provisioner-table-container site-table table-responsive ml-2 \\\" *ngIf=\\\" primaryType === 'Site'\\\">\\n  <table  >\\n    <tr>\\n      <td class=\\\"enrollment-text-main font-weight-bold \\\" width = \\\"20%\\\"></td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\"> Start Date</td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\">End Date</td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\">Pos User ID</td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\"> Personal Access</td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\">Date Provisioned</td>\\n      <td class=\\\"enrollment-text-main font-weight-bold\\\" width = \\\"10%\\\" align=\\\"center\\\">Status</td>\\n\\n    </tr>\\n    <tr >\\n      <td class=\\\"provision-element-text\\\">{{rowData.title}}\\n        <prime-info-button [targetId]=\\\"rowData.associatedObjectId\\\"></prime-info-button>\\n      </td>\\n      <td>\\n        <prime-datepicker size=\\\"mini\\\" (dateChange)=\\\"onChangeStartDate($event ,rowData.siteAccess[0])\\\" [(date)]=\\\"rowData.siteAccess[0].startDate\\\"\\n          id=\\\"startDateShort\\\" name=\\\"startDateShort\\\" placeholder=\\\" \\\" dateFormat=\\\"yyyy/mm/dd\\\" tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <td>\\n        <prime-datepicker size=\\\"mini\\\" (dateChange)=\\\"onChangeEndDate($event ,rowData.siteAccess[0])\\\" [(date)]=\\\"rowData.siteAccess[0].endDate\\\"\\n          id=\\\"endDateShort\\\" name=\\\"endDateShort\\\" placeholder=\\\" \\\" dateFormat=\\\"yyyy/mm/dd\\\" tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <td class=\\\"provision-element-label\\\"> <input type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2\\\" id=\\\"posuid\\\" (change)=\\\"onChange($event , rowData.siteAccess[0])\\\"\\n          name=\\\"posuid\\\" placeholder=\\\" \\\" tabindex=\\\"1\\\" [(ngModel)]=\\\"rowData.siteAccess[0].posUserId\\\" (change)=\\\"onChange($event, rowData.siteAccess[0])\\\">\\n      </td>\\n      <!--Personal Access -->\\n      <td class=\\\"provision-element-label\\\">\\n\\n        <select class=\\\"form-control access-type-selector mb-2\\\" [(ngModel)]='rowData.siteAccess[0].personalAccess' (change)=\\\"onChange($event, rowData.siteAccess[0])\\\" >\\n          <option *ngFor=\\\"let status of accessType\\\"\\n                  value=\\\"{{status}}\\\">\\n            {{status}}\\n          </option>\\n        </select>\\n\\n      </td>\\n\\n      <!-- DateProvisioned -->\\n      <td class=\\\"provision-element-label\\\">\\n        <prime-datepicker size=\\\"mini\\\"  (dateChange)=\\\"onChangeprovisionedDate($event ,rowData.siteAccess[0])\\\" [(date)]='rowData.siteAccess[0].provisionedDate' id=\\\"provisionDateShort\\\" name=\\\"provisionDateShort\\\" placeholder=\\\" \\\"  dateFormat=\\\"yyyy/mm/dd\\\"  tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <!--status -->\\n      <td class=\\\"provision-element-label\\\" align=\\\"right\\\">\\n\\n        <!-- <select class=\\\"form-control access-type-selector\\\" [(ngModel)]='rowData.siteAccess[0].status'>\\n          <option value=\\\"{{rowData.siteAccess[0].status}}\\\">{{rowData.siteAccess[0].status}}\\n          </option>\\n        </select> -->\\n\\n\\n        <prime-pill-badge\\n          [alerts]=\\\"[rowData.siteAccess[0].alert]\\\"\\n          [iconOnly]='false'>\\n        </prime-pill-badge>\\n\\n\\n        <!--    <prime-pill-badge\\n              [alerts]=\\\"[rowDataSite.siteAccess[0].alert]\\\"\\n              [iconOnly]='false'>\\n            </prime-pill-badge>-->\\n      </td>\\n\\n    </tr>\\n  </table>\\n</div>\\n\\n<div [@growVertical] class=\\\"provisioner-table-container table-responsive ml-2 \\\" *ngIf=\\\" (isNew || showProvisionerDetailsRowOverride) && primaryType === 'User'\\\" >\\n  <table >\\n    <tr class='flex-table-row'>\\n      <td class=\\\"provision-element-label\\\" width = \\\"11%\\\"></td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"5%\\\">Site Type</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"5%\\\">Start Date</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"5%\\\">End Date</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"6%\\\"> POS User ID</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"6%\\\" >Personal Access</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"5%\\\">Date Provisioned</td>\\n      <td class=\\\"provision-element-label\\\" width = \\\"6%\\\" >Status</td>\\n    </tr>\\n    <tr class='flex-table-row' *ngFor=\\\"let rowDataSite of sites\\\">\\n      <td class=\\\"provision-element-text\\\">\\n        {{rowDataSite.name}}\\n        <prime-info-button [targetId]=\\\"rowDataSite.objectId\\\"></prime-info-button>\\n      </td>\\n      <td class=\\\"provision-element-text\\\">\\n        {{ rowDataSite.siteType }}\\n      </td>\\n\\n      <td>\\n        <!-- Start Date -->\\n        <prime-datepicker size=\\\"mini\\\"\\n                          (dateChange)=\\\"onChangeStartDate($event, getSiteAccessFromSite(rowDataSite))\\\"\\n                          [date]=\\\"getSiteAccessFromSite(rowDataSite).startDate\\\"\\n                          id=\\\"startDateShort\\\"\\n                          name=\\\"startDateShort\\\"\\n                          placeholder=\\\" \\\"\\n                          dateFormat=\\\"yyyy/mm/dd\\\"\\n                          tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <td>\\n        <!-- End Date -->\\n        <prime-datepicker size=\\\"mini\\\"\\n                          (dateChange)=\\\"onChangeEndDate($event, getSiteAccessFromSite(rowDataSite))\\\"\\n                          [date]=\\\"getSiteAccessFromSite(rowDataSite).endDate\\\"\\n                          id=\\\"endDateShort\\\"\\n                          name=\\\"endDateShort\\\"\\n                          placeholder=\\\" \\\"\\n                          dateFormat=\\\"yyyy/mm/dd\\\"\\n                          tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <!-- POS User ID -->\\n      <td class=\\\"provision-element-label\\\"> <input type=\\\"text\\\"\\n               class=\\\"form-control mb-2 mr-sm-2\\\"\\n               id=\\\"posuid\\\"\\n               (change)=\\\"onChange($event , getSiteAccessFromSite(rowDataSite))\\\"\\n               name=\\\"posuid\\\"\\n               placeholder=\\\" \\\"\\n               tabindex=\\\"1\\\"\\n               [(ngModel)]=\\\"getSiteAccessFromSite(rowDataSite).posUserId\\\"\\n               (change)=\\\"onChange($event, rowDataSite.siteAccess[0])\\\">\\n      </td>\\n      <!--Personal Access -->\\n      <td class=\\\"provision-element-label\\\">\\n\\n        <select class=\\\"form-control access-type-selector mb-2 mr-sm-2\\\"\\n                [(ngModel)]='getSiteAccessFromSite(rowDataSite).personalAccess'\\n                (change)=\\\"onChange($event, getSiteAccessFromSite(rowDataSite) )\\\">\\n          <option *ngFor=\\\"let status of accessType\\\"\\n                  value=\\\"{{status}}\\\">\\n            {{status}}\\n          </option>\\n        </select>\\n\\n      </td>\\n      <!-- DateProvisioned -->\\n      <td class=\\\"provision-element-label\\\">\\n        <prime-datepicker size=\\\"mini\\\"\\n                          (dateChange)=\\\"onChangeprovisionedDate($event ,getSiteAccessFromSite(rowDataSite))\\\"\\n                          [(date)]='getSiteAccessFromSite(rowDataSite).provisionedDate'\\n                          id=\\\"provisionDateShort\\\"\\n                          name=\\\"provisionDateShort\\\"\\n                          placeholder=\\\" \\\"\\n                          dateFormat=\\\"yyyy/mm/dd\\\"\\n                          tabindex=\\\"1\\\"></prime-datepicker>\\n      </td>\\n      <!--Status -->\\n      <td class=\\\"provision-element-label\\\">\\n        <!-- <select class=\\\"form-control status-dropdown mb-2\\\" [(ngModel)]='getSiteAccessFromSite(rowDataSite).status'>\\n          <option value=\\\"{{getSiteAccessFromSite(rowDataSite).status}}\\\">{{ getSiteAccessFromSite(rowDataSite).status}}\\n          </option>\\n        </select> -->\\n\\n\\n\\n       <prime-pill-badge\\n          [alerts]=\\\"[getSiteAccessFromSite(rowDataSite).alert]\\\"\\n          [iconOnly]='false'>\\n        </prime-pill-badge>\\n       </td>\\n\\n\\n    </tr>\\n  </table>\\n</div>\\n<!--\\n<div [@openState]=\\\"openState\\\">\\n  <div [@openStateChild]=\\\"openState\\\"  class=\\\"expandable-container\\\">\\n    <div class=\\\"enrollment-expandable\\\" >\\n      <prime-enrollment-progress-row\\n        [open]='true'\\n        [data]='siteAccessObject'>\\n      </prime-enrollment-progress-row>\\n    </div>\\n  </div>\\n</div>\\n-->\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background: #e9ecef; }\\n\\n.enrollment-icons,\\n.enrollment-list-item,\\n.enrollment-expandable {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.enrollment-list-item {\\n  border: 1px solid #adb5bd;\\n  border-left: none;\\n  border-right: none;\\n  min-height: 4em;\\n  background: white;\\n  z-index: 1;\\n  position: relative; }\\n\\n.enrollment-expandable,\\n.enrollment-list-item {\\n  transition: 0.25s; }\\n\\n.enrollment-expandable:hover,\\n  .enrollment-list-item:hover {\\n    background: #f9f9f9; }\\n\\n.enrollment-expandable {\\n  color: #495057;\\n  min-height: 4em;\\n  border: 1px solid #adb5bd;\\n  flex-wrap: wrap;\\n  background: #e9ecef; }\\n\\n.enrollment-actions {\\n  display: flex;\\n  align-items: center;\\n  align-self: stretch; }\\n\\n.enrollment-actions .btn-block {\\n    border-radius: 0;\\n    border-top: 0;\\n    border-right: 0;\\n    border-bottom: 0;\\n    height: 100%; }\\n\\n.enrollment-text-container {\\n  min-height: 4em;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  flex: 5;\\n  padding-left: 1em;\\n  margin-right: 2em; }\\n\\n.enrollment-text-container .enrollment-text-main {\\n    font-size: 1.072rem; }\\n\\n.enrollment-text-container > span:not(:last-of-type):not(.no-separator):after {\\n    font-size: 1rem;\\n    color: #6c757d;\\n    content: \\\" / \\\"; }\\n\\n@media (max-width: 575.98px) {\\n    .enrollment-text-container > span:first-of-type:after {\\n      content: \\\"\\\";\\n      display: block; } }\\n\\n.enrollment-text-container > span:not(.enrollment-text-main) {\\n    color: #6c757d;\\n    margin-left: 0.1rem; }\\n\\n.enrollment-icons > i {\\n  padding: 0 5px;\\n  font-size: 18px;\\n  cursor: pointer; }\\n\\n.enrollment-icons > i.fa-edit {\\n    font-size: 1.75rem; }\\n\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background: #e9ecef; }\\n\\n.enrollment-icons,\\n.enrollment-list-item,\\n.enrollment-expandable {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between; }\\n\\n.enrollment-list-item {\\n  border: 1px solid #adb5bd;\\n  border-left: none;\\n  border-right: none;\\n  min-height: 4em;\\n  background: white;\\n  z-index: 1;\\n  position: relative; }\\n\\n.enrollment-expandable,\\n.enrollment-list-item {\\n  transition: 0.25s; }\\n\\n.enrollment-expandable:hover,\\n  .enrollment-list-item:hover {\\n    background: #f9f9f9; }\\n\\n.enrollment-expandable {\\n  color: #495057;\\n  min-height: 4em;\\n  border: 1px solid #adb5bd;\\n  flex-wrap: wrap;\\n  background: #e9ecef; }\\n\\n.enrollment-actions {\\n  display: flex;\\n  align-items: center;\\n  align-self: stretch; }\\n\\n.enrollment-actions .btn-block {\\n    border-radius: 0;\\n    border-top: 0;\\n    border-right: 0;\\n    border-bottom: 0;\\n    height: 100%; }\\n\\ntable {\\n  width: 100%;\\n  border-collapse: separate; }\\n\\n.provision-element-label {\\n  font-size: 0.85rem; }\\n\\n.color {\\n  background-color: lightgrey; }\\n\\n.enrollment-text-container {\\n  min-height: 4em;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  flex: 5;\\n  padding-left: 1em;\\n  margin-right: 2em; }\\n\\n.enrollment-text-container .enrollment-text-main {\\n    font-size: 1.072rem; }\\n\\n.enrollment-text-container .enrollment-text-bold {\\n    font-weight: bolder; }\\n\\n.enrollment-text-container > span:not(:last-of-type):after {\\n    font-size: 1rem;\\n    color: #6c757d;\\n    content: \\\" / \\\"; }\\n\\n@media (max-width: 575.98px) {\\n    .enrollment-text-container > span:first-of-type:after {\\n      content: \\\"\\\";\\n      display: block; } }\\n\\n.enrollment-text-container > span:not(.enrollment-text-main) {\\n    color: #6c757d;\\n    margin-left: 0.1rem; }\\n\\n.enrollment-icons > i {\\n  padding: 0 5px;\\n  font-size: 18px;\\n  cursor: pointer; }\\n\\n.enrollment-icons > i.fa-edit {\\n    font-size: 1.75rem; }\\n\\n.btn-circle {\\n  border-radius: 15px; }\\n\\nprime-datepicker {\\n  background: #fcfcfc;\\n  display: inline-block; }\\n\\n.status-dropdown {\\n  width: auto;\\n  min-width: 100%;\\n  white-space: normal; }\\n\\n.flex-table-row {\\n  display: flex; }\\n\\n.flex-table-row > td {\\n  flex: 1; }\\n\\n.flex-table-row > td:first-child {\\n    flex: 1.5; }\\n\\n.flex-table-row > td:nth-child(2) {\\n    flex: 0.5; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nimport {Base} from '../../../../core/base/base.class';\n\nimport {DeclinedReasons, Site, SiteAccess, ProvisionedStatus, PersonalAccessType } from '../../../../models/sites.model';\nimport {loadInOut, openState, openStateChild, openStateDisable, growVertical, rotate180} from '../../../../animations/animations';\nimport {EnrollmentStatus} from '../../../../models/enrollment-status.enum';\nimport {EnrollmentRowItem} from '../../../verifier/components/enrollment-row/enrollment-row.component';\nimport {PharmaNetOrganization} from \"../../../../models/organizations.model\";\nimport {CollegeTypes} from \"../../../../models/colleges.enum\";\nimport { EnrollmentRow, RowState } from '../../../../core/enrollment-row/enrollment-row.class';\nimport { cloneDeep } from 'lodash';\nimport { Person } from '../../../../models/person.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\n\nexport interface ProvisionerRowItem {\n  title: string;\n  siteAccess: SiteAccess[];\n  site?: Site[];\n  associatedObjectId: string;\n  collegeNumber?: string;\n  licenceNumber?: string;\n}\nconst today = new Date();\n@Component({\n  selector: 'prime-provisioner-row',\n  templateUrl: './provisioner-row.component.html',\n  styleUrls: ['./provisioner-row.component.scss'],\n  animations: [openState, openStateChild, loadInOut, openStateDisable, growVertical, rotate180]\n})\n\nexport class ProvisionerRowComponent extends EnrollmentRow implements OnInit {\n\n  @Input() rowData: ProvisionerRowItem;\n  /** An unchanged copy of rowData on init, meant to track if user has made changes */\n  private rowDataOnInit: ProvisionerRowItem;\n\n  @Input() primaryType: 'User'|'Site';\n\n  @Output() onRowOpened = new EventEmitter<any>();\n  @Output() siteAccessChange = new EventEmitter<SiteAccess>();\n\n\n  /** Force showing of the provisioner details row outside of the default business logic. This is used when clicking on the row; */\n  public showProvisionerDetailsRowOverride: boolean = false;\n\n  get siteAccessRequiringAttention(): any[] {\n    if (!this.rowData) {\n      return [];\n    }\n    return this.rowData.siteAccess;\n\n  }\n\n  get sites(): Site[] {\n    if (!this.rowData) {\n      return [];\n    }\n\n    return this.rowData.site;\n\n  }\n\n\n  siteName: string;\n  siteNumber: String;\n  siteStatus: string;\n  siteAccessObject: SiteAccess;\n\n  declinedReasonSelector = 'pleaseSelect';\n  public accessType = Object.keys(PersonalAccessType);\n  public provisionedStatusType = Object.keys(ProvisionedStatus);\n\n\n  private _enrollmentStatus: string [] = [\n    EnrollmentStatus.Active,\n    EnrollmentStatus.Declined,\n    EnrollmentStatus.New,\n  ];\n\n  constructor( private dataService: PrimeDataService ) {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.rowData ) { return; }\n    this.siteAccessObject  = this.rowData.siteAccess[0];\n    this.siteStatus = this.siteAccessObject.status;\n    this.rowDataOnInit = cloneDeep(this.rowData);\n  }\n\n  onChangeStartDate(ev: Date, item: SiteAccess) {\n    item.startDate = ev;\n    this.siteAccessChange.emit(item);\n  }\n  onChangeEndDate(ev: Date, item: SiteAccess) {\n    item.endDate = ev;\n    this.siteAccessChange.emit(item);\n  }\n\n  onChangeprovisionedDate(ev , item:SiteAccess) {\n    item.provisionedDate = ev;\n    this.siteAccessChange.emit(item);\n  }\n\n  getProvisionedStatus( item:SiteAccess) {\n   return item.provisionedStatus ==ProvisionedStatus.PROVISIONED ? \"PROVISIONED\" :\"NEW\" ;\n  }\n\n  onChange(ev , item:SiteAccess){\n    this.siteAccessChange.emit(item);\n  }\n\n  get title(): string {\n    if (this.primaryType === 'User' ){\n      const name = this.rowData.title;\n      return 'Site ' + name.substring(name.lastIndexOf(' ') + 1);\n    }\n    else {\n      //TODO\n      return 'TITLE SITE';\n    }\n  }\n\n\n  getSiteAccessFromSite(site: Site) : SiteAccess {\n    // we have a list of siteAccess, need to check if it inclues site\n    let sa = this.rowData.siteAccess.find(sa => sa.site.objectId === site.objectId);\n    if (!sa){\n      const user = this.dataService.findPersonByObjectId(this.rowData.associatedObjectId);\n      const org = this.dataService.findCollectionFromSite(site)[0];\n      const origSite = org.members.find(originalSite => originalSite.objectId === site.objectId)\n\n      sa = new SiteAccess();\n      sa.person = user;\n      sa.site = origSite;\n      user.siteAccess.push(sa);\n      origSite.siteAccess.push(sa);\n      this.dataService.siteAccesses.push(sa);\n\n      this.rowData.siteAccess.push(sa);\n    }\n\n    return sa;\n  }\n\n  get orgName(): String {\n    const name = this.rowData.title;\n    return name;\n  }\n\n  getCollegeNumber(): string{\n    if (this.primaryType !== 'Site') {\n      // In current designs, we should NEVER care about college except for Site tables.\n      return null;\n    }\n    if (!this.rowData.collegeNumber || this.rowData.collegeNumber.length === 0 || this.rowData.collegeNumber === 'pleaseSelect'){\n      return 'n/a';\n    }\n\n    return CollegeTypes[this.rowData.collegeNumber];\n  }\n\n  getLicenceNumber(): string{\n    if (this.primaryType !== 'Site') {\n      // In current designs, we should NEVER care about college except for Site tables.\n      return null;\n    }\n    if (!this.rowData.licenceNumber || this.rowData.licenceNumber.length === 0){\n      return 'n/a';\n    }\n\n    return this.rowData.licenceNumber;\n  }\n\n\n  declinedReasonValue(selection) {\n    return DeclinedReasons[selection];\n  }\n\n  get DeclinedReasons() {\n    return Object.keys(DeclinedReasons);\n  }\n\n  declinedReasonCurrValue() {\n    const selection = this.declinedReasonSelector;\n    return DeclinedReasons[selection] ? DeclinedReasons[selection] : '';\n  }\n\n  private getRandomElFromArray<T>(arr: T[]): T {\n    return arr[Math.ceil(Math.random() * arr.length) - 1];\n  }\n\n  toggleRow() {\n    if (this.canOpen()) {\n      this.openState = this.openState === RowState.Opened ? RowState.Closed : RowState.Opened;\n      if (this.openState === RowState.Opened) {\n        this.onRowOpened.emit(this);\n      }\n    }\n    // Custom provisioner functionality: Also toggle visibility of the override row.\n    this.showProvisionerDetailsRowOverride = !this.showProvisionerDetailsRowOverride;\n  }\n\n  closeRow() {\n    this.openState = RowState.Closed;\n  }\n\n\n  canOpen() {\n    return this.siteStatus === 'Declined';\n  }\n\n\n  accept() {\n    this.siteStatus = 'AcceptEnrollment';\n    this.siteAccessObject.provisionedDate = new Date();\n    this.siteAccessObject.provisionedStatus = ProvisionedStatus.PROVISIONED;\n    this.siteAccessObject.status = EnrollmentStatus.Active;\n    this.siteAccessChange.emit(this.siteAccessObject);\n  }\n\n  reject(){\n    this.siteStatus = 'DeclinedEnrollment';\n    this.siteAccessObject.provisionedStatus = ProvisionedStatus.REJECTED;\n    this.siteAccessObject.status = EnrollmentStatus.Declined;\n    // this.rowData.siteAccess[0].status = EnrollmentStatus.Declined; //old\n    this.siteAccessChange.emit(this.siteAccessObject)\n  }\n\n  // TODO - Replace SiteStatus with these calls\n  get isAccepted(): boolean {\n    return this.siteAccessObject.isProvisioned;\n  }\n\n  get isRejected(): boolean {\n    return this.siteAccessObject.provisionedStatus === ProvisionedStatus.REJECTED;\n  }\n\n  get  isNew(): boolean {\n    if (!this.siteAccessObject) return false;\n\n    if (!(this.siteAccessObject.status === EnrollmentStatus.New || this.siteAccessObject.status === EnrollmentStatus.Provisioning)){\n      return false;\n    }\n\n    if (!(this.siteAccessObject.provisionedStatus === ProvisionedStatus.NOT_PROVISIONED)) {\n      return false;\n    }\n\n    return true;\n    // return this.siteAccessObject.status === EnrollmentStatus.New && this.siteAccessObject.provisionedStatus === ProvisionedStatus.NOT_PROVISIONED;\n  }\n\n\n\n  // If the row was declined prior to any user action (on the page at this time)\n  get isPreviouslyRejected(): boolean {\n    // We need to check if it was 'rejected' at the time of component load.\n    return this.rowDataOnInit.siteAccess[0].status === EnrollmentStatus.Declined;\n  }\n\n\n  goToNotePage(){\n    console.log('todo');\n  }\n}\n\n\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        User status\\n        <i class=\\\"fa fa-reply fa-flip-horizontal\\\" aria-hidden=\\\"true\\\"></i>\\n      </div>\\n      <div class=\\\"card-body pie-chart-container\\\" #pieChartContainer>\\n        <ngx-charts-pie-chart\\n          [view]='pieChartDimension'\\n          [results]=\\\"pieChartData\\\"\\n          [scheme]=\\\"'natural'\\\"\\n          legend=true\\n          legendTitle=''\\n          (select)='onPieChartClick($event)'>\\n        </ngx-charts-pie-chart>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        Application Progress\\n\\n        <form class=\\\"form-inline\\\">\\n          <select id=\\\"applicationProgressType\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"applicationProgressSelector\\\"\\n                  (change)=\\\"applicationProgressSelector = $event.target.value\\\">\\n            <option *ngFor=\\\"let type of SiteAccessProgressSteps\\\" value=\\\"{{type}}\\\">\\n              {{type}}\\n            </option>\\n          </select>\\n          <i class=\\\"fa fa-reply fa-flip-horizontal ml-2\\\" aria-hidden=\\\"true\\\"></i>\\n        </form>\\n\\n      </div>\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item d-flex justify-content-between\\\" *ngFor=\\\"let siteAccess of applicationProgress()\\\">\\n            <span class='application-text' tooltip=\\\"{{ siteAccess.person.name }} &ndash; {{ siteAccess.site.name}}\\\" container=\\\"body\\\"\\n                  delay=350>\\n              {{ siteAccess.person.name }} &ndash; {{ siteAccess.site.name}}\\n            </span>\\n          <prime-info-button [targetId]=\\\"siteAccess.person.objectId\\\">\\n          </prime-info-button>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"","module.exports = \"prime-provisioner-widgets .application-text {\\n  white-space: nowrap;\\n  display: inline-block;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  max-width: calc(100% - 3rem); }\\n\\nprime-provisioner-widgets .list-group, prime-provisioner-widgets .card-body {\\n  height: 17rem;\\n  overflow-y: scroll;\\n  position: relative; }\\n\\nprime-provisioner-widgets .list-group .list-group-item, prime-provisioner-widgets .card-body .list-group-item {\\n    min-height: 44px; }\\n\\n.ngx-charts {\\n  float: right !important;\\n  margin-right: -7.5%; }\\n\\n.legend-labels {\\n  width: 100px !important;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  max-height: unset !important; }\\n\\n.legend-labels > li:first-of-type {\\n    padding-top: 1.75rem; }\\n\\n.chart-legend .legend-label {\\n  color: #495057 !important; }\\n\\n.chart-legend .legend-label .active .legend-label-text {\\n    text-decoration: underline; }\\n\\n.chart-legend .legend-label > ngx-charts-legend-entry > span {\\n    display: block;\\n    transition: -webkit-transform 0.2s;\\n    transition: transform 0.2s;\\n    transition: transform 0.2s, -webkit-transform 0.2s;\\n    -webkit-font-smoothing: subpixel-antialiased;\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n    -webkit-transform: translateZ(0);\\n            transform: translateZ(0); }\\n\\n.chart-legend .legend-label .active {\\n    transition: -webkit-transform 0.2s;\\n    transition: transform 0.2s;\\n    transition: transform 0.2s, -webkit-transform 0.2s;\\n    -webkit-transform: translateY(-2.5px) scale(1.05) translateZ(0);\\n            transform: translateY(-2.5px) scale(1.05) translateZ(0); }\\n\\n.pie-chart-container {\\n  padding: 0; }\\n\"","import { Component, OnInit, Input, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport * as moment from 'moment';\nimport { Person } from '../../../../models/person.model';\nimport { ProvisionerService } from '../../../../services/provisioner.service';\nimport { SiteAccessProgressSteps, SiteAccess } from '../../../../models/sites.model';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\n\n@Component({\n  selector: 'prime-provisioner-widgets',\n  templateUrl: './provisioner-widgets.component.html',\n  styleUrls: ['./provisioner-widgets.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ProvisionerWidgetsComponent implements OnInit {\n\n  @Input() siteAccess: SiteAccess[] = [];\n  @Input() people: Person[] = [];\n  public applicationProgressSelector: SiteAccessProgressSteps;\n  public pieChartData;\n\n  @ViewChild('pieChartContainer') pieChartContainer: ElementRef;\n\n  constructor(private provisionerService: ProvisionerService) { }\n\n  //Current max width, but doesn't really play nice with mobile views\n  public pieChartDimension: number[] = [];\n\n  ngOnInit() {\n    this.applicationProgressSelector = SiteAccessProgressSteps.Provisioner;\n    this.pieChartData = this.calculatePieChartData();\n\n    // Very hacky and should be for prototype only! Possibly remove/replace\n    // entire chart library because this one does not play nicely and on re-size\n    // it continually breaks / infinitely grows.  The height value determines if\n    // the entire legend is visible.\n    this.pieChartDimension = [\n      this.pieChartContainer.nativeElement.offsetWidth,\n      this.pieChartContainer.nativeElement.offsetHeight,\n    ]\n  }\n\n  // Make enum accessible to template\n  get SiteAccessProgressSteps() {\n    return Object.keys(SiteAccessProgressSteps);\n  }\n\n  // Make enum iterable strings accessible in template\n  get EnrollmentStatus() {\n    return Object.keys(EnrollmentStatus);\n  }\n\n\n  applicationProgress(){\n    let selection: SiteAccessProgressSteps = this.applicationProgressSelector;\n\n    // Copy the array so our sorting doesn't mess up other places\n    let result: SiteAccess[] = this.siteAccess.concat();\n    // Filter to only show 'problem' results, to match enrollment list\n    result = result.filter(x => x.alert);\n\n    return result.filter(sa => sa.progress === selection);\n  }\n\n  calculatePieChartData() : {name: string, value: number}[] {\n    const validStatusNamesArr = [EnrollmentStatus.Active.valueOf(), EnrollmentStatus.Provisioning.valueOf()]\n\n    const statusArr = this.EnrollmentStatus.map(status => {\n      return {\n        name: status,\n        value: this.siteAccess.filter(sa => sa.status === status ).length\n      }\n    })\n\n    return statusArr.filter(itm => {\n      return validStatusNamesArr.indexOf(itm.name) > -1;\n    });\n  }\n\n  onPieChartClick($event){\n    // console.log('onPieChartClick', $event);\n    this.provisionerService.enrollmentViewTypeSelector = $event.name;\n  }\n\n  formatDate(date: Date){\n    return moment(date).format('DD/MM/YYYY');\n  }\n\n  colorScheme = {\n    // primary/secondary/etc, from variables.scss\n    domain: ['#036', '#fcba19', '#486446', '#96c0e6']\n  };\n\n}\n","module.exports = \"<prime-enrollment-list\\n  [rowItems]=\\\"enrollmentBySiteData\\\"\\n  primaryType='Site'\\n></prime-enrollment-list>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { PrimeDataService } from '../../../../../services/prime-data.service';\nimport {EnrollmentRowItem} from '../../../../verifier/components/enrollment-row/enrollment-row.component';\n\n@Component({\n  selector: 'prime-provisioner-dash-by-site',\n  templateUrl: './provisioner-dash-by-site.component.html',\n  styleUrls: ['./provisioner-dash-by-site.component.scss']\n})\nexport class ProvisionerDashBySiteComponent{\n\n  constructor(private dataService: PrimeDataService) { }\n\n  get enrollmentBySiteData(): EnrollmentRowItem[] {\n    return this.dataService.getEnrollmentByOrganization();\n  }\n\n}\n","module.exports = \"<prime-enrollment-list\\n  [rowItems]=\\\"enrollmentByUserData\\\"\\n  [primaryType]='\\\"User\\\"'\\n></prime-enrollment-list>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport {EnrollmentRowItem} from \"../../../../verifier/components/enrollment-row/enrollment-row.component\";\nimport {PrimeDataService} from \"../../../../../services/prime-data.service\";\n\n@Component({\n  selector: 'prime-provisioner-dash-by-user',\n  templateUrl: './provisioner-dash-by-user.component.html',\n  styleUrls: ['./provisioner-dash-by-user.component.scss']\n})\nexport class ProvisionerDashByUserComponent{\n\n  constructor(private dataService: PrimeDataService) { }\n\n  get enrollmentByUserData(): EnrollmentRowItem[] {\n    return this.dataService.getProvisionerByUser();\n  }\n\n}\n","module.exports = \"<prime-alert>\\n  System Notification: Server will be down for 2 hours maintenance at 14:30 PT.\\n</prime-alert>\\n\\n<prime-dashboard-bar\\n  hideAddUserButton = true>\\n</prime-dashboard-bar>\\n\\n<!-- <router-outlet name=\\\"dashboard\\\"></router-outlet> -->\\n<router-outlet></router-outlet>\\n\\n<hr>\\n\\n<!-- disable the pie chart etc..\\n<prime-provisioner-widgets\\n  [siteAccess]=\\\"siteAccesses\\\"\\n  [people]=\\\"people\\\">\\n</prime-provisioner-widgets>\\n-->\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SiteAccess } from '../../../../models/sites.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { Person } from '../../../../models/person.model';\nimport {Address} from \"../../../../models/addresses.model\";\nimport {environment} from \"../../../../../environments/environment\";\nimport { DummyDataService } from '../../../../services/dummy-data.service';\n\n\n@Component({\n  selector: 'prime-provisioner-dashboard',\n  templateUrl: './provisioner-dashboard.component.html',\n  styleUrls: ['./provisioner-dashboard.component.scss']\n})\nexport class ProvisionerDashboardComponent implements OnInit {\n\n  constructor(private dataService: PrimeDataService) { }\n\n\n\n  ngOnInit() {\n  }\n\n  get siteAccesses(): SiteAccess[] {\n    return this.dataService.siteAccesses;\n  }\n\n  get people(): Person[] {\n    return this.dataService.people;\n  }\n\n}\n","module.exports = \"<prime-core-breadcrumb>\\n  <div left>\\n    <a routerLink=\\\"/provisioner/\\\">Dashboard</a> /\\n    <strong>Provision by {{ IS_SHOWING_PERSON ? \\\"User\\\" : \\\"Site\\\" }}</strong>\\n  </div>\\n</prime-core-breadcrumb>\\n\\n<prime-page-framework>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"IS_SHOWING_PERSON; else siteDetails\\\">\\n     <div class=\\\"col mx-3\\\">\\n      <div class=\\\"form-group row has-float-label\\\">\\n        <label for=\\\"legalName\\\">\\n          Legal Name\\n        </label>\\n        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"legalName\\\" name=\\\"legalName\\\" [value]=\\\"person?.legalName\\\">\\n      </div>\\n\\n       <div class=\\\"form-group row has-float-label\\\">\\n         <label for=\\\"DOB\\\">\\n           Date of Birth\\n         </label>\\n         <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"DOB\\\" name=\\\"DOB\\\" [value]=\\\"person?.dateOfBirthShort\\\">\\n       </div>\\n\\n       <div class=\\\"form-group row has-float-label\\\">\\n         <label for=\\\"email\\\">\\n           Email\\n         </label>\\n         <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [value]=\\\"person?.email ? person.email : ''\\\">\\n       </div>\\n\\n\\n       <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"userclass\\\">\\n            User Class\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"userclass\\\" name=\\\"userclass\\\" value=\\\"Pharmacist\\\">\\n        </div>\\n\\n\\n     </div>\\n\\n    <div class=\\\"col mx-3\\\">\\n\\n      <div class=\\\"form-group row has-float-label\\\">\\n        <label for=\\\"prefName\\\">\\n          Preferred Name\\n        </label>\\n        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"prefName\\\" name=\\\"prefName\\\" [value]=\\\"person?.name\\\">\\n      </div>\\n\\n      <div class=\\\"form-group row has-float-label\\\">\\n        <label for=\\\"phone\\\">\\n          Phone Number\\n        </label>\\n        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" [value]=\\\"person?.phone ? person.phone : ''\\\">\\n      </div>\\n\\n      <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"postcalCode\\\">\\n            Postal Code\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"postcalCode\\\" name=\\\"postcalCode\\\" [value]=\\\"person?.address.postal\\\">\\n        </div>\\n\\n\\n\\n\\n\\n        <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"limits\\\">\\n            Practitioner College ID\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"limits\\\" name=\\\"limits\\\"  [value]=\\\"person?.getLicenseNumber()\\\">\\n        </div>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"row\\\"  *ngIf=\\\"IS_SHOWING_PERSON;\\\">\\n    <div class=\\\"col mx-3\\\">\\n      <div class=\\\"form-group row has-float-label\\\">\\n        <label for=\\\"limits\\\">\\n          Limits and Conditions\\n        </label>\\n        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"limits\\\" name=\\\"limits\\\"  value=\\\" \\\">\\n      </div>\\n    </div>\\n\\n    <!-- Removed as a result of prime-229\\n    <div class=\\\"col mx-3\\\">\\n      <div class=\\\"form-group row has-float-label\\\">\\n        <label for=\\\"renewalDate\\\">\\n          Renewal Date\\n        </label>\\n        <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"renewalDate\\\" name=\\\"renewalDate\\\" [value]=\\\"person?.renewalDateShort\\\" >\\n      </div>\\n    </div>\\n    -->\\n\\n  </div>\\n\\n  <ng-template #siteDetails>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col mx-3\\\">\\n        <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"collection\\\">\\n            Organisation\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"collection\\\" name=\\\"collection\\\" [value]=\\\"findCollectionFromSite(site)?.title\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col mx-3\\\">\\n        <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"sitename\\\">\\n            Site\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"sitename\\\" name=\\\"sitename\\\" [value]=\\\"site?.name\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col mx-3\\\">\\n        <div class=\\\"form-group row has-float-label\\\">\\n          <label for=\\\"address\\\">\\n            Address\\n          </label>\\n          <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" [value]=\\\"site?.address\\\">\\n        </div>\\n      </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col mx-3\\\">\\n          <div class=\\\"form-group row has-float-label\\\">\\n            <label for=\\\"vendor\\\">\\n              Vendor\\n            </label>\\n            <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"vendor\\\" name=\\\"vendor\\\" [value]=\\\"site?.vendor\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col mx-3\\\">\\n          <div class=\\\"form-group row has-float-label\\\">\\n            <label for=\\\"siteType\\\">\\n              Site Type\\n            </label>\\n            <input type=\\\"text\\\" disabled class=\\\"form-control\\\" id=\\\"siteType\\\" name=\\\"siteType\\\" [value]=\\\"site?.siteType\\\">\\n          </div>\\n         </div>\\n      </div>\\n\\n\\n  </ng-template>\\n\\n</prime-page-framework>\\n\\n<div *ngIf=\\\"IS_SHOWING_PERSON; else userList\\\">\\n  <prime-provisioner-list\\n    [rowItems]=\\\"provisionerOrgSiteData\\\"\\n    primaryType='User'\\n  ></prime-provisioner-list>\\n</div>\\n<ng-template #userList>\\n  <prime-provisioner-list\\n    [rowItems]=\\\"provisionerUserData\\\"\\n    primaryType='Site'\\n    [parentSite]='site'\\n  ></prime-provisioner-list>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Person } from '../../../../models/person.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { Site } from '../../../../models/sites.model';\nimport { PharmaNetOrganization } from '../../../../models/organizations.model';\nimport { EnrollmentRowItem } from '../../../verifier/components/enrollment-row/enrollment-row.component';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport {CollegeTypes} from \"../../../../models/colleges.enum\";\nimport {ProvisionerRowItem} from \"../../components/provisioner-row/provisioner-row.component\";\n\n@Component({\n  selector: 'prime-provisioner-details',\n  templateUrl: './provisioner-details.component.html',\n  styleUrls: ['./provisioner-details.component.scss']\n})\nexport class ProvisionerDetailsComponent implements OnInit {\n  sub: Subscription;\n  provisionByType: ProvisionByType;\n  person: Person;\n  site: Site;\n  collection: PharmaNetOrganization;\n\n  constructor(private route: ActivatedRoute, private dataService: PrimeDataService, private router: Router, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.sub = this.route.data\n      .subscribe(data => {\n        if (data.type){\n          this.provisionByType = data.type;\n          console.log('ProvisionerDetailsComponent initailized as:', this.provisionByType);\n        }\n        else {\n          throw \"ProvisionerDetails unable to initialize. It depends on retrieving data from the route, but the data was not there.  Is provisioner-routing.module.ts configured with data for these routes?\"\n        }\n      });\n\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      if (this.IS_SHOWING_PERSON) {\n        this.person = this.dataService.findPersonByObjectId(id);\n      } else {\n        this.site = this.dataService.findSiteByObjectId(id);\n      }\n    }\n\n    // If no ID, or neither person or site is defined, we want to redirect back\n    // This usually happens when the user refreshes the page and the objectId's are re-generated\n    if (!id || id.length === 0 || ( !this.person && !this.site ) ){\n      const url = this.router.url.split('/');\n      url.pop(); //Remove objectID, which we know is last item in array\n      const type = url.pop(); //Will be 'user' or 'string';\n      this.router.navigate([`/provisioner/dashboard/${type}`]);\n      console.error('Provisioner Details objectId (in url) refers to an object which does not exist! Removed objectId from URl and navigated back to Provisioner Dashboard.');\n      return;\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  get IS_SHOWING_PERSON(): Boolean {\n    return this.provisionByType === ProvisionByType.user;\n  }\n\n  get IS_SHOWING_SITE(): Boolean {\n    return this.provisionByType === ProvisionByType.site;\n  }\n\n  // no longer used.removed as a part of PRIME-164\n  get provisionerSiteData(): ProvisionerRowItem[] {\n    if (!this.person) return null;\n    return this.dataService.getProvisionerDetailsByUser(this.person);\n  }\n\n  get provisionerOrgSiteData(): ProvisionerRowItem[] {\n    if (!this.person) return null;\n    return this.dataService.getProvisionerOrgDetailsByUser(this.person);\n  }\n\n\n  get provisionerUserData(): ProvisionerRowItem[] {\n    if (!this.site) return null;\n    return this.dataService.getProvisionerDetailsBySite(this.site);\n  }\n\n  findCollectionFromSite(site: Site): PharmaNetOrganization {\n    return this.dataService.findCollectionFromSite(site)[0];\n  }\n\n  collegeCurrValue(selection) {\n    return CollegeTypes[selection] ? CollegeTypes[selection] : '';\n  }\n}\n\n\n\nenum ProvisionByType {\n  user = \"user\",\n  site = \"site\",\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProvisionerDashboardComponent } from './pages/provisioner-dashboard/provisioner-dashboard.component';\nimport { ProvisionerDetailsComponent } from './pages/provisioner-details/provisioner-details.component';\nimport {DashboardByUserComponent} from \"../verifier/pages/dashboard-page/dashboard-by-user/dashboard-by-user.component\";\nimport {DashboardBySiteComponent} from \"../verifier/pages/dashboard-page/dashboard-by-site/dashboard-by-site.component\";\nimport {ProvisionerDashBySiteComponent} from \"./pages/provisioner-dashboard/provisioner-dash-by-site/provisioner-dash-by-site.component\";\nimport {ProvisionerDashByUserComponent} from \"./pages/provisioner-dashboard/provisioner-dash-by-user/provisioner-dash-by-user.component\";\nimport {UserEnrollmentComponent} from \"../verifier/pages/user-enrollment/user-enrollment.component\";\nimport {SiteEnrollmentComponent} from \"../verifier/pages/site-enrollment/site-enrollment.component\";\n\n\n\nexport const routes: Routes = [\n  {\n    path: 'dashboard',\n    component: ProvisionerDashboardComponent,\n    children: [\n      {\n        path: 'user',\n        component: ProvisionerDashByUserComponent,\n      },\n      {\n        path: 'site',\n        component: ProvisionerDashBySiteComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'user'\n      }\n    ]\n  },\n  {\n    path: 'details',\n    children: [\n      {\n        path: 'user',\n        component: ProvisionerDetailsComponent,\n        data: { type: 'user' }\n      },\n      {\n        path: 'site',\n        component: ProvisionerDetailsComponent,\n        data: { type: 'site' }\n      },\n      {\n        path: 'user/:id',\n        component: ProvisionerDetailsComponent,\n        data: { type: 'user' }\n      },\n      {\n        path: 'site/:id',\n        component: ProvisionerDetailsComponent,\n        data: { type: 'site' }\n      },\n      {\n        path: '**',\n        redirectTo: 'user'\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProvisionerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ProvisionerDashboardComponent } from './pages/provisioner-dashboard/provisioner-dashboard.component';\nimport { CoreModule } from '../core/core.module';\nimport { ProvisionerRoutingModule } from './provisioner-routing.modules';\nimport { VerifierModule } from '../verifier/verifier.module';\nimport { ProvisionerWidgetsComponent } from './components/provisioner-widgets/provisioner-widgets.component';\nimport { TooltipModule } from 'ngx-bootstrap';\nimport { ProvisionerDetailsComponent } from './pages/provisioner-details/provisioner-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProvisionerRowComponent } from './components/provisioner-row/provisioner-row.component';\nimport { ProvisionerListComponent } from './components/provisioner-list/provisioner-list.component';\nimport { ProvisionerDashBySiteComponent } from './pages/provisioner-dashboard/provisioner-dash-by-site/provisioner-dash-by-site.component';\nimport { ProvisionerDashByUserComponent } from './pages/provisioner-dashboard/provisioner-dash-by-user/provisioner-dash-by-user.component';\nimport { PrimeDataService } from '../../services/prime-data.service';\nimport { DummyDataService } from '../../services/dummy-data.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    ProvisionerRoutingModule,\n    NgxChartsModule,\n    VerifierModule,\n    TooltipModule.forRoot(),\n    FormsModule\n\n  ],\n  providers: [\n    PrimeDataService,\n    DummyDataService\n  ],\n  declarations: [\n    ProvisionerDashboardComponent,\n    ProvisionerWidgetsComponent,\n    ProvisionerDetailsComponent,\n    ProvisionerRowComponent,\n    ProvisionerListComponent,\n    ProvisionerDashBySiteComponent,\n    ProvisionerDashByUserComponent\n  ]\n})\n\nexport class ProvisionerModule {\n   // This constructor fires when (and only when) the module is lazyloaded, so\n   // should be a max of once.\n  constructor(private dataService: PrimeDataService, private dummyDataService: DummyDataService){\n    this.dummyDataService.populateWithDemoData(this.dataService);\n  }\n}\n"],"sourceRoot":""}