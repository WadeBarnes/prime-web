import { Component, OnInit, ElementRef } from '@angular/core';

/**
 * The "Page Framework" is a template to be used on Prime pages to ensure
 * consistent layout.  It applies to most pages, but should NOT be used on
 * Dashboards, or full-width table components.
 *
 * The left column is used for titles (auto-generated)
 * The middle column is used for the main page content
 * The right column is used for additional/supplementary content.
 *
 * The titles are autogenerated based on the .prime-title class
 * Manually specify what goes in the right column via the "right" attribute
 *
 *
 * <prime-page-framework>
 *  <div>This will go in the middle column</div>
 *  <p>So will this</p>
 *  <h2 class='prime-title'>This title will be copied to the title column</h2>
 *  <div right> This will go in the right column</div>
 * </prime-page-framework>
 *
 * @export
 * @class PageFrameworkComponent
 * @implements {OnInit}
 */
@Component({
  selector: 'prime-page-framework',
  templateUrl: './page-framework.component.html',
  styleUrls: ['./page-framework.component.scss']
})
export class PageFrameworkComponent implements OnInit {

  titles: Title[];

  constructor(private elem: ElementRef) { }

  ngOnInit(){
    let elements = this.elem.nativeElement.querySelectorAll('.prime-title');
    this.titles = this.processTitlesFromElements(elements);
  }

  processTitlesFromElements(elements): Title[]{
    return Array.from(elements).map((el: any) => {
      return {
        href: el.id,
        name: el.innerText
      }
    })
  }

  scrollTo(id: string){
    return document.getElementById(id).scrollIntoView({
      block: "start",
      behavior: "smooth"
    });
  }

}

interface Title {
  href: string;
  name: string;
}
