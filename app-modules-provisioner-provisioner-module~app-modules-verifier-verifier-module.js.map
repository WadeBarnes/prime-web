{"version":3,"sources":["webpack:///./src/app/core/enrollment-list/enrollment-list.class.ts","webpack:///./src/app/modules/verifier/components/enrollment-list/enrollment-list.component.html","webpack:///./src/app/modules/verifier/components/enrollment-list/enrollment-list.component.scss","webpack:///./src/app/modules/verifier/components/enrollment-list/enrollment-list.component.ts","webpack:///./src/app/modules/verifier/components/enrollment-row/enrollment-row.component.html","webpack:///./src/app/modules/verifier/components/enrollment-row/enrollment-row.component.scss","webpack:///./src/app/modules/verifier/components/enrollment-row/enrollment-row.component.ts","webpack:///./src/app/modules/verifier/components/miller-columns/miller-columns.component.html","webpack:///./src/app/modules/verifier/components/miller-columns/miller-columns.component.scss","webpack:///./src/app/modules/verifier/components/miller-columns/miller-columns.component.ts","webpack:///./src/app/modules/verifier/components/miller-item-checkbox/miller-item-checkbox.component.html","webpack:///./src/app/modules/verifier/components/miller-item-checkbox/miller-item-checkbox.component.scss","webpack:///./src/app/modules/verifier/components/miller-item-checkbox/miller-item-checkbox.component.ts","webpack:///./src/app/modules/verifier/components/site-access-widgets/site-access-widgets.component.html","webpack:///./src/app/modules/verifier/components/site-access-widgets/site-access-widgets.component.scss","webpack:///./src/app/modules/verifier/components/site-access-widgets/site-access-widgets.component.ts","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-site/dashboard-by-site.component.html","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-site/dashboard-by-site.component.scss","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-site/dashboard-by-site.component.ts","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-user/dashboard-by-user.component.html","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-user/dashboard-by-user.component.scss","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-by-user/dashboard-by-user.component.ts","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-page.component.html","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-page.component.scss","webpack:///./src/app/modules/verifier/pages/dashboard-page/dashboard-page.component.ts","webpack:///./src/app/modules/verifier/pages/site-enrollment/site-enrollment.component.html","webpack:///./src/app/modules/verifier/pages/site-enrollment/site-enrollment.component.scss","webpack:///./src/app/modules/verifier/pages/site-enrollment/site-enrollment.component.ts","webpack:///./src/app/modules/verifier/pages/user-enrollment/user-enrollment.component.html","webpack:///./src/app/modules/verifier/pages/user-enrollment/user-enrollment.component.scss","webpack:///./src/app/modules/verifier/pages/user-enrollment/user-enrollment.component.ts","webpack:///./src/app/modules/verifier/verifier-routing.modules.ts","webpack:///./src/app/modules/verifier/verifier.module.ts"],"names":[],"mappings":"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","file":"app-modules-provisioner-provisioner-module~app-modules-verifier-verifier-module.js","sourcesContent":["import {Base} from '../base/base.class';\nimport {Input} from '@angular/core';\nimport {SiteAccess} from '../../models/sites.model';\n\n// Define for constant string\nexport const defaultViewSelector = 'View All';\n\nexport abstract class EnrollmentList extends Base {\n\n  @Input() rowItems: any[];\n\n  /** Internal representation of data used in for loops. Can be filtered by search. */\n  public data: any[];\n\n  // Valid values: EnrollmentStatus enums + \"All\"\n  public viewTypeSelector  = defaultViewSelector;\n\n  /**\n   * Filters all expandable rows, making sure changes propagate up to the top\n   * level rows. Just pass in a function which will filter, with its only\n   * parameter being the ExpandableRow/SiteAccess\n   *\n   * @private\n   * @param {(sa: SiteAccess) => boolean} fn Takes a SiteAccess as a parameter\n   * @memberof ApplEnrollmentListComponent\n   */\n  protected deepSearch(fn: (sa: SiteAccess) => boolean    ){\n\n    // Clone the source data so our changes do not wind up persisting in the underlying data\n    const cloned = this.rowItems.map(x => Object.assign({}, x));\n\n    this.data = cloned.map(enrollmentRow => {\n      // Hide all subrows that don't match search results.\n      enrollmentRow.expandableRows = enrollmentRow.expandableRows\n        .filter(expandableRow => {\n          return fn(expandableRow);\n        });\n\n      return enrollmentRow;\n    }).filter(enrollmentRow => {\n      // Only show rows with search results\n      return enrollmentRow.expandableRows.length;\n    });\n  }\n\n  // Searches based on the expandable rows, per business requirements (i.e. site name, NOT collection name!)\n  protected searchSites(phrase){\n\n    if (phrase.length === 0){\n      return this.data = this.rowItems;\n    }\n\n    this.deepSearch(expandableRow => {\n      return expandableRow.title.toLowerCase().indexOf(phrase.toLowerCase()) !== -1;\n    });\n  }\n\n  // Searches based on the top level row (i.e. user name)\n  protected searchUsers(phrase){\n    this.data = this.rowItems.filter(x => {\n      return x.title.toLowerCase().indexOf(phrase.toLowerCase()) !== -1;\n    });\n  }\n\n  /**\n   * Can be overwritten by EnrollmentList, but by default will reverse rowItems\n   */\n  sort() {\n    this.rowItems.reverse();\n  }\n\n  // Abstract function to be implemented in derived class\n  abstract get EnrollmentStatus();\n  abstract search(phrase);\n  // abstract rowOpened<T>(item: T); //original -  desired!\n  abstract rowOpened(item); //Remove typings to pass warnings.\n}\n","module.exports = \"<div class=\\\"enrollment-list-controls bg-light\\\">\\n  <form class=\\\"form-inline\\\">\\n    <span class=\\\"has-float-label\\\">\\n        <input class=\\\"form-control bg-transparent\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" (input)=\\\"search($event.target.value)\\\">\\n        <span>Search</span>\\n    </span>\\n  </form>\\n\\n  <form class=\\\"form-inline\\\">\\n\\n    <label class=\\\"has-float-label\\\">\\n      <button class='btn btn-default mr-3' (click)=\\\"sort()\\\">\\n        <i class=\\\"fa fa-sort-alpha-asc\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <prime-add-user-button\\n        *ngIf=\\\"primaryType === 'User'\\\"\\n        (onAddNewUser)='configureUserWithOrgs($event)'>\\n      </prime-add-user-button>\\n    </label>\\n    <!--\\n      <label class=\\\"has-float-label\\\">\\n        <select id=\\\"enrollmentViewSelector\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"viewTypeSelector\\\" (change)=\\\"viewTypes($event.target.value)\\\">\\n            <option value=\\\"View All\\\">All</option>\\n            <option *ngFor=\\\"let status of EnrollmentStatus\\\" value=\\\"{{status}}\\\">\\n              {{status}}\\n            </option>\\n        </select>\\n        <span>View</span>\\n      </label>\\n      -->\\n  </form>\\n</div>\\n\\n<div class=\\\"enrollment-item-container\\\">\\n  <div class=\\\"enrollment-item-inner\\\">\\n    <prime-enrollment-row\\n      *ngFor=\\\"let item of data\\\"\\n      [rowData]='item'\\n      [primaryType]='primaryType'\\n      (onRowOpened)='rowOpened($event)'>\\n    </prime-enrollment-row>\\n  </div>\\n</div>\\n\"","module.exports = \".enrollment-item-container {\\n  border-top: none;\\n  height: 25rem;\\n  overflow-y: scroll; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border-right: 2px solid #dee2e6;\\n    border-left: 2px solid #dee2e6;\\n    border-bottom: 2px solid #dee2e6;\\n    min-height: 100%; }\\n  .enrollment-list-controls {\\n  border: 2px solid #dee2e6;\\n  min-height: 4em;\\n  padding: 1em;\\n  border-bottom: none;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n  .enrollment-view-selector {\\n  min-width: 5em; }\\n  .has-float-label + .has-float-label {\\n  margin-top: initial; }\\n  .has-float-label + .has-float-label select {\\n    height: auto; }\\n\"","import {Component, Input, OnChanges, OnDestroy, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport { VerifierService } from '../../../../services/verifier.service';\nimport { EnrollmentRowComponent } from '../enrollment-row/enrollment-row.component';\nimport {defaultViewSelector, EnrollmentList} from '../../../../core/enrollment-list/enrollment-list.class';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { Person } from '../../../../models/person.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { OrganizationAccess } from '../../../../models/organization-access.model';\nimport { SiteAccess } from '../../../../models/sites.model';\n\n@Component({\n  selector: 'prime-enrollment-list',\n  templateUrl: './enrollment-list.component.html',\n  styleUrls: ['./enrollment-list.component.scss']\n})\nexport class EnrollmentListComponent extends EnrollmentList implements OnInit, OnChanges, OnDestroy {\n\n  @ViewChildren(EnrollmentRowComponent) rowElements: QueryList<EnrollmentRowComponent>\n\n  /** What the primary/top level rows are. Changes labels and some other layout configurations. */\n  @Input() primaryType: \"User\"|\"Site\" = \"Site\";\n\n\n  //Convert enum to iterable array\n  get EnrollmentStatus() {\n    return Object.keys(this.verifierService.VerifierEnrollmentStatus);\n    // return [ EnrollmentStatus.Active]\n  }\n\n  constructor(private verifierService: VerifierService, private dataService: PrimeDataService) {\n    super();\n\n    verifierService.$enrollmentViewType.subscribe(viewType => {\n      this.viewTypeSelector = viewType;\n      this.viewTypes(viewType);\n    });\n  }\n\n  ngOnInit() {\n    this.data = this.rowItems;\n  }\n\n  ngOnChanges(changes){\n    // Handle rows being added to rowItems, such as the \"Add User Button\" when on the user view\n    if (changes.rowItems && changes.rowItems.currentValue && changes.rowItems.previousValue\n      && changes.rowItems.currentValue.length > changes.rowItems.previousValue.length){\n      this.data = this.rowItems;\n    }\n  }\n\n  ngOnDestroy(){\n    this.verifierService.enrollmentViewTypeSelector = defaultViewSelector;\n  }\n\n  rowOpened(item: EnrollmentRowComponent) {\n    // console.log(\"rowOpened\", { item, rowElements: this.rowElements });\n    this.rowElements.filter(x => x !== item)\n      .map(x => x.closeRow());\n  }\n\n  search(phrase){\n    if (this.primaryType === 'Site') {\n      this.searchSites(phrase);\n    }\n    else if (this.primaryType === 'User'){\n      this.searchUsers(phrase);\n    }\n  }\n\n  // NOTE: This doesn't work properly with search. Fine for prototype for now, but will need to be resolved in future.\n  viewTypes(type: string){\n    if (type.toLowerCase() === \"view all\"){\n      return this.data = this.rowItems;\n    }\n\n    this.deepSearch(expandableRow => {\n      return expandableRow.status.includes(type);\n    })\n  }\n\n  sort() {\n    // Temporary solution for prototype before actual sorting is implemented.\n    this.rowItems.reverse();\n  }\n\n  configureUserWithOrgs(person: Person){\n    const orgs = this.dataService.organizations.slice(0, 2);\n\n    orgs.map(org => {\n      const orgAccess = new OrganizationAccess(person, org);\n      person.organizationAccess.push(orgAccess);\n      org.organizationAccess.push(orgAccess);\n      this.dataService.organizationAccess.push(orgAccess);\n\n      // Associate with all sites for now\n      org.members.map(site => {\n        const sa = new SiteAccess();\n        sa.site = site;\n        sa.person = person;\n        site.siteAccess.push(sa);\n        person.siteAccess.push(sa);\n        this.dataService.siteAccesses.push(sa);\n      });\n\n    });\n\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"rowData\\\" class=\\\"enrollment-list-item\\\" (click)=\\\"toggleRow()\\\" [@openStateDisable]=\\\"openState\\\">\\n\\n    <div class=\\\"enrollment-text-container\\\">\\n      <span class=\\\"enrollment-text-main no-separator\\\">{{rowData.title}}</span>\\n       <!--\\n       <ng-container *ngIf=\\\"primaryType === 'Site'\\\">\\n          <span *ngIf=\\\"rowData.sites != null\\\" class=\\\"enrollment-text-extra\\\">({{rowData.sites.length}}) Sites</span>\\n          <span *ngIf=\\\"rowData.sites != null\\\" class=\\\"enrollment-text-extra\\\">({{rowData.users.length}}) Users</span>\\n       </ng-container>\\n\\n       <ng-container *ngIf=\\\"primaryType === 'User'\\\">\\n          <span class=\\\"enrollment-text-extra\\\">({{rowData.collections.length}}) Collections</span>\\n          <span class=\\\"enrollment-text-extra\\\">({{rowData.sites.length}}) Sites</span>\\n       </ng-container>\\n       -->\\n      <span *ngIf=\\\"primaryType === 'User'\\\">\\n       <prime-info-button\\n          class='mx-2'\\n          [targetId]=\\\"rowData.associatedObjectId\\\">\\n       </prime-info-button>\\n      </span>\\n    </div>\\n\\n    <div *ngIf=\\\"primaryType === 'User'\\\" class=\\\"enrollment-actions\\\">\\n      <span class=\\\"enrollment-icons\\\">\\n        <prime-pill-badge\\n          [alerts]=\\\"allChildAlerts\\\"\\n          [iconOnly]='false'>\\n        </prime-pill-badge>\\n        <i class=\\\"fa fa-edit text-muted mr-2\\\" (click)=\\\"goToEnrollmentPage(rowData.associatedObjectId)\\\"></i>\\n      </span>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div [@openState]=\\\"openState\\\">\\n    <div [@openStateChild]=\\\"openState\\\"  class=\\\"expandable-container\\\">\\n\\n        <div class=\\\"enrollment-expandable\\\" *ngFor=\\\"let siteAccess of siteAccessRequiringAttention\\\"\\n            (click)=\\\"expandedRowClick(siteAccess)\\\"\\n          >\\n          <div class=\\\"enrollment-text-container\\\">\\n            <span class=\\\"enrollment-text-main\\\">{{siteAccess.title}}</span>\\n\\n            <prime-info-button\\n              class='mx-2'\\n              [targetId]=\\\"siteAccess.site.objectId\\\">\\n            </prime-info-button>\\n\\n          </div>\\n          <div class=\\\"enrollment-actions\\\">\\n              <span class=\\\"enrollment-icons mr-5\\\">\\n\\n                  <prime-pill-badge\\n                    *ngIf='primaryType === \\\"User\\\"'\\n                    [alerts]=\\\"[siteAccess.alert]\\\">\\n                  </prime-pill-badge>\\n\\n                  <i class=\\\"fa fa-edit text-muted mr-2\\\" (click)=\\\"goToEnrollmentPage(siteAccess.site.objectId)\\\"></i>\\n                  \\n              </span>\\n              \\n          </div>\\n          <!--\\n          <prime-enrollment-progress-row\\n            [open]='siteAccess.open'\\n            [data]='siteAccess'>\\n          </prime-enrollment-progress-row>\\n          -->\\n        </div>\\n\\n\\n    </div>\\n  </div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background: #e9ecef; }\\n\\n.enrollment-icons,\\n.enrollment-list-item,\\n.enrollment-expandable {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.enrollment-list-item {\\n  border: 1px solid #adb5bd;\\n  border-left: none;\\n  border-right: none;\\n  min-height: 4em;\\n  background: white;\\n  z-index: 1;\\n  position: relative; }\\n\\n.enrollment-expandable,\\n.enrollment-list-item {\\n  transition: 0.25s; }\\n\\n.enrollment-expandable:hover,\\n  .enrollment-list-item:hover {\\n    background: #f9f9f9; }\\n\\n.enrollment-expandable {\\n  color: #495057;\\n  min-height: 4em;\\n  border: 1px solid #adb5bd;\\n  flex-wrap: wrap;\\n  background: #e9ecef; }\\n\\n.enrollment-actions {\\n  display: flex;\\n  align-items: center;\\n  align-self: stretch; }\\n\\n.enrollment-actions .btn-block {\\n    border-radius: 0;\\n    border-top: 0;\\n    border-right: 0;\\n    border-bottom: 0;\\n    height: 100%; }\\n\\n.enrollment-text-container {\\n  min-height: 4em;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  flex: 5;\\n  padding-left: 1em;\\n  margin-right: 2em; }\\n\\n.enrollment-text-container .enrollment-text-main {\\n    font-size: 1.072rem; }\\n\\n.enrollment-text-container > span:not(:last-of-type):not(.no-separator):after {\\n    font-size: 1rem;\\n    color: #6c757d;\\n    content: \\\" / \\\"; }\\n\\n@media (max-width: 575.98px) {\\n    .enrollment-text-container > span:first-of-type:after {\\n      content: \\\"\\\";\\n      display: block; } }\\n\\n.enrollment-text-container > span:not(.enrollment-text-main) {\\n    color: #6c757d;\\n    margin-left: 0.1rem; }\\n\\n.enrollment-icons > i {\\n  padding: 0 5px;\\n  font-size: 18px;\\n  cursor: pointer; }\\n\\n.enrollment-icons > i.fa-edit {\\n    font-size: 1.75rem; }\\n\"","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { loadInOut, openState, openStateChild, openStateDisable } from '../../../../animations/animations';\nimport {Site, SiteAccess} from '../../../../models/sites.model';\nimport {PharmaNetOrganization} from '../../../../models/organizations.model';\nimport {EnrollmentRow, EnrollmentRowChild, RowState} from '../../../../core/enrollment-row/enrollment-row.class';\nimport {Person} from '../../../../models/person.model';\n\nexport interface EnrollmentRowItem {\n  title: string;\n  // TODO: Replace any with new interfaces\n  sites: Site[];\n  users?: any[];\n\n  /** associatedObjectId and title both refer to the same underlying object. By\n   * having an id, we can lookup from the EnrollmentRow -> item, e.g. when\n   * navigating between pages */\n  associatedObjectId: string;\n\n  /** Optional and only used in one config. */\n  collections?: PharmaNetOrganization[];\n  expandableRows?: SiteAccess[];\n}\n\n@Component({\n  selector: 'prime-enrollment-row',\n  templateUrl: './enrollment-row.component.html',\n  styleUrls: ['./enrollment-row.component.scss'],\n  animations: [openState, openStateChild, loadInOut, openStateDisable]\n})\nexport class EnrollmentRowComponent extends EnrollmentRow implements OnInit, OnDestroy {\n\n  @Input() rowData: EnrollmentRowItem;\n  @Input() primaryType: \"User\"|\"Site\" = \"Site\";\n\n  constructor(private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.rowData ) { return; }\n    this.siteAccessRequiringAttention.map(x => x.open = false);\n  }\n\n  toggleRow() {\n\n    if (this.canOpen()){\n      this.openState = this.openState === RowState.Opened ? RowState.Closed  : RowState.Opened;\n\n      if (this.openState === RowState.Opened ){\n        this.onRowOpened.emit(this);\n        // First row is open by default\n        this.siteAccessRequiringAttention[0].open = open;\n      }\n    }\n  }\n\n  canOpen() {\n    if (this.primaryType === \"User\")\n      return false;\n    else\n      return true;\n  }\n\n  ngOnDestroy(){\n    // Set all child rows to closed.\n    this.siteAccessRequiringAttention.map(x => x.open = false);\n  }\n\n  // Abstract function\n  /** This function is responsible for generating site access row titles depending on dashboard type */\n  get siteAccessRequiringAttention(): any[] {\n\n    if ( !this.rowData || !this.rowData.expandableRows ){\n      return [];\n    }\n\n    // All this function does is generate titles for Site Access rows.\n    if (this.primaryType === \"Site\"){\n      return this.rowData.expandableRows.map(siteAccess => {\n        siteAccess.title = `${siteAccess.site.name}`;\n        return siteAccess;\n      });\n    }\n    else {\n      return this.rowData.expandableRows.map(siteAccess => {\n        siteAccess.title = `${siteAccess.site.name}`;\n        return siteAccess;\n      });\n    }\n  }\n\n   goToEnrollmentPage(objectId?: string){\n     console.log('goToEnrollmentPage', objectId)\n    //If user selects details from verifier dash, then go to verifier details\n    if (this.router.url.indexOf('/verifier/') > -1) {\n      const link = '/verifier/details/' + this.primaryType.toLowerCase();\n      this.router.navigate([link, this.rowData.associatedObjectId]);\n    //Else if user selects details from provisioner dash, then go to provisioner details\n    } else if (this.router.url.indexOf('/provisioner/') > -1) {\n       const link = '/provisioner/details/' + this.primaryType.toLowerCase();\n       console.log('URL', [link, objectId]);\n       this.router.navigate([link, objectId]);\n     }\n    }\n  }\n","module.exports = \"<div *ngIf=\\\"config\\\" class=\\\"miller-header d-flex justify-content-between p-3 my-3\\\">\\n  <span><a [routerLink]=\\\"backLink()\\\">Dashboard</a> /\\n    <strong *ngIf=\\\"IS_PEOPLE_TABLE\\\">User Enrollment</strong>\\n    <strong *ngIf=\\\"!IS_PEOPLE_TABLE\\\">Site Enrollment</strong>\\n  </span>\\n\\n  <span class='d-inline-flex align-items-center'>\\n    <div class=\\\"mb-2 mr-sm-2 bg-info\\\" *ngIf=\\\"saveSuccess\\\">\\n      Enrolment has been updated\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-default mx-2\\\" [disabled]=\\\"!changesMade\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" [disabled]=\\\"!changesMade\\\" (click)=\\\"save()\\\" [primeLoadingSpinner]=\\\"showLoadingSpinner\\\" >Submit</button>\\n  </span>\\n</div>\\n\\n<div class=\\\"miller-container\\\">\\n  <div class=\\\"miller-column\\\" *ngFor=\\\"let column of columns; let colIndex = index;\\\" [@loadInOut]>\\n    <div class='miller-column-title'>\\n      <prime-expanding-search\\n        (onChange)=\\\"filterColumn($event, colIndex)\\\"\\n        placeholder=\\\"{{column.title}}\\\"\\n        alwaysShow=true\\n        class='mr-2'>\\n      </prime-expanding-search>\\n\\n      <prime-add-user-button\\n        *ngIf=\\\"column.title.toLowerCase() === 'people'\\\"\\n        iconOnly=true\\n        (onAddNewUser)=\\\"refreshFinalColumn()\\\"\\n        class='fix-right'>\\n      </prime-add-user-button>\\n    </div>\\n\\n\\n\\n\\n    <ul class=\\\"miller-items-container\\\">\\n\\n      <!-- First Two Columns,  single-selection. -->\\n      <ng-container *ngIf=\\\"colIndex !== 2\\\">\\n        <li class=\\\"miller-item\\\" *ngFor=\\\"let item of column['items']\\\" [ngClass]=\\\"{\\n          'open': item.open,\\n          'has-children': item.hasChildren,\\n          'd-none': item.hidden && !item.open\\n        }\\\">\\n          <a (click)=\\\"onItemClick(item)\\\" class='miller-item-link'>\\n            <span class=\\\"item-title\\\">{{item.name}}</span>\\n            <span class=\\\"icons-group d-flex\\\">\\n\\n              <!-- TODO: Update these two. Currently they never work. We either need to pre-calculate hasAlert/hasWarning on parents based on children, or change the approach. -->\\n                <i *ngIf=\\\"item.hasAlert\\\" class=\\\"fa fa-exclamation-triangle text-danger\\\"></i>\\n                <i *ngIf=\\\"item.hasWarning\\\"class=\\\"fa fa-exclamation-circle text-warning\\\"></i>\\n\\n                <prime-info-button [targetId]=\\\"item.objectId\\\" ></prime-info-button>\\n            </span>\\n          </a>\\n        </li>\\n      </ng-container>\\n\\n      <!-- Final Column, multi-selection plus custom logic. -->\\n      <ng-container *ngIf=\\\"colIndex === 2\\\">\\n        <prime-miller-item-checkbox\\n          [items]=\\\"column['items']\\\"\\n          [selectedSiteAccess]='getSelectedSiteAccess()'\\n          [primarySelection]='getSelection()'\\n          (onPendingChanges)=\\\"onCheck($event)\\\">\\n        </prime-miller-item-checkbox>\\n\\n      </ng-container>\\n\\n    </ul>\\n  </div>\\n</div>\\n\"","module.exports = \".miller-container {\\n  display: flex;\\n  position: relative;\\n  -webkit-perspective: 800px;\\n          perspective: 800px; }\\n\\n.miller-column {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  width: 100% !important;\\n  flex: 1;\\n  border: 1px #ccc solid;\\n  overflow: auto;\\n  margin: 0 10px;\\n  background: #f8f9fa; }\\n\\n.miller-column:last-of-type {\\n    margin-right: 0; }\\n\\n@media (min-width: 768px) {\\n    .miller-column {\\n      position: initial;\\n      max-width: 33% !important; }\\n      .miller-column:first-of-type {\\n        margin-left: 0; } }\\n\\n.miller-column.ng-animating {\\n    z-index: 9999; }\\n\\n@media (min-width: 768px) {\\n      .miller-column.ng-animating {\\n        z-index: -1; } }\\n\\n.miller-items-container {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  max-height: 25rem;\\n  min-height: 25rem;\\n  overflow-y: scroll; }\\n\\n.miller-item {\\n  margin: 0;\\n  padding: 0;\\n  border-bottom: 1px #495057 solid;\\n  cursor: pointer;\\n  position: relative;\\n  background: #fcfcfc; }\\n\\n.miller-item:hover {\\n    background: #f8f9fa; }\\n\\n.miller-item.open, .miller-item.open:hover {\\n    background-color: #ced4da; }\\n\\n.miller-item .has-children {\\n    color: red !important; }\\n\\n.miller-item-link {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 1em;\\n  text-decoration: none; }\\n\\n.item-title {\\n  font-weight: 800;\\n  font-size: 1.072rem; }\\n\\n.miller-column-title {\\n  padding: 1em;\\n  font-size: 1.072rem;\\n  background: #e9ecef;\\n  border-bottom: 1px solid #212529;\\n  margin-bottom: 0;\\n  min-height: 4rem;\\n  display: flex;\\n  justify-content: space-between; }\\n\\n.miller-column-title > i.fa {\\n    color: rgba(73, 73, 73, 0.75); }\\n\\n.miller-column-title > h4 {\\n    margin-bottom: 0;\\n    -ms-grid-row-align: center;\\n        align-self: center; }\\n\\n.icons-group {\\n  font-size: 1.5rem; }\\n\\n.miller-header {\\n  background: #e9ecef;\\n  align-items: center; }\\n\"","import { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { cloneDeep } from 'lodash';\nimport { PharmaNetOrganization } from '../../../../models/organizations.model';\nimport { Person } from '../../../../models/person.model';\nimport { Site, SiteAccess, SiteAccessProgressSteps } from '../../../../models/sites.model';\nimport { MillerColumn, MillerColumnConfig, MillerItem } from './miller-columns.interface';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\n\nconst TIMING = '500ms';\n@Component({\n  selector: 'prime-miller-columns',\n  templateUrl: './miller-columns.component.html',\n  styleUrls: ['./miller-columns.component.scss'],\n  // Necessary so styles also apply to Miller-Item-Checkbox\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('loadInOut', [\n      transition('void => *', [\n        animate(TIMING, keyframes([\n          style({opacity: 0, transform: 'translateX(-100%) translateZ(-500px)', offset: 0}),\n          style({opacity: 1, transform: 'translateX(15px)',  offset: 0.3}),\n          style({opacity: 1, transform: 'translateX(0)',     offset: 1.0})\n        ]))\n      ]),\n    ]),\n    // Alternate \"flip\" animation that matches Farzad's designs more.\n    trigger('flipInOut', [\n      transition('void => *', [\n        animate(TIMING, keyframes([\n          style({opacity: 0, transform: 'rotateX(-90deg)', offset: 0}),\n          style({opacity: 1, transform: 'rotateX(0)',     offset: 1.0})\n        ]))\n      ]),\n      transition('* => void', [\n        animate(TIMING, keyframes([\n          style({opacity: 1, transform: 'rotateX(0)',     offset: 0}),\n          style({opacity: 0, transform: 'rotateX(-90deg)',  offset: 1.0})\n        ]))\n      ])\n    ])\n  ]\n})\nexport class MillerColumnsComponent implements OnInit {\n\n  @Input() config: MillerColumnConfig;\n  private columnOrder: string[]  = ['Collections', 'Sites', 'People'];\n  private _columns:  MillerColumn[];\n  private _originalColumnSnapshot:  MillerColumn[];\n  public changesMade: boolean = false;\n  public declarationCheck: boolean = false;\n  public saveSuccess: boolean = false;\n  public pendingSiteAccess: SiteAccess[];\n  public showLoadingSpinner: boolean = false;\n\n  constructor(private router: Router, private dataService: PrimeDataService) { }\n\n  ngOnInit() {\n    if (!this.config) {return; }\n    // Modify column ordering based on config\n      if (this.config.options &&\n       this.config.options.primaryColumn &&\n        this.config.options.primaryColumn.toLowerCase() === 'people'){\n          this.columnOrder = ['People', 'Collections', 'Sites'];\n    }\n\n    // Setup first column\n    this._columns = [\n      {\n        title: this.columnOrder[0],\n        items: this.config.data[this.columnOrder[0].toLowerCase()],\n        index: 0,\n      }\n    ];\n\n\n    // Check if there's a pre-selected id in the config\n    if (this.config.options && this.config.options.preselectObjectId){\n      const preselectObjectId = this.config.options.preselectObjectId;\n      // Selected item will be in first column, regardless of primaryColumn\n      const preselectItem = this._columns[0].items\n        .find(item => item.objectId === preselectObjectId);\n\n      if (!preselectItem) {\n        console.error('MillerColumnsComponent config.options.preselectObjectId refers to an object which does not exist! Removed objectId from url.');\n        this.router.navigate(['/verifier/enrollment/']);\n        return;\n      }\n\n      this.openColumnFromItem(preselectItem);\n\n      //Only open second column if they're not a new user and we are only displaying; we don't want to pre-open columns that are also pre-checked\n      if (!this.shouldPreCheckAllBoxes()){\n        // Open second column too. Currently just opens the top item, no advanced logic. Potentially could open an item it does not have SA's with, but should be rare.\n        this.openColumnFromItem(this._columns[1].items[0]);\n      }\n      \n    }\n\n    // Save the original columns so we can restore it if the user wants to cancel changes\n    this._originalColumnSnapshot = cloneDeep(this._columns);\n  }\n\n\n  // get columns() : MillerItem[][] {\n  get columns(): any {\n    return this._columns;\n  }\n\n  public get IS_PEOPLE_TABLE(): boolean {\n   return !!(this.config.options &&\n      this.config.options.primaryColumn &&\n      this.config.options.primaryColumn.toLowerCase() === 'people');\n  }\n\n\n  filterColumn(phrase, colIndex){\n    this._columns[colIndex]['items'] = this._columns[colIndex]['items']\n    .map(x => {\n      // Remove from search results without modifying array order.\n      x.hidden = x.name.toLowerCase().indexOf(phrase.toLowerCase()) === -1;\n      return x;\n    });\n  }\n\n\n  onItemClick(item: MillerItem){\n    if (item.open) { return; } //It's already open, don't re-create it.\n    this.openColumnFromItem(item);\n  }\n\n  openColumnFromItem(item: MillerItem){\n    const colIndex = this.findColumnIndexFromItem(item);\n    // Close other items in the same column\n    this._columns[colIndex]['items'].filter(x => x !== item)\n    .map(x => x.open = false);\n    // Close open items in child columns\n    this.cleanUpChildColumns(colIndex);\n    // Open the selection\n    item.open = true;\n    this.addColumnFromItem(item, colIndex);\n  }\n\n  // TODO: Column interface/type\n  onClickColTitle(column){\n    this.closeColumn(column);\n  }\n\n  onCheck(pending: SiteAccess[]){\n    this.saveSuccess = false;\n    this.changesMade = pending.length >= 1;\n    this.pendingSiteAccess = pending;\n    console.log('onCheck', pending);\n  }\n\n  //TODO: Column interface + move fn location\n  private closeColumn(column){\n    this.closeColumnByIndex(column.index);\n  }\n\n  //TODO: Column interface + move fn location\n  private closeColumnByIndex(index){\n    this.cleanUpChildColumns(index);\n    this._columns = [... this._columns.slice(0, index)];\n  }\n\n\n  /**\n   * Creates (and destroys) columns as necessary based on item user has clicked.\n   */\n  private addColumnFromItem(item: MillerItem, colIndex: number){\n    const newIndex = colIndex + 1;\n    const newItems = this.findItemsAtColIndex(item, newIndex);\n\n    if (newItems.length){ //Create column\n      const newCol: MillerColumn = {\n        title: this.columnOrder[newIndex],\n        items: newItems,\n        index: newIndex,\n      };\n      this._columns = [... this._columns.slice(0, newIndex), newCol];\n    }\n    else {\n      this.closeColumnByIndex(newIndex);\n    }\n  }\n\n  /** Saves the data and updates the UI */\n  public save(): void {\n\n    this.showLoadingSpinner = true;\n\n    // The user is no longer 'New' once they've had enrollments saved.\n    if (this.shouldPreCheckAllBoxes()){\n      const user = this.getUserSelection();\n      user.isNewUser = false;\n    }\n\n    this.saveData();\n\n    this.changesMade = false;\n    setTimeout(() => {\n      this.showLoadingSpinner = false;\n      this.saveSuccess = true;\n    }, 3000);\n  }\n\n  /** Cancels the users changes and reverts back to previous state, including what columns are open.  */\n  public cancel(): void {\n    this._columns = cloneDeep(this._originalColumnSnapshot);\n    this.changesMade = false;\n  }\n\n  public backLink(): string {\n    const linkType = this.IS_PEOPLE_TABLE ? 'user' : 'site';\n    return `/verifier/dashboard/${linkType}`;\n  }\n\n  /** Handles data operations necessary to save, does not handle UI per se, but statuses will update due to changes in underlying data. */\n  private saveData(){\n    this.pendingSiteAccess.map(siteAccess =>  {\n      //Go from our copy to the original in dataService\n      const orig = this.dataService.findSiteAccessByObjectId(siteAccess.objectId);\n\n      // Value exists, so we need to update it\n      if (orig){\n        orig.status = siteAccess.status;\n        orig.endDate = siteAccess.endDate;\n        orig.startDate = siteAccess.startDate;\n        orig.declinedReason = siteAccess.declinedReason;\n        orig.progress = SiteAccessProgressSteps.Applicant;\n        console.log('Updating existing SiteAccess', siteAccess);\n      }\n      else {\n        // SiteAccess doesn't exist, so it's a brand new one. We just need to insert it.\n        let origPerson, origSite;\n        if (this.IS_PEOPLE_TABLE) {\n          const objectId = this.getUserSelection().objectId;\n          origPerson = this.dataService.findPersonByObjectId(objectId);\n          origSite = this.dataService.findSiteByObjectId(siteAccess.site.objectId);\n        }\n        else {\n          const objectId = this.getSiteSelection().objectId;\n          origSite = this.dataService.findSiteByObjectId(objectId);\n          origPerson = this.dataService.findPersonByObjectId(siteAccess.person.objectId);\n        }\n\n        siteAccess.progress = SiteAccessProgressSteps.Applicant;\n        siteAccess.person = origPerson;\n        siteAccess.site = origSite;\n        origSite.siteAccess.push(siteAccess);\n        origPerson.siteAccess.push(siteAccess);\n\n        this.dataService.siteAccesses.push(siteAccess);\n        console.log('Saving new SiteAccess', siteAccess);\n      }\n    });\n\n    this.pendingSiteAccess = this.pendingSiteAccess.map(siteAccess => {\n      siteAccess.pendingChanges = false;\n      return siteAccess;\n    });\n\n    this._originalColumnSnapshot = cloneDeep(this._columns);\n  }\n\n  /**\n   * Returns the column that the provided item belongs to (from this._columns)\n   */\n  private findColumnIndexFromItem(item: MillerItem): number{\n    for (let colIndex = 0; colIndex < this._columns.length; colIndex++) {\n      const column = this._columns[colIndex];\n      // Loop through items in columns to find match\n      for (let i = 0; i < column['items'].length; i++) {\n        const colItem = column['items'][i];\n        if (colItem === item){\n          return colIndex;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  private findItemsAtColIndex(item: MillerItem, targetColIndex: number): MillerItem[] {\n    // First, filter out data that doesn't apply to get our column data\n    let data = this.config.data[this.columnOrder[targetColIndex].toLowerCase()]\n    .filter((x: any) => {\n      if (!x.associationId) return true;\n      if (x.isNewUser) return true;\n      return x.associationId.indexOf(item.objectId) !== -1;\n    });\n\n    // Second, update new column attributes on selections in previous columns\n    data = this.recalculateColumnStatus(data, item);\n    return data;\n  }\n\n\n  isSiteColumn(col: Site[] | PharmaNetOrganization[] | Person[] | MillerItem[] | any[]): col is Site[] {\n    return (<Site[]>col)[0]._isSite !== undefined;\n  }\n\n  isPeopleColumn(col: Site[] | PharmaNetOrganization[] | Person[] | MillerItem[] ): col is Person[]{\n    return (<Person[]>col)[0].firstName !== undefined;\n  }\n\n  private recalculateColumnStatus(column: any[], originalSelection: MillerItem ): MillerItem[] {\n    // Clone the column so that when we filter out irrelevant data it doesn't destroy the underlying data.\n    column = cloneDeep(column);\n\n    // Special filtering operations for last column for 2 table types\n    if (this.IS_PEOPLE_TABLE && this.isSiteColumn(column)) { // Last column\n      const selection = this.getUserSelection();\n      column = column.map(site => {\n        site.siteAccess = site.siteAccess.filter(sa => {\n          // Since we clone, we have to check on ID not pure identity\n          return sa.person.objectId === selection.objectId;\n        });\n        return site;\n      });\n\n      // Now that we've filtered out irrelevant SA's, we can easily check items\n      // that have Active SAs.\n\n      if (this.shouldPreCheckAllBoxes()){\n        console.log('Should precheck all items!');\n        const preChecked = column.map(item => item.checked = true);\n        if (preChecked.length) this.changesMade = true;\n      }\n      else {\n        column\n          .filter(item => item.siteAccess.length)\n          .filter(item => item.siteAccess[0].status === 'Active' || item.siteAccess[0].status === 'New' || item.siteAccess[0].status === 'Initiated')\n          .map(item => item.checked = true);\n      }\n\n\n    }\n    else if (!this.IS_PEOPLE_TABLE && this.isPeopleColumn(column)) {\n      const selection = this.getSiteSelection();\n\n      column = column.map(person => {\n        person.siteAccess = person.siteAccess.filter(sa => {\n          return sa.site.objectId === selection.objectId;\n        });\n        return person;\n      });\n\n      column\n        .filter(item => item.siteAccess.length)\n        .filter(item => item.siteAccess[0].status === 'Active' || item.siteAccess[0].status === 'New' || item.siteAccess[0].status === 'Initiated')\n        .map(item => item.checked = true);\n    }\n\n    // Sort so all checked items are at the top\n    column.sort((a, b) => {\n      if (a.checked || b.checked){\n        return b.checked ? 1 : 0;\n      }\n      else {\n        // Sort remainder alphabetically\n        return a.name > b.name ? 1 : 0;\n      }\n    });\n\n    // Add \"Active\" badge\n    return column;\n  }\n\n  refreshFinalColumn(){\n    // Just need to re-open the last column by re-opening the current open item in the penultimate column\n    this.openColumnFromItem(this._columns[1].items.filter(x => x.open)[0]);\n  }\n\n  public getUserSelection(): Person{\n    if (this.IS_PEOPLE_TABLE){\n      return this._columns[0].items.filter(x => x.open)[0];\n    }\n    return null;\n  }\n\n  public getSiteSelection(): Site{\n    if (!this.IS_PEOPLE_TABLE){\n      return this._columns[1].items.filter(x => open)[0];\n    }\n    return null;\n  }\n\n  public getSelection(): Person | Site {\n    if (this.IS_PEOPLE_TABLE){\n      return this.getUserSelection();\n    }\n    else {\n      return this.getSiteSelection();\n    }\n  }\n\n  /** Returns all the SiteAccesses of the selected item in the primary (left\n   * most) column. These are already existing site accesses, not new ones we\n   * will have to save, etc. */\n  public getSelectedSiteAccess(){\n\n    if (this.IS_PEOPLE_TABLE){ // items are Sites\n      return (this._columns[0].items.filter(x => x.open)[0] as any).siteAccess;\n    }\n    else { // items are Collections\n      return (this._columns[0].items.filter(x => x.open)[0] as any).allSiteAccess;\n    }\n\n  }\n\n  public shouldPreCheckAllBoxes(): boolean {\n    const user = this.getUserSelection();\n    return user && user.isNewUser;\n  }\n\n  private cleanUpChildColumns(index){\n      // De-select all cells in closed columns\n      for (let i = index; i < this._columns.length; i++) {\n        const column = this._columns[i];\n        column['items'].map(x => x.open = false);\n      }\n  }\n}\n","module.exports = \"<li class=\\\"miller-item\\\" *ngFor=\\\"let item of items\\\" [ngClass]=\\\"{\\n  'open': item.open,\\n  'has-children': item.hasChildren,\\n  'd-none': item.hidden && !item.checked\\n}\\\">\\n\\n  <a (click)=\\\"onItemClick($event, item)\\\" class='miller-item-link'>\\n    <div class=\\\"form-check\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"millerCheckbox{{item.objectId}}\\\" [(ngModel)]='item.checked'>\\n        <label class=\\\"form-check-label\\\" for=\\\"millerCheckbox{{item.objectId}}\\\">\\n          <span class=\\\"item-title\\\">{{item.name}}</span>\\n        </label>\\n    </div>\\n\\n\\n    <span class=\\\"icons-group d-flex align-items-center\\\">\\n        <prime-pill-badge\\n          *ngIf=\\\"getSiteAccessForItem(item)?.alert\\\"\\n          [alerts]=\\\"[getSiteAccessForItem(item)?.alert]\\\">\\n        </prime-pill-badge>\\n\\n        <!-- <i class=\\\"fa fa-info-circle text-muted ml-1\\\"></i> -->\\n        <prime-info-button [targetId]=\\\"item.objectId\\\" ></prime-info-button>\\n    </span>\\n  </a>\\n  <div *ngIf=\\\"showNewEnrollment(item)\\\" class='d-flex justify-content-around' [@growVertical]>\\n    <span class='d-inline-flex align-items-baseline mb-1'>Start\\n      <prime-datepicker size='mini' dateFormat=\\\"yyyy/mm/dd\\\"\\n      [(date)]=getSiteAccessForItem(item).startDate\\n      class='ml-1'></prime-datepicker>\\n    </span>\\n\\n    <span class='d-inline-flex align-items-baseline mb-1'>End\\n      <prime-datepicker size='mini' dateFormat=\\\"yyyy/mm/dd\\\"  [(date)]=\\\"getSiteAccessForItem(item).endDate\\\" class='ml-1'></prime-datepicker>\\n    </span>\\n  </div>\\n\\n  <div *ngIf=\\\"showEndEnrollment(item)\\\" class='d-flex justify-content-around' [@growVertical]>\\n      <span class='d-inline-flex align-items-baseline mb-1'>End\\n        <prime-datepicker size='mini' dateFormat=\\\"yyyy/mm/dd\\\"\\n        [(date)]=selectedSiteAccess[0].endDate\\n        class='ml-1'></prime-datepicker>\\n      </span>\\n\\n      <select name=\\\"reasonForDeactivation\\\" id=\\\"reasonForDeactivation\\\" class='mx-2' [(ngModel)]=\\\"getSiteAccessForItem(item).declinedReason\\\">\\n        <option value=\\\"noLongerEmployee\\\">No Longer employed</option>\\n        <option value=\\\"contractExpiration\\\">Contract termination</option>\\n        <option value=\\\"tempAccess\\\">Temp Access</option>\\n        <option value=\\\"changedLocation\\\">No longer works at this site</option>\\n      </select>\\n\\n\\n\\n    </div>\\n\\n\\n</li>\\n\"","module.exports = \".badge-pill {\\n  font-size: 0.75rem; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { growVertical } from '../../../../animations/animations';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { Person } from '../../../../models/person.model';\nimport { Site, SiteAccess } from '../../../../models/sites.model';\nimport { Base } from '../../../../core/base/base.class';\n\n@Component({\n  selector: 'prime-miller-item-checkbox',\n  templateUrl: './miller-item-checkbox.component.html',\n  styleUrls: ['./miller-item-checkbox.component.scss'],\n  animations: [growVertical]\n})\nexport class MillerItemCheckboxComponent extends Base implements OnInit {\n\n  //TODO: Add interface for miller items\n  @Input() items: any[];\n  @Input() selectedSiteAccess;\n  @Input() primarySelection: Person | Site;\n  @Output() onPendingChanges = new EventEmitter<any>();\n  /** Incomplete! Idea is it will store all pending changes, and after the user\n   * clicks 'Save' then we empty this array and store the data in the real data\n   * stores (and cancel just clears it). */\n  private _allPendingChanges: SiteAccess[] = [];\n\n  constructor() {\n    super();\n  }\n\n  public today;\n  ngOnInit() {\n    if (!this.items){\n      return;\n    }\n\n    const today = new Date();\n    this.today =  { year: today.getFullYear(), month: today.getMonth() + 1, day: today.getDate() }\n\n    // Preprocess pre-checked items for 'New' users by pre-selecting all fields\n    this.items\n      .filter(x => x.checked && this.getSiteAccessForItem(x) === undefined)\n      .map(x => this.initiateSiteAccess(x));\n\n    // If any pending changes created due to the above pre-processing\n    if (this._allPendingChanges.length){\n      this.onPendingChanges.emit(this._allPendingChanges);\n    }\n\n  }\n\n  ngOnDestroy(){\n    [].concat(... this.items.map(site => site.siteAccess))\n    .map(sa => sa.pendingChanges = false);\n  }\n\n  onItemClick(event, item) {\n    const sa = this.getSiteAccessForItem(item);\n\n    if (sa) {\n      sa.pendingChanges = true;\n    }\n\n    if (typeof sa === 'undefined') {\n      // User has selected a blank item, creating new SA.\n      // console.log('onItemClick1', {item, sa})\n      this.initiateSiteAccess(item);\n    }\n\n    if (item.checked && this._allPendingChanges.includes(sa)) {\n      // User is undoing a change they haven't saved. Delete SA.\n      // console.log('onItemClick2', {item, sa})\n      this.deleteInitiatedSiteAccess(item, sa);\n      sa.pendingChanges = false;\n    }\n\n    if (item.checked && sa && (sa.status === EnrollmentStatus.Active || sa.status === EnrollmentStatus.New)){\n      // console.log('onItemClick4-NEW, unchecking active/new', {item, sa})\n      this.removeExistingEnrollment(item, sa);\n    }\n\n    if (!item.checked && sa && sa.status === null){\n      // console.log('onItemClick5-NEW, undoing, restoring active', {item, sa})\n      this.undoRemoveExistingEnrollment(item, sa);\n    }\n\n    // console.log('onItemClick-END', {item, sa})\n    item.checked = !item.checked;\n    this.onPendingChanges.emit(this._allPendingChanges);\n\n    if (event.target.type !== 'checkbox'){\n      // Stop the event from double-firing.\n      return false;\n    }\n  }\n\n  showNewEnrollment(item){\n    const sa = this.getSiteAccessForItem(item);\n    if (item.checked && sa) {\n      return sa.pendingChanges && sa.status === EnrollmentStatus.Initiated;\n    }\n\n    return false;\n  }\n\n  showEndEnrollment(item){\n    const sa = this.getSiteAccessForItem(item);\n    if (!item.checked && sa) {\n      return sa.pendingChanges && sa.status !== EnrollmentStatus.Initiated;\n    }\n\n    return false;\n  }\n\n  private removeExistingEnrollment(item, sa: SiteAccess){\n    sa.status = null;\n    sa.declinedReason = 'noLongerEmployee';\n    sa.pendingChanges = true;\n    this._allPendingChanges.push(sa);\n  }\n\n  private undoRemoveExistingEnrollment(item, sa: SiteAccess){\n    sa.pendingChanges = false;\n    if (sa.status === null) {\n      sa.status = EnrollmentStatus.Active;\n    }\n    this._allPendingChanges = this._allPendingChanges.filter(x => x !== sa);\n  }\n\n  private initiateSiteAccess(item){\n    const sa = new SiteAccess();\n    sa.pendingChanges = true;\n    sa.status = EnrollmentStatus.Initiated;\n    item.siteAccess.push(sa);\n    // Assign SA to the item depending on type of item (person or site)\n    if (Person.isPersonGuard(item) && Site.isSiteGuard(this.primarySelection)){\n      sa.startDate = item.defaultStartDate;\n      sa.endDate = item.defaultEndDate;\n      sa.person = item;\n      sa.site = this.primarySelection;\n    }\n    else if (Site.isSiteGuard(item) && Person.isPersonGuard(this.primarySelection)){\n      sa.startDate = this.primarySelection.defaultStartDate;\n      sa.endDate = this.primarySelection.defaultEndDate;\n      sa.person = this.primarySelection;\n      sa.site = item;\n    }\n\n\n    // Set dates by getting person's defaultStartDate / defaultEndDate\n    this._allPendingChanges.push(sa);\n  }\n\n  private deleteInitiatedSiteAccess(item: Site | Person, sa: SiteAccess){\n    // Remove from arrays\n    item.siteAccess = item.siteAccess.filter(x => x !== sa);\n    this._allPendingChanges = this._allPendingChanges.filter(x => x !== sa);\n    sa = null;\n  }\n\n  private getSiteAccessForItem(item): SiteAccess {\n    return item.siteAccess[0];\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header d-flex justify-content-between\\\">\\n          Upcoming Renewals\\n\\n          <span class='d-flex align-items-baseline'>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-default\\\" ngDefaultControl (click)=\\\"renewalDateCutoff = 30\\\" [ngClass]=\\\"{active: renewalDateCutoff === 30 }\\\" btnRadio=\\\"30\\\" tabindex=\\\"0\\\" role=\\\"button\\\">30</button>\\n              <button class=\\\"btn btn-default\\\" ngDefaultControl (click)=\\\"renewalDateCutoff = 60\\\" [ngClass]=\\\"{active: renewalDateCutoff === 60 }\\\" btnRadio=\\\"60\\\" tabindex=\\\"0\\\" role=\\\"button\\\">60</button>\\n              <button class=\\\"btn btn-default\\\" ngDefaultControl (click)=\\\"renewalDateCutoff = 90\\\" [ngClass]=\\\"{active: renewalDateCutoff === 90 }\\\" btnRadio=\\\"90\\\" tabindex=\\\"0\\\" role=\\\"button\\\">90</button>\\n            </div>\\n            <i class=\\\"fa fa-reply fa-flip-horizontal ml-2\\\" aria-hidden=\\\"true\\\"></i>\\n          </span>\\n\\n        </div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li class=\\\"list-group-item d-flex justify-content-between\\\" *ngFor=\\\"let person of upcomingRenewals(renewalDateCutoff)\\\">\\n            <span>{{person.name}}</span>\\n            <span class='d-inline-flex align-items-center'>\\n              <span class='mr-2' tooltip=\\\"{{ person.daysUntilRenewalDate }} days\\\" container=\\\"body\\\" delay=350>\\n                {{formatDate(person.renewalDate)}}\\n              </span>\\n              <prime-info-button [targetId]=\\\"person.objectId\\\">\\n              </prime-info-button>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header d-flex justify-content-between\\\">\\n          User status\\n          <i class=\\\"fa fa-reply fa-flip-horizontal\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"card-body pie-chart-container\\\" #pieChartContainer>\\n          <ngx-charts-pie-chart\\n            [view]='pieChartDimension'\\n            [results]=\\\"pieChartData\\\"\\n            [scheme]=\\\"'natural'\\\"\\n            legend=true\\n            legendTitle=''\\n            (select)='onPieChartClick($event)'>\\n          </ngx-charts-pie-chart>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header d-flex justify-content-between\\\">\\n          Application Progress\\n\\n          <form class=\\\"form-inline\\\">\\n            <select id=\\\"applicationProgressType\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"applicationProgressSelector\\\"\\n              (change)=\\\"applicationProgressSelector = $event.target.value\\\">\\n              <option *ngFor=\\\"let type of SiteAccessProgressSteps\\\" value=\\\"{{type}}\\\">\\n                {{type}}\\n              </option>\\n            </select>\\n            <i class=\\\"fa fa-reply fa-flip-horizontal ml-2\\\" aria-hidden=\\\"true\\\"></i>\\n          </form>\\n\\n        </div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li class=\\\"list-group-item d-flex justify-content-between\\\" *ngFor=\\\"let siteAccess of applicationProgress()\\\">\\n            <span class='application-text' tooltip=\\\"{{ siteAccess.person.name }} &ndash; {{ siteAccess.site.name}}\\\" container=\\\"body\\\"\\n              delay=350>\\n              {{ siteAccess.person.name }} &ndash; {{ siteAccess.site.name}}\\n            </span>\\n            <prime-info-button [targetId]=\\\"siteAccess.person.objectId\\\">\\n            </prime-info-button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n  </div>\\n\"","module.exports = \"prime-site-access-widgets .application-text {\\n  white-space: nowrap;\\n  display: inline-block;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  max-width: calc(100% - 3rem); }\\n\\nprime-site-access-widgets .list-group, prime-site-access-widgets .card-body {\\n  height: 17rem;\\n  overflow-y: scroll;\\n  position: relative; }\\n\\nprime-site-access-widgets .list-group .list-group-item, prime-site-access-widgets .card-body .list-group-item {\\n    min-height: 44px; }\\n\\n.ngx-charts {\\n  float: right !important;\\n  margin-right: -7.5%; }\\n\\n.legend-labels {\\n  width: 100px !important;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  max-height: unset !important; }\\n\\n.legend-labels > li:first-of-type {\\n    padding-top: 1.75rem; }\\n\\n.chart-legend .legend-label {\\n  color: #495057 !important; }\\n\\n.chart-legend .legend-label .active .legend-label-text {\\n    text-decoration: underline; }\\n\\n.chart-legend .legend-label > ngx-charts-legend-entry > span {\\n    display: block;\\n    transition: -webkit-transform 0.2s;\\n    transition: transform 0.2s;\\n    transition: transform 0.2s, -webkit-transform 0.2s;\\n    -webkit-font-smoothing: subpixel-antialiased;\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n    -webkit-transform: translateZ(0);\\n            transform: translateZ(0); }\\n\\n.chart-legend .legend-label .active {\\n    transition: -webkit-transform 0.2s;\\n    transition: transform 0.2s;\\n    transition: transform 0.2s, -webkit-transform 0.2s;\\n    -webkit-transform: translateY(-2.5px) scale(1.05) translateZ(0);\\n            transform: translateY(-2.5px) scale(1.05) translateZ(0); }\\n\\n.pie-chart-container {\\n  padding: 0; }\\n\"","import { Component, OnInit, Input, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport * as moment from 'moment';\nimport { Person } from '../../../../models/person.model';\nimport { VerifierService } from '../../../../services/verifier.service';\nimport { SiteAccessProgressSteps, SiteAccess } from '../../../../models/sites.model';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\n@Component({\n  selector: 'prime-site-access-widgets',\n  templateUrl: './site-access-widgets.component.html',\n  styleUrls: ['./site-access-widgets.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SiteAccessWidgetsComponent implements OnInit {\n  @Input() siteAccess: SiteAccess[] = [];\n  @Input() people: Person[] = [];\n  public renewalDateCutoff: number = 30;\n  public applicationProgressSelector: SiteAccessProgressSteps;\n  public pieChartData;\n\n  @ViewChild('pieChartContainer') pieChartContainer: ElementRef;\n\n\n  constructor(private verifierService: VerifierService) { }\n\n  //Current max width, but doesn't really play nice with mobile views\n  public pieChartDimension: number[] = [];\n\n  ngOnInit() {\n    this.applicationProgressSelector = SiteAccessProgressSteps.Verifier;\n    this.pieChartData = this.calculatePieChartData();\n\n    // Very hacky and should be for prototype only! Possibly remove/replace\n    // entire chart library because this one does not play nicely and on re-size\n    // it continually breaks / infinitely grows.  The height value determines if\n    // the entire legend is visible.\n    this.pieChartDimension = [\n      // HACKFIX! Changing the first value here necessary for UX changes and adding site-wide container. Need to fix and do CSS changes later when there's time.\n      this.pieChartContainer.nativeElement.offsetWidth - 50,\n      this.pieChartContainer.nativeElement.offsetHeight,\n    ]\n  }\n\n  // Make enum accessible to template\n  get SiteAccessProgressSteps() {\n    return Object.keys(SiteAccessProgressSteps);\n  }\n\n  // Make enum iterable strings accessible in template\n  // get EnrollmentStatus() {\n  //   return Object.keys(EnrollmentStatus);\n  // }\n  get EnrollmentStatus(){\n    return Object.keys(this.verifierService.VerifierEnrollmentStatus);\n  }\n\n  //days: 30/60/90\n  // TODO: CHange this so it filters on PEOPLE RENEWAL DATE! Not SA daysUntilExpiry\n  upcomingRenewals(days: number){\n    // Copy the array so our sorting doesn't mess up other places\n    // Don't get records that have a null renewal date\n    let people = this.people.concat().filter(p => p.renewalDate);\n\n    // Expiring soon = Beginning of array\n    people.sort((a, b) => {\n      return a.renewalDate.getTime() - b.renewalDate.getTime();\n    });\n\n    return people.filter(person => person.daysUntilRenewalDate <= days);\n  }\n\n  applicationProgress(){\n    let selection: SiteAccessProgressSteps = this.applicationProgressSelector;\n\n    // Copy the array so our sorting doesn't mess up other places\n    let result: SiteAccess[] = this.siteAccess.concat();\n    // Filter to only show 'problem' results, to match enrollment list\n    result = result.filter(x => x.alert);\n\n    return result.filter(sa => sa.progress === selection);\n  }\n\n  calculatePieChartData() : {name: string, value: number}[] {\n    return this.EnrollmentStatus.map(status => {\n      return {\n        name: status,\n        value: this.siteAccess.filter(sa => sa.status === status).length\n      }\n    })\n  }\n\n  onPieChartClick($event){\n    // console.log('onPieChartClick', $event);\n    this.verifierService.enrollmentViewTypeSelector = $event.name;\n  }\n\n  formatDate(date: Date){\n    return moment(date).format('DD/MM/YYYY');\n  }\n\n\n  colorScheme = {\n    // primary/secondary/etc, from variables.scss\n    domain: ['#036', '#fcba19', '#486446', '#96c0e6']\n  };\n\n}\n","module.exports = \"<prime-enrollment-list\\n  [rowItems]=\\\"enrollmentBySiteData\\\"\\n  primaryType='Site'\\n></prime-enrollment-list>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { PrimeDataService } from '../../../../../services/prime-data.service';\nimport {EnrollmentRowItem} from '../../../components/enrollment-row/enrollment-row.component';\n\n@Component({\n  selector: 'prime-dashboard-by-site',\n  templateUrl: './dashboard-by-site.component.html',\n  styleUrls: ['./dashboard-by-site.component.scss']\n})\nexport class DashboardBySiteComponent {\n  constructor(private dataService: PrimeDataService) { }\n\n  get enrollmentBySiteData(): EnrollmentRowItem[] {\n    return this.dataService.getEnrollmentBySite();\n  }\n\n}\n","module.exports = \"<prime-enrollment-list\\n  [rowItems]=\\\"enrollmentByUserData\\\"\\n  [primaryType]='\\\"User\\\"'\\n></prime-enrollment-list>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { PrimeDataService } from '../../../../../services/prime-data.service';\nimport {EnrollmentRowItem} from '../../../components/enrollment-row/enrollment-row.component';\n\n\n@Component({\n  selector: 'prime-dashboard-by-user',\n  templateUrl: './dashboard-by-user.component.html',\n  styleUrls: ['./dashboard-by-user.component.scss']\n})\nexport class DashboardByUserComponent {\n  constructor(private dataService: PrimeDataService) { }\n\n  get enrollmentByUserData(): EnrollmentRowItem[] {\n    return this.dataService.getEnrollmentByUser();\n  }\n\n}\n","module.exports = \"<prime-alert>\\n  System Notification: Server will be down for 2 hours maintenance at 14:30 PT.\\n</prime-alert>\\n\\n<prime-dashboard-bar>\\n</prime-dashboard-bar>\\n\\n<!-- <router-outlet name=\\\"dashboard\\\"></router-outlet> -->\\n<router-outlet></router-outlet>\\n\\n<hr>\\n\\n<prime-site-access-widgets\\n  [siteAccess]=\\\"siteAccesses\\\"\\n  [people]=\\\"people\\\">\\n</prime-site-access-widgets>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SiteAccess } from '../../../../models/sites.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { Person } from '../../../../models/person.model';\n\n@Component({\n  selector: 'prime-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n\n  constructor(private dataService: PrimeDataService) { }\n\n  ngOnInit() {\n  }\n\n  get siteAccesses(): SiteAccess[] {\n    return this.dataService.siteAccesses;\n  }\n\n  get people(): Person[] {\n    return this.dataService.people;\n  }\n\n}\n","module.exports = \"<prime-miller-columns [config]=\\\"millerColumnByCollection\\\"></prime-miller-columns>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MillerColumnConfig } from '../../components/miller-columns/miller-columns.interface';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\n\n\n@Component({\n  selector: 'prime-site-enrollment',\n  templateUrl: './site-enrollment.component.html',\n  styleUrls: ['./site-enrollment.component.scss']\n})\nexport class SiteEnrollmentComponent implements OnInit {\n  public millerColumnByCollection: MillerColumnConfig;\n\n  constructor(private dataService: PrimeDataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.millerColumnByCollection = this.dataService.getMillerColumnDataByCollection();\n\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.millerColumnByCollection.options.preselectObjectId = id;\n    }\n\n  }\n\n}\n","module.exports = \"<prime-miller-columns [config]=\\\"millerColumnByUser\\\"></prime-miller-columns>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MillerColumnConfig } from '../../components/miller-columns/miller-columns.interface';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\n\n@Component({\n  selector: 'prime-user-enrollment',\n  templateUrl: './user-enrollment.component.html',\n  styleUrls: ['./user-enrollment.component.scss']\n})\nexport class UserEnrollmentComponent implements OnInit {\n  public millerColumnByUser: MillerColumnConfig;\n\n\n  constructor(private dataService: PrimeDataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.millerColumnByUser = this.dataService.getMillerColumnDataByUser();\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.millerColumnByUser.options.preselectObjectId = id;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from '../../pages/home-page/home-page.component';\nimport { DemoPageComponent } from '../../pages/demo-page/demo-page.component';\nimport { BlankPageComponent } from '../../pages/blank-page/blank-page.component';\nimport { DashboardPageComponent } from './pages/dashboard-page/dashboard-page.component';\nimport { DashboardByUserComponent } from './pages/dashboard-page/dashboard-by-user/dashboard-by-user.component';\nimport { DashboardBySiteComponent } from './pages/dashboard-page/dashboard-by-site/dashboard-by-site.component';\n\n\n// MOVE THESE TWO\nimport { UserEnrollmentComponent } from './pages/user-enrollment/user-enrollment.component';\nimport { SiteEnrollmentComponent } from './pages/site-enrollment/site-enrollment.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardPageComponent,\n\n    children: [\n      {\n        path: 'user',\n        component: DashboardByUserComponent,\n      },\n      {\n        path: 'site',\n        component: DashboardBySiteComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'user'\n      }\n    ]\n  },\n  {\n    path: 'details',\n    children: [\n      /**\n       * Enrollment routes below must be duplicated, one with /:id and one\n       * without. Using :id allows deep linking to specific items.\n       */\n      {\n        path: 'user',\n        component: UserEnrollmentComponent,\n      },\n      {\n        path: 'site',\n        component: SiteEnrollmentComponent,\n      },\n      {\n        path: 'user/:id',\n        component: UserEnrollmentComponent,\n      },\n      {\n        path: 'site/:id',\n        component: SiteEnrollmentComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'user'\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VerifierRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { VerifierRoutingModule } from './verifier-routing.modules';\nimport { DashboardPageComponent } from './pages/dashboard-page/dashboard-page.component';\nimport { DashboardByUserComponent } from './pages/dashboard-page/dashboard-by-user/dashboard-by-user.component';\nimport { DashboardBySiteComponent } from './pages/dashboard-page/dashboard-by-site/dashboard-by-site.component';\nimport { SiteEnrollmentComponent } from './pages/site-enrollment/site-enrollment.component';\nimport { CoreModule } from '../core/core.module';\nimport { InfoButtonComponent } from '../../core/user-info-button/user-info-button.component';\nimport { MillerItemCheckboxComponent } from './components/miller-item-checkbox/miller-item-checkbox.component';\nimport { EnrollmentListComponent } from './components/enrollment-list/enrollment-list.component';\nimport { EnrollmentRowComponent } from './components/enrollment-row/enrollment-row.component';\nimport { MillerColumnsComponent } from './components/miller-columns/miller-columns.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserEnrollmentComponent } from './pages/user-enrollment/user-enrollment.component';\nimport { SiteAccessWidgetsComponent } from './components/site-access-widgets/site-access-widgets.component';\nimport { TooltipModule } from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VerifierRoutingModule,\n    NgxChartsModule,\n    CoreModule,\n    FormsModule,\n    TooltipModule.forRoot()\n  ],\n  providers: [],\n  declarations: [\n    DashboardPageComponent,\n    DashboardByUserComponent,\n    DashboardBySiteComponent,\n    UserEnrollmentComponent,\n    SiteEnrollmentComponent,\n    MillerItemCheckboxComponent,\n    EnrollmentListComponent,\n    EnrollmentRowComponent,\n    MillerColumnsComponent,\n    SiteAccessWidgetsComponent\n  ],\n  exports: [\n    MillerItemCheckboxComponent,\n    EnrollmentListComponent,\n    EnrollmentRowComponent,\n    MillerColumnsComponent\n  ]\n})\nexport class VerifierModule { }\n"],"sourceRoot":""}