/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { CaptchaComponent } from './captcha.component';
import { CaptchaDataService } from './captcha-data.service';
import { CommonModule } from '@angular/common';
var CaptchaModule = /** @class */ (function () {
    function CaptchaModule() {
    }
    /**
     * @return {?}
     */
    CaptchaModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: CaptchaModule,
            providers: [CaptchaDataService]
        };
    };
    CaptchaModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        CaptchaComponent
                    ],
                    imports: [
                        HttpClientModule,
                        CommonModule,
                        FormsModule
                    ],
                    providers: [
                        CaptchaDataService
                    ],
                    exports: [
                        CaptchaComponent
                    ],
                },] }
    ];
    return CaptchaModule;
}());
export { CaptchaModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FwdGNoYS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tb2gtY29tbW9uLWxpYi9jYXB0Y2hhLyIsInNvdXJjZXMiOlsiY2FwdGNoYS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0M7SUFBQTtJQXVCQSxDQUFDOzs7O0lBTlEscUJBQU87OztJQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1NBQ2hDLENBQUE7SUFDSCxDQUFDOztnQkF0QkYsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixnQkFBZ0I7cUJBQ2pCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxnQkFBZ0I7d0JBQ2hCLFlBQVk7d0JBQ1osV0FBVztxQkFDWjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Qsa0JBQWtCO3FCQUNuQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsZ0JBQWdCO3FCQUNqQjtpQkFDRjs7SUFRRCxvQkFBQztDQUFBLEFBdkJELElBdUJDO1NBUFksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IENhcHRjaGFDb21wb25lbnQgfSBmcm9tICcuL2NhcHRjaGEuY29tcG9uZW50JztcbmltcG9ydCB7IENhcHRjaGFEYXRhU2VydmljZSB9IGZyb20gJy4vY2FwdGNoYS1kYXRhLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgQ2FwdGNoYUNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgSHR0cENsaWVudE1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ2FwdGNoYURhdGFTZXJ2aWNlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBDYXB0Y2hhQ29tcG9uZW50XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIENhcHRjaGFNb2R1bGUgeyBcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxDYXB0Y2hhTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBDYXB0Y2hhTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbQ2FwdGNoYURhdGFTZXJ2aWNlXVxuICAgIH1cbiAgfVxufVxuIl19