/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
/**
 * The "Page Framework" is a template to be used on FPCare pages to ensure
 * consistent layout.  It applies to most pages, but should NOT be used on
 * Dashboards, or full-width table components.
 *
 * \@example
 * <common-page-framework>
 *        <div>This will go in the middle column</div>
 *        <p>So will this</p>
 *        <div aside> This will go in the side column, or tips.</div>
 * </common-page-framework>
 *
 * @export
 */
var PageFrameworkComponent = /** @class */ (function () {
    function PageFrameworkComponent() {
        this.layout = 'default';
    }
    /**
     * @return {?}
     */
    PageFrameworkComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    PageFrameworkComponent.decorators = [
        { type: Component, args: [{
                    selector: 'common-page-framework',
                    template: "<div class=\"row\" [ngSwitch]=\"layout\">\n\n  <ng-container *ngSwitchCase=\"'default'\">\n    <div class=\"col-md-8\">\n      <div class=\"px-lg-4 px-md-3 py-3\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n    <div class=\"col-md-4 aside-col\">\n      <div class='pr-lg-5 pr-md-4 py-2'>\n        <ng-container *ngTemplateOutlet=\"aside\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n\n  <ng-container *ngSwitchCase=\"'double'\">\n    <div class=\"col-md-6\">\n      <div class=\"px-lg-5 px-md-3 py-3\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class='px-lg-5 px-md-3 py-3'>\n        <ng-container *ngTemplateOutlet=\"aside\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n    <ng-container *ngSwitchCase=\"'single'\">\n      <div class=\"col-md-8 offset-lg-2\">\n        <div class=\"px-lg-5 px-md-3 py-3\">\n          <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'blank'\">\n      <div class=\"col-sm-12\">\n        <div class=\"px-lg-5 px-md-3 py-3\">\n          <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n</div>\n<ng-container *ngTemplateOutlet=\"submit\"></ng-container>\n\n\n<!-- We use ng-template here to get around a bug with having multiple ng-contents in one template. By default, if there are duplicate ng-contents in a template Angular will select the very first one - even if latter ones are 'removed' by ngSwitch or ngIf.-->\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n\n<ng-template #aside>\n    <ng-content select='aside'></ng-content>\n</ng-template>\n\n<ng-template #submit>\n  <ng-content select='common-form-action-bar'></ng-content>\n  <ng-content select='common-form-submit-bar'></ng-content>\n</ng-template>",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["common-page-framework{background:#fcfcfc;display:block}.h5,h5{font-size:1rem;font-weight:700;margin-bottom:0}p+.h5,p+h5{margin-top:1.5rem}.aside-col aside{background:#f2f2f2;padding:1em;border-radius:5px}@media (min-width:768px){.aside-col aside{margin-top:1rem}}"]
                }] }
    ];
    PageFrameworkComponent.propDecorators = {
        layout: [{ type: Input }]
    };
    return PageFrameworkComponent;
}());
export { PageFrameworkComponent };
if (false) {
    /** @type {?} */
    PageFrameworkComponent.prototype.layout;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1mcmFtZXdvcmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbW9oLWNvbW1vbi1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wYWdlLWZyYW1ld29yay9wYWdlLWZyYW1ld29yay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUFnQjVFO0lBQUE7UUFRVyxXQUFNLEdBQThDLFNBQVMsQ0FBQztJQUt6RSxDQUFDOzs7O0lBSEMseUNBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Z0JBWEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLDArREFBOEM7b0JBRTlDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDdEM7Ozt5QkFHRSxLQUFLOztJQUtSLDZCQUFDO0NBQUEsQUFiRCxJQWFDO1NBUFksc0JBQXNCOzs7SUFFakMsd0NBQXVFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFRoZSBcIlBhZ2UgRnJhbWV3b3JrXCIgaXMgYSB0ZW1wbGF0ZSB0byBiZSB1c2VkIG9uIEZQQ2FyZSBwYWdlcyB0byBlbnN1cmVcbiAqIGNvbnNpc3RlbnQgbGF5b3V0LiAgSXQgYXBwbGllcyB0byBtb3N0IHBhZ2VzLCBidXQgc2hvdWxkIE5PVCBiZSB1c2VkIG9uXG4gKiBEYXNoYm9hcmRzLCBvciBmdWxsLXdpZHRoIHRhYmxlIGNvbXBvbmVudHMuXG4gKlxuICogQGV4YW1wbGVcbiAqIDxjb21tb24tcGFnZS1mcmFtZXdvcms+XG4gKiAgICAgICAgPGRpdj5UaGlzIHdpbGwgZ28gaW4gdGhlIG1pZGRsZSBjb2x1bW48L2Rpdj5cbiAqICAgICAgICA8cD5TbyB3aWxsIHRoaXM8L3A+XG4gKiAgICAgICAgPGRpdiBhc2lkZT4gVGhpcyB3aWxsIGdvIGluIHRoZSBzaWRlIGNvbHVtbiwgb3IgdGlwcy48L2Rpdj5cbiAqIDwvY29tbW9uLXBhZ2UtZnJhbWV3b3JrPlxuICpcbiAqIEBleHBvcnRcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29tbW9uLXBhZ2UtZnJhbWV3b3JrJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BhZ2UtZnJhbWV3b3JrLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcGFnZS1mcmFtZXdvcmsuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgUGFnZUZyYW1ld29ya0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgbGF5b3V0OiAnc2luZ2xlJyB8ICdkb3VibGUnIHwgJ2JsYW5rJyB8ICdkZWZhdWx0JyA9ICdkZWZhdWx0JztcblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=