/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// List of constants used for masking inputs
import { EventEmitter, Input, Output } from '@angular/core';
import { Base } from './base';
/** @type {?} */
export var LETTER = /[A-Z]/i;
// Ignore case here, then upperCase it via pipe.
/** @type {?} */
export var NUMBER = /\d/;
/** @type {?} */
export var SPACE = ' ';
var MaskModel = /** @class */ (function (_super) {
    tslib_1.__extends(MaskModel, _super);
    function MaskModel() {
        var _this = _super.call(this) || this;
        _this.valueChange = new EventEmitter();
        _this.disabled = false;
        _this.required = true;
        return _this;
    }
    /**
     * Upper cases letters in string
     */
    /**
     * Upper cases letters in string
     * @param {?} text
     * @return {?}
     */
    MaskModel.prototype.upperCasePipe = /**
     * Upper cases letters in string
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.toUpperCase();
    };
    /**
     * Updates the value
     */
    /**
     * Updates the value
     * @param {?} value
     * @return {?}
     */
    MaskModel.prototype.onUpdate = /**
     * Updates the value
     * @param {?} value
     * @return {?}
     */
    function (value) {
        // Emit value without spaces
        this.valueChange.emit(value);
    };
    MaskModel.propDecorators = {
        value: [{ type: Input }],
        valueChange: [{ type: Output }],
        disabled: [{ type: Input }],
        required: [{ type: Input }]
    };
    return MaskModel;
}(Base));
export { MaskModel };
if (false) {
    /** @type {?} */
    MaskModel.prototype.value;
    /** @type {?} */
    MaskModel.prototype.valueChange;
    /** @type {?} */
    MaskModel.prototype.disabled;
    /** @type {?} */
    MaskModel.prototype.required;
    /** @type {?} */
    MaskModel.prototype.mask;
    /** @type {?} */
    MaskModel.prototype.placeholder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21vaC1jb21tb24tbGliL21vZGVscy8iLCJzb3VyY2VzIjpbIm1hc2subW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7O0FBRTlCLE1BQU0sS0FBTyxNQUFNLEdBQUcsUUFBUTs7O0FBQzlCLE1BQU0sS0FBTyxNQUFNLEdBQUcsSUFBSTs7QUFDMUIsTUFBTSxLQUFPLEtBQUssR0FBRyxHQUFHO0FBRXhCO0lBQStCLHFDQUFJO0lBV2pDO1FBQUEsWUFDRSxpQkFBTyxTQUNSO1FBVlMsaUJBQVcsR0FBeUIsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUVoRSxjQUFRLEdBQVksS0FBSyxDQUFDO1FBQzFCLGNBQVEsR0FBWSxJQUFJLENBQUM7O0lBT2xDLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0gsaUNBQWE7Ozs7O0lBQWIsVUFBYyxJQUFZO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0gsNEJBQVE7Ozs7O0lBQVIsVUFBVSxLQUFhO1FBRXJCLDRCQUE0QjtRQUM1QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBRSxLQUFLLENBQUUsQ0FBQztJQUNqQyxDQUFDOzt3QkEzQkEsS0FBSzs4QkFDTCxNQUFNOzJCQUVOLEtBQUs7MkJBQ0wsS0FBSzs7SUF3QlIsZ0JBQUM7Q0FBQSxBQTlCRCxDQUErQixJQUFJLEdBOEJsQztTQTlCWSxTQUFTOzs7SUFFcEIsMEJBQXVCOztJQUN2QixnQ0FBeUU7O0lBRXpFLDZCQUFtQzs7SUFDbkMsNkJBQWtDOztJQUVsQyx5QkFBaUI7O0lBQ2pCLGdDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIExpc3Qgb2YgY29uc3RhbnRzIHVzZWQgZm9yIG1hc2tpbmcgaW5wdXRzXG5pbXBvcnQge0V2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IExFVFRFUiA9IC9bQS1aXS9pOyAvLyBJZ25vcmUgY2FzZSBoZXJlLCB0aGVuIHVwcGVyQ2FzZSBpdCB2aWEgcGlwZS5cbmV4cG9ydCBjb25zdCBOVU1CRVIgPSAvXFxkLztcbmV4cG9ydCBjb25zdCBTUEFDRSA9ICcgJztcblxuZXhwb3J0IGNsYXNzIE1hc2tNb2RlbCBleHRlbmRzIEJhc2Uge1xuXG4gIEBJbnB1dCgpIHZhbHVlOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz4gPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSByZXF1aXJlZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgcHVibGljIG1hc2s6IGFueTtcbiAgcHVibGljIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcHBlciBjYXNlcyBsZXR0ZXJzIGluIHN0cmluZ1xuICAgKi9cbiAgdXBwZXJDYXNlUGlwZSh0ZXh0OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGV4dC50b1VwcGVyQ2FzZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIHZhbHVlXG4gICAqL1xuICBvblVwZGF0ZSggdmFsdWU6IHN0cmluZyApIHtcblxuICAgIC8vIEVtaXQgdmFsdWUgd2l0aG91dCBzcGFjZXNcbiAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoIHZhbHVlICk7XG4gIH1cbn1cbiJdfQ==