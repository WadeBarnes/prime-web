/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// List of constants used for masking inputs
import { EventEmitter, Input, Output } from '@angular/core';
import { Base } from './base';
/** @type {?} */
export var LETTER = /[A-Z]/i;
// Ignore case here, then upperCase it via pipe.
/** @type {?} */
export var NUMBER = /\d/;
/** @type {?} */
export var SPACE = ' ';
var MaskModel = /** @class */ (function (_super) {
    tslib_1.__extends(MaskModel, _super);
    function MaskModel() {
        var _this = _super.call(this) || this;
        _this.valueChange = new EventEmitter();
        _this.disabled = false;
        _this.required = true;
        return _this;
    }
    /**
     * Upper cases letters in string
     */
    /**
     * Upper cases letters in string
     * @param {?} text
     * @return {?}
     */
    MaskModel.prototype.upperCasePipe = /**
     * Upper cases letters in string
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.toUpperCase();
    };
    /**
     * Updates the value
     */
    /**
     * Updates the value
     * @param {?} value
     * @return {?}
     */
    MaskModel.prototype.onUpdate = /**
     * Updates the value
     * @param {?} value
     * @return {?}
     */
    function (value) {
        // Emit value without spaces
        this.valueChange.emit(value);
    };
    MaskModel.propDecorators = {
        value: [{ type: Input }],
        valueChange: [{ type: Output }],
        disabled: [{ type: Input }],
        required: [{ type: Input }]
    };
    return MaskModel;
}(Base));
export { MaskModel };
if (false) {
    /** @type {?} */
    MaskModel.prototype.value;
    /** @type {?} */
    MaskModel.prototype.valueChange;
    /** @type {?} */
    MaskModel.prototype.disabled;
    /** @type {?} */
    MaskModel.prototype.required;
    /** @type {?} */
    MaskModel.prototype.mask;
    /** @type {?} */
    MaskModel.prototype.placeholder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21vaC1jb21tb24tbGliLyIsInNvdXJjZXMiOlsibW9kZWxzL3NyYy9tYXNrLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDOztBQUU5QixNQUFNLEtBQU8sTUFBTSxHQUFHLFFBQVE7OztBQUM5QixNQUFNLEtBQU8sTUFBTSxHQUFHLElBQUk7O0FBQzFCLE1BQU0sS0FBTyxLQUFLLEdBQUcsR0FBRztBQUV4QjtJQUErQixxQ0FBSTtJQVdqQztRQUFBLFlBQ0UsaUJBQU8sU0FDUjtRQVZTLGlCQUFXLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7UUFFaEUsY0FBUSxHQUFZLEtBQUssQ0FBQztRQUMxQixjQUFRLEdBQVksSUFBSSxDQUFDOztJQU9sQyxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNILGlDQUFhOzs7OztJQUFiLFVBQWMsSUFBWTtRQUN4QixPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNILDRCQUFROzs7OztJQUFSLFVBQVUsS0FBYTtRQUVyQiw0QkFBNEI7UUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUM7SUFDakMsQ0FBQzs7d0JBM0JBLEtBQUs7OEJBQ0wsTUFBTTsyQkFFTixLQUFLOzJCQUNMLEtBQUs7O0lBd0JSLGdCQUFDO0NBQUEsQUE5QkQsQ0FBK0IsSUFBSSxHQThCbEM7U0E5QlksU0FBUzs7O0lBRXBCLDBCQUF1Qjs7SUFDdkIsZ0NBQXlFOztJQUV6RSw2QkFBbUM7O0lBQ25DLDZCQUFrQzs7SUFFbEMseUJBQWlCOztJQUNqQixnQ0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaXN0IG9mIGNvbnN0YW50cyB1c2VkIGZvciBtYXNraW5nIGlucHV0c1xuaW1wb3J0IHtFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBjb25zdCBMRVRURVIgPSAvW0EtWl0vaTsgLy8gSWdub3JlIGNhc2UgaGVyZSwgdGhlbiB1cHBlckNhc2UgaXQgdmlhIHBpcGUuXG5leHBvcnQgY29uc3QgTlVNQkVSID0gL1xcZC87XG5leHBvcnQgY29uc3QgU1BBQ0UgPSAnICc7XG5cbmV4cG9ydCBjbGFzcyBNYXNrTW9kZWwgZXh0ZW5kcyBCYXNlIHtcblxuICBASW5wdXQoKSB2YWx1ZTogc3RyaW5nO1xuICBAT3V0cHV0KCkgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgcmVxdWlyZWQ6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIHB1YmxpYyBtYXNrOiBhbnk7XG4gIHB1YmxpYyBwbGFjZWhvbGRlcjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICAvKipcbiAgICogVXBwZXIgY2FzZXMgbGV0dGVycyBpbiBzdHJpbmdcbiAgICovXG4gIHVwcGVyQ2FzZVBpcGUodGV4dDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRleHQudG9VcHBlckNhc2UoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSB2YWx1ZVxuICAgKi9cbiAgb25VcGRhdGUoIHZhbHVlOiBzdHJpbmcgKSB7XG5cbiAgICAvLyBFbWl0IHZhbHVlIHdpdGhvdXQgc3BhY2VzXG4gICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KCB2YWx1ZSApO1xuICB9XG59XG4iXX0=