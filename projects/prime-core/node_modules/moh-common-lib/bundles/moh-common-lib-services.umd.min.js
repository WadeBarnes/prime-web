!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("@angular/core"),require("@angular/common/http"),require("rxjs"),require("moment")):"function"==typeof define&&define.amd?define("moh-common-lib/services",["exports","rxjs/operators","@angular/core","@angular/common/http","rxjs","moment"],t):t((e["moh-common-lib"]=e["moh-common-lib"]||{},e["moh-common-lib"].services={}),e.rxjs.operators,e.ng.core,e.ng.common.http,e.rxjs,e.moment_)}(this,function(e,o,t,n,s,r){"use strict";var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function a(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var p=function(){function e(e){this.http=e,this.logHTTPRequestsToConsole=!1}return e.prototype.get=function(e,t){var r=this.httpOptions;r.params=t||undefined;var o=this.http.get(e,r);return this.setupRequest(o)},e.prototype.post=function(e,t){this.logHTTPRequestsToConsole&&console.log("Post Request: ",t);var r=this.http.post(e,t,this.httpOptions);return this.setupRequest(r)},e.prototype.setupRequest=function(e){return e=e.pipe(o.catchError(this.handleError.bind(this))),this.logHTTPRequestsToConsole&&(e=e.pipe(o.tap(function(e){return console.log("HTTP Success: ",e)},function(e){return console.log("HTTP Error: ",e)}))),e},Object.defineProperty(e.prototype,"httpOptions",{get:function(){return{headers:this._headers}},enumerable:!0,configurable:!0}),e}(),u=function(r){function e(e){var t=r.call(this,e)||this;return t.http=e,t._headers=new n.HttpHeaders,t.BASE_URL="https://geocoder.api.gov.bc.ca",t.ADDRESS_URL=t.BASE_URL+"/addresses.json?",t.defaultCountry="Canada",t.defaultProv="British Columbia",t}return a(e,r),e.prototype.lookup=function(e){var t=(new n.HttpParams).set("minScore","50").set("maxResults","10").set("echo","false").set("brief","false").set("autoComplete","true").set("matchPrecisionNot","LOCALITY,STREET,BLOCK,INTERSECTION").set("addressString",e);return this.get(this.ADDRESS_URL,t).pipe(o.map(this.processResponse))},e.prototype.processResponse=function(e){var s=this;return e.features.map(function(e){var t=e.properties,r=t.localityName,o=t.fullAddress.indexOf(", "+r),n=t.fullAddress.slice(0,o);return{fullAddress:t.fullAddress,city:r,street:n,country:s.defaultCountry,province:s.defaultProv}})},e.prototype.handleError=function(e){return console.error("GeoCoder network error",{error:e}),s.throwError("Geocoder error")},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.HttpClient}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject(n.HttpClient))},token:e,providedIn:"root"}),e}(p),c=r,l=function(r){function e(e){var t=r.call(this,e)||this;return t.http=e,t._headers=new n.HttpHeaders({request_method:"POST",logsource:window.location.hostname,http_x_forwarded_host:window.location.hostname}),t.url=null,t}return a(e,r),Object.defineProperty(e.prototype,"applicationId",{get:function(){return this._headers.get("applicationId")},set:function(e){this._headers=this._headers.set("applicationId",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"programName",{get:function(){return this._headers.get("name")},set:function(e){this._headers=this._headers.set("program",e)},enumerable:!0,configurable:!0}),e.prototype.setURL=function(e){this.url=e},e.prototype.log=function(e){this._log(e)},e.prototype.logError=function(e){this._logError(e)},e.prototype._log=function(e){return this.setSeverity(h.INFO),this._sendLog(e)},e.prototype._logError=function(e){return this.setSeverity(h.ERROR),this._sendLog(e)},e.prototype.logHttpError=function(e){return this._logError({event:"error",message:e.message,errorName:e.name,statusText:e.statusText})},e.prototype._sendLog=function(e){if(this.setTimestamp(),this.setTags(e.event),null===this.url){var t="Unable to send logs as URL as not been set via setURL()";return console.error(t),s.throwError(t)}var r={message:e};return this.post(this.url,r).subscribe()},e.prototype.handleError=function(e){return console.log("logService handleError()",e),e.error instanceof ErrorEvent?console.error("An error occured: ",e.error.message):console.error("Backend returned error code: "+e.status+".  Error body: "+e.error),s.throwError(e)},Object.defineProperty(e.prototype,"httpOptions",{get:function(){return{headers:this._headers,responseType:"text"}},enumerable:!0,configurable:!0}),e.prototype.setTimestamp=function(){this._headers=this._headers.set("timestamp",c().toISOString())},e.prototype.setSeverity=function(e){this._headers=this._headers.set("severity",e)},e.prototype.setTags=function(e){this._headers=this._headers.set("tags",e)},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.HttpClient}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject(n.HttpClient))},token:e,providedIn:"root"}),e}(p),h={INFO:"info",ERROR:"error"};e.GeocoderService=u,e.AbstractHttpService=p,e.CommonLogger=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=moh-common-lib-services.umd.min.js.map