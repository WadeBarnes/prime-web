/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function WizardProgressItem() { }
if (false) {
    /** @type {?} */
    WizardProgressItem.prototype.title;
    /** @type {?} */
    WizardProgressItem.prototype.route;
}
/**
 * Base functionality for container that is used to display bread crumbs
 */
export class Container {
    /**
     * Converts a lower case string of a route in a user readable title.  e.g.
     * "personal-info" -> "Personal Info"
     * @param {?} routePath
     * @return {?}
     */
    convertRouteToTitle(routePath) {
        return routePath.split('-').map((/**
         * @param {?} x
         * @return {?}
         */
        x => x[0].toUpperCase() + x.slice(1))).join(' ');
    }
    /**
     * @protected
     * @param {?} pageRoutes
     * @return {?}
     */
    setProgressSteps(pageRoutes) {
        // Interface for wizard progress items
        this.progressSteps = pageRoutes.map((/**
         * @param {?} page
         * @return {?}
         */
        page => {
            if (page.path !== '') {
                return {
                    title: this.convertRouteToTitle(page.path),
                    route: page.path
                };
            }
        })).filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x));
    }
}
if (false) {
    /**
     * Route items for the stepper
     * @type {?}
     */
    Container.prototype.progressSteps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFpbmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbW9oLWNvbW1vbi1saWIvIiwic291cmNlcyI6WyJtb2RlbHMvc3JjL2NvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUEsd0NBR0M7OztJQUZDLG1DQUFjOztJQUNkLG1DQUFjOzs7OztBQUloQixNQUFNLE9BQU8sU0FBUzs7Ozs7OztJQVNwQixtQkFBbUIsQ0FBQyxTQUFpQjtRQUNuQyxPQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRzs7OztRQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEYsQ0FBQzs7Ozs7O0lBRVMsZ0JBQWdCLENBQUUsVUFBbUI7UUFDekMsc0NBQXNDO1FBQ3RDLElBQUksQ0FBQyxhQUFhLEdBQUcsVUFBVSxDQUFDLEdBQUc7Ozs7UUFBQyxJQUFJLENBQUMsRUFBRTtZQUN6QyxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxFQUFFO2dCQUNwQixPQUFPO29CQUNMLEtBQUssRUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztvQkFDMUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJO2lCQUNqQixDQUFDO2FBQ0g7UUFDSCxDQUFDLEVBQUMsQ0FBQyxNQUFNOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQztJQUN4QixDQUFDO0NBQ0Y7Ozs7OztJQXJCQyxrQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2l6YXJkUHJvZ3Jlc3NJdGVtIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgcm91dGU6IHN0cmluZztcbn1cblxuLyoqIEJhc2UgZnVuY3Rpb25hbGl0eSBmb3IgY29udGFpbmVyIHRoYXQgaXMgdXNlZCB0byBkaXNwbGF5IGJyZWFkIGNydW1icyAqL1xuZXhwb3J0IGNsYXNzIENvbnRhaW5lciB7XG5cbiAgLyoqIFJvdXRlIGl0ZW1zIGZvciB0aGUgc3RlcHBlciAqL1xuICBwcm9ncmVzc1N0ZXBzOiBXaXphcmRQcm9ncmVzc0l0ZW1bXTtcblxuICAvKipcbiAgICogQ29udmVydHMgYSBsb3dlciBjYXNlIHN0cmluZyBvZiBhIHJvdXRlIGluIGEgdXNlciByZWFkYWJsZSB0aXRsZS4gIGUuZy5cbiAgICogXCJwZXJzb25hbC1pbmZvXCIgLT4gXCJQZXJzb25hbCBJbmZvXCJcbiAgICovXG4gIGNvbnZlcnRSb3V0ZVRvVGl0bGUocm91dGVQYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiByb3V0ZVBhdGguc3BsaXQoJy0nKS5tYXAoeCA9PiB4WzBdLnRvVXBwZXJDYXNlKCkgKyB4LnNsaWNlKDEpKS5qb2luKCcgJyk7XG4gIH1cblxuICBwcm90ZWN0ZWQgc2V0UHJvZ3Jlc3NTdGVwcyggcGFnZVJvdXRlczogUm91dGVbXSApOiB2b2lkIHtcbiAgICAgICAgLy8gSW50ZXJmYWNlIGZvciB3aXphcmQgcHJvZ3Jlc3MgaXRlbXNcbiAgICAgICAgdGhpcy5wcm9ncmVzc1N0ZXBzID0gcGFnZVJvdXRlcy5tYXAocGFnZSA9PiB7XG4gICAgICAgICAgaWYgKHBhZ2UucGF0aCAhPT0gJycpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHRpdGxlOiB0aGlzLmNvbnZlcnRSb3V0ZVRvVGl0bGUocGFnZS5wYXRoKSxcbiAgICAgICAgICAgICAgcm91dGU6IHBhZ2UucGF0aFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLmZpbHRlcih4ID0+IHgpO1xuICB9XG59XG4iXX0=