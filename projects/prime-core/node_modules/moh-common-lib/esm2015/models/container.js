/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function WizardProgressItem() { }
if (false) {
    /** @type {?} */
    WizardProgressItem.prototype.title;
    /** @type {?} */
    WizardProgressItem.prototype.route;
}
/**
 * Base functionality for container that is used to display bread crumbs
 */
export class Container {
    /**
     * Converts a lower case string of a route in a user readable title.  e.g.
     * "personal-info" -> "Personal Info"
     * @param {?} routePath
     * @return {?}
     */
    convertRouteToTitle(routePath) {
        return routePath.split('-').map((/**
         * @param {?} x
         * @return {?}
         */
        x => x[0].toUpperCase() + x.slice(1))).join(' ');
    }
    /**
     * @protected
     * @param {?} pageRoutes
     * @return {?}
     */
    setProgressSteps(pageRoutes) {
        // Interface for wizard progress items
        this.progressSteps = pageRoutes.map((/**
         * @param {?} page
         * @return {?}
         */
        page => {
            if (page.path !== '') {
                return {
                    title: this.convertRouteToTitle(page.path),
                    route: page.path
                };
            }
        })).filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x));
    }
}
if (false) {
    /**
     * Route items for the stepper
     * @type {?}
     */
    Container.prototype.progressSteps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFpbmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbW9oLWNvbW1vbi1saWIvbW9kZWxzLyIsInNvdXJjZXMiOlsiY29udGFpbmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQSx3Q0FHQzs7O0lBRkMsbUNBQWM7O0lBQ2QsbUNBQWM7Ozs7O0FBSWhCLE1BQU0sT0FBTyxTQUFTOzs7Ozs7O0lBU3BCLG1CQUFtQixDQUFDLFNBQWlCO1FBQ25DLE9BQU8sU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNsRixDQUFDOzs7Ozs7SUFFUyxnQkFBZ0IsQ0FBRSxVQUFtQjtRQUN6QyxzQ0FBc0M7UUFDdEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxVQUFVLENBQUMsR0FBRzs7OztRQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3pDLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxFQUFFLEVBQUU7Z0JBQ3BCLE9BQU87b0JBQ0wsS0FBSyxFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO29CQUMxQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUk7aUJBQ2pCLENBQUM7YUFDSDtRQUNILENBQUMsRUFBQyxDQUFDLE1BQU07Ozs7UUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDO0lBQ3hCLENBQUM7Q0FDRjs7Ozs7O0lBckJDLGtDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBXaXphcmRQcm9ncmVzc0l0ZW0ge1xuICB0aXRsZTogc3RyaW5nO1xuICByb3V0ZTogc3RyaW5nO1xufVxuXG4vKiogQmFzZSBmdW5jdGlvbmFsaXR5IGZvciBjb250YWluZXIgdGhhdCBpcyB1c2VkIHRvIGRpc3BsYXkgYnJlYWQgY3J1bWJzICovXG5leHBvcnQgY2xhc3MgQ29udGFpbmVyIHtcblxuICAvKiogUm91dGUgaXRlbXMgZm9yIHRoZSBzdGVwcGVyICovXG4gIHByb2dyZXNzU3RlcHM6IFdpemFyZFByb2dyZXNzSXRlbVtdO1xuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIGxvd2VyIGNhc2Ugc3RyaW5nIG9mIGEgcm91dGUgaW4gYSB1c2VyIHJlYWRhYmxlIHRpdGxlLiAgZS5nLlxuICAgKiBcInBlcnNvbmFsLWluZm9cIiAtPiBcIlBlcnNvbmFsIEluZm9cIlxuICAgKi9cbiAgY29udmVydFJvdXRlVG9UaXRsZShyb3V0ZVBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHJvdXRlUGF0aC5zcGxpdCgnLScpLm1hcCh4ID0+IHhbMF0udG9VcHBlckNhc2UoKSArIHguc2xpY2UoMSkpLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBzZXRQcm9ncmVzc1N0ZXBzKCBwYWdlUm91dGVzOiBSb3V0ZVtdICk6IHZvaWQge1xuICAgICAgICAvLyBJbnRlcmZhY2UgZm9yIHdpemFyZCBwcm9ncmVzcyBpdGVtc1xuICAgICAgICB0aGlzLnByb2dyZXNzU3RlcHMgPSBwYWdlUm91dGVzLm1hcChwYWdlID0+IHtcbiAgICAgICAgICBpZiAocGFnZS5wYXRoICE9PSAnJykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgdGl0bGU6IHRoaXMuY29udmVydFJvdXRlVG9UaXRsZShwYWdlLnBhdGgpLFxuICAgICAgICAgICAgICByb3V0ZTogcGFnZS5wYXRoXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSkuZmlsdGVyKHggPT4geCk7XG4gIH1cbn1cbiJdfQ==