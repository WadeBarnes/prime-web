/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, forwardRef } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
/**
 * FormSubmitBar is similar to FormActionBar, but it is meant to be used with
 * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form
 * in question.
 */
export class FormSubmitBarComponent {
    constructor() {
        this.submitLabel = 'Continue';
        this.canContinue = true;
        this.isLoading = false;
        this.defaultColor = true;
        this.btnClick = new EventEmitter();
        /**
         * Is the component nested inside a form, and not properly full-width in a
         * page layout? We add negative margins to space out.
         *
         * Currently tihs only works for the 'blank' layout type for the page
         * framework, but would be easy to extend by adding more negative classes as
         * need be.
         */
        this.increaseWidth = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
FormSubmitBarComponent.decorators = [
    { type: Component, args: [{
                selector: 'common-form-submit-bar',
                template: "<div class=\"form-action-bar form-bar\" [ngClass]=\"{disabled: !canContinue, 'mx-lg-n5 mx-md-n3 mb-n3 mt-3': increaseWidth}\">\n        <button class=\"btn btn-lg {{defaultColor ? 'btn-primary' : 'btn-secondary' }} submit\"\n                [ngClass]=\"{disabled: !canContinue || isLoading}\"\n                type='submit'>\n          <ng-container *ngIf=\"!isLoading; else loadingSpinner\"> {{submitLabel}} </ng-container>\n          \n        </button>\n    </div>\n    \n    <ng-template #loadingSpinner>\n        <i class=\"fa fa-spinner fa-pulse fa-fw\"></i>\n    </ng-template>",
                viewProviders: [{ provide: ControlContainer, useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => NgForm)) }],
                styles: [".form-action-bar{display:flex;justify-content:flex-end;padding:1em;background-color:#cdd9e4;transition:background-color .3s;position:-webkit-sticky;position:sticky;bottom:0;z-index:10;left:5rem;right:5rem}.form-action-bar.disabled{background-color:#d5d9dd}@media (max-width:991.98px){.form-action-bar{left:2.5rem;right:2.5rem}}.submit{min-width:240px}@media (max-width:767.98px){.form-action-bar{left:0;right:0}.submit{min-width:100%}}.btn{white-space:normal!important;word-wrap:break-word}"]
            }] }
];
/** @nocollapse */
FormSubmitBarComponent.ctorParameters = () => [];
FormSubmitBarComponent.propDecorators = {
    submitLabel: [{ type: Input }],
    canContinue: [{ type: Input }],
    isLoading: [{ type: Input }],
    defaultColor: [{ type: Input }],
    btnClick: [{ type: Output }],
    increaseWidth: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FormSubmitBarComponent.prototype.submitLabel;
    /** @type {?} */
    FormSubmitBarComponent.prototype.canContinue;
    /** @type {?} */
    FormSubmitBarComponent.prototype.isLoading;
    /** @type {?} */
    FormSubmitBarComponent.prototype.defaultColor;
    /** @type {?} */
    FormSubmitBarComponent.prototype.btnClick;
    /**
     * Is the component nested inside a form, and not properly full-width in a
     * page layout? We add negative margins to space out.
     *
     * Currently tihs only works for the 'blank' layout type for the page
     * framework, but would be easy to extend by adding more negative classes as
     * need be.
     * @type {?}
     */
    FormSubmitBarComponent.prototype.increaseWidth;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1zdWJtaXQtYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21vaC1jb21tb24tbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZm9ybS1zdWJtaXQtYmFyL2Zvcm0tc3VibWl0LWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7O0FBYzFELE1BQU0sT0FBTyxzQkFBc0I7SUFpQmpDO1FBaEJTLGdCQUFXLEdBQVcsVUFBVSxDQUFDO1FBQ2pDLGdCQUFXLEdBQVksSUFBSSxDQUFDO1FBQzVCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFDM0IsaUJBQVksR0FBWSxJQUFJLENBQUM7UUFDNUIsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDOzs7Ozs7Ozs7UUFVdkQsa0JBQWEsR0FBWSxLQUFLLENBQUM7SUFFeEIsQ0FBQzs7OztJQUVqQixRQUFRO0lBQ1IsQ0FBQzs7O1lBMUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxvbEJBQStDO2dCQUUvQyxhQUFhLEVBQUUsQ0FBRSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsVUFBVTs7O3dCQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUU7O2FBQ3pGOzs7OzswQkFFRSxLQUFLOzBCQUNMLEtBQUs7d0JBQ0wsS0FBSzsyQkFDTCxLQUFLO3VCQUNMLE1BQU07NEJBVU4sS0FBSzs7OztJQWROLDZDQUEwQzs7SUFDMUMsNkNBQXFDOztJQUNyQywyQ0FBb0M7O0lBQ3BDLDhDQUFzQzs7SUFDdEMsMENBQWdFOzs7Ozs7Ozs7O0lBVWhFLCtDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIsIE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuXG4vKipcbiAqIEZvcm1TdWJtaXRCYXIgaXMgc2ltaWxhciB0byBGb3JtQWN0aW9uQmFyLCBidXQgaXQgaXMgbWVhbnQgdG8gYmUgdXNlZCB3aXRoXG4gKiAobmdTdWJtaXQpIG9uIHRoZSBmb3JtLiBNYWtlIHN1cmUgdG8gZW5jbG9zZSBGb3JtU3VibWl0QmFyIGluc2lkZSBvZiB0aGUgZm9ybVxuICogaW4gcXVlc3Rpb24uXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbW1vbi1mb3JtLXN1Ym1pdC1iYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1zdWJtaXQtYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZm9ybS1zdWJtaXQtYmFyLmNvbXBvbmVudC5zY3NzJ10sXG4gIHZpZXdQcm92aWRlcnM6IFsgeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBOZ0Zvcm0gKSB9IF1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybVN1Ym1pdEJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHN1Ym1pdExhYmVsOiBzdHJpbmcgPSAnQ29udGludWUnO1xuICBASW5wdXQoKSBjYW5Db250aW51ZTogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIGlzTG9hZGluZzogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBkZWZhdWx0Q29sb3I6IGJvb2xlYW4gPSB0cnVlO1xuICBAT3V0cHV0KCkgYnRuQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgLyoqXG4gICAqIElzIHRoZSBjb21wb25lbnQgbmVzdGVkIGluc2lkZSBhIGZvcm0sIGFuZCBub3QgcHJvcGVybHkgZnVsbC13aWR0aCBpbiBhXG4gICAqIHBhZ2UgbGF5b3V0PyBXZSBhZGQgbmVnYXRpdmUgbWFyZ2lucyB0byBzcGFjZSBvdXQuXG4gICAqXG4gICAqIEN1cnJlbnRseSB0aWhzIG9ubHkgd29ya3MgZm9yIHRoZSAnYmxhbmsnIGxheW91dCB0eXBlIGZvciB0aGUgcGFnZVxuICAgKiBmcmFtZXdvcmssIGJ1dCB3b3VsZCBiZSBlYXN5IHRvIGV4dGVuZCBieSBhZGRpbmcgbW9yZSBuZWdhdGl2ZSBjbGFzc2VzIGFzXG4gICAqIG5lZWQgYmUuXG4gICAqL1xuICBASW5wdXQoKSBpbmNyZWFzZVdpZHRoOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxufVxuIl19