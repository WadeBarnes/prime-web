/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import { MaskModel, LETTER, NUMBER, SPACE } from '../../../models/src/mask.model';
export class PostalCodeComponent extends MaskModel {
    constructor() {
        super();
        this.label = 'Postal Code';
        this.displayMask = true;
        this.maxlen = '250';
        this.placeholder = 'A1A 1A1';
        this.pcFormat = /^[A-Za-z][0-9][A-Za-z]\s?[0-9][A-Za-z][0-9]$/;
        this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
PostalCodeComponent.decorators = [
    { type: Component, args: [{
                selector: 'common-postal-code',
                template: "<label class=\"control-label\">{{label}}</label>\n<div *ngIf=\"displayMask; else NoMask\">\n<input #postalRef=\"ngModel\"\n       class=\"form-control\"\n       spellcheck=\"false\"\n       type=\"text\"\n       id=\"postalCode_{{objectId}}\"\n       name=\"postalCode_{{objectId}}\"\n       [placeholder]=\"placeholder\"\n       [ngModel]=\"value\"\n       (ngModelChange)=\"onUpdate($event)\"\n       [textMask]=\"{mask: mask, pipe: upperCasePipe}\"\n       [pattern]='pcFormat'\n       [required]=\"required\"\n       [disabled]=\"disabled\" />\n\n  <!-- Error messages for input -->\n  <div *ngIf=\"!disabled && postalRef.touched\"\n        role=\"alert\"\n        class=\"error-container\"\n        aria-live=\"assertive\">\n    <div class=\"text-danger\" *ngIf=\"postalRef?.errors?.required\">\n      {{label}} is required.\n    </div>\n    <div class=\"text-danger\" *ngIf=\"postalRef?.errors?.pattern\">\n      Must be in the format {{placeholder}}.\n    </div>\n  </div>\n</div>\n\n<ng-template #NoMask>\n  <input class=\"form-control\"\n         #postalRef=\"ngModel\"\n         spellcheck=\"false\"\n         type=\"text\"\n         id=\"postalCode_{{objectId}}\"\n         name=\"postalCode_{{objectId}}\"\n         [ngModel]=\"value\"\n         (ngModelChange)=\"onUpdate($event)\"\n         [required]=\"required\"\n         [disabled]=\"disabled\"\n         maxlength=\"{{maxlen}}\"/>\n\n  <!-- Error messages for input -->\n  <div *ngIf=\"!disabled && postalRef.touched\"\n        role=\"alert\"\n        class=\"error-container\"\n        aria-live=\"assertive\">\n    <div class=\"text-danger\" *ngIf=\"postalRef?.errors?.required\">\n      Postal Code is required.\n    </div>\n  </div>\n</ng-template>\n",
                // Re-use the same ngForm that it's parent is using. The component will show
                // up in its parents `this.form`, and will auto-update `this.form.valid`
                viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],
                styles: [""]
            }] }
];
/** @nocollapse */
PostalCodeComponent.ctorParameters = () => [];
PostalCodeComponent.propDecorators = {
    label: [{ type: Input }],
    displayMask: [{ type: Input }],
    maxlen: [{ type: Input }],
    placeholder: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PostalCodeComponent.prototype.label;
    /** @type {?} */
    PostalCodeComponent.prototype.displayMask;
    /** @type {?} */
    PostalCodeComponent.prototype.maxlen;
    /** @type {?} */
    PostalCodeComponent.prototype.placeholder;
    /** @type {?} */
    PostalCodeComponent.prototype.pcFormat;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zdGFsLWNvZGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbW9oLWNvbW1vbi1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wb3N0YWwtY29kZS9wb3N0YWwtY29kZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFXbEYsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFNBQVM7SUFVaEQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQVRELFVBQUssR0FBVyxhQUFhLENBQUM7UUFDOUIsZ0JBQVcsR0FBWSxJQUFJLENBQUM7UUFDNUIsV0FBTSxHQUFXLEtBQUssQ0FBQztRQUN2QixnQkFBVyxHQUFXLFNBQVMsQ0FBQztRQUVsQyxhQUFRLEdBQVcsOENBQThDLENBQUM7UUFLdkUsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Ozs7SUFFRixRQUFRO0lBQ1IsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5Qix1c0RBQTJDOzs7Z0JBSzNDLGFBQWEsRUFBRSxDQUFFLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzs7YUFDckU7Ozs7O29CQUdFLEtBQUs7MEJBQ0wsS0FBSztxQkFDTCxLQUFLOzBCQUNMLEtBQUs7Ozs7SUFITixvQ0FBdUM7O0lBQ3ZDLDBDQUFxQzs7SUFDckMscUNBQWdDOztJQUNoQywwQ0FBeUM7O0lBRXpDLHVDQUF5RSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTWFza01vZGVsLCBMRVRURVIsIE5VTUJFUiwgU1BBQ0UgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvc3JjL21hc2subW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb21tb24tcG9zdGFsLWNvZGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG9zdGFsLWNvZGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wb3N0YWwtY29kZS5jb21wb25lbnQuc2NzcyddLFxuXG4gIC8vIFJlLXVzZSB0aGUgc2FtZSBuZ0Zvcm0gdGhhdCBpdCdzIHBhcmVudCBpcyB1c2luZy4gVGhlIGNvbXBvbmVudCB3aWxsIHNob3dcbiAgLy8gdXAgaW4gaXRzIHBhcmVudHMgYHRoaXMuZm9ybWAsIGFuZCB3aWxsIGF1dG8tdXBkYXRlIGB0aGlzLmZvcm0udmFsaWRgXG4gIHZpZXdQcm92aWRlcnM6IFsgeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIFBvc3RhbENvZGVDb21wb25lbnQgZXh0ZW5kcyBNYXNrTW9kZWwgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmcgPSAnUG9zdGFsIENvZGUnO1xuICBASW5wdXQoKSBkaXNwbGF5TWFzazogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIG1heGxlbjogc3RyaW5nID0gJzI1MCc7XG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyOiBzdHJpbmcgPSAnQTFBIDFBMSc7XG5cbiAgcHVibGljIHBjRm9ybWF0OiBSZWdFeHAgPSAvXltBLVphLXpdWzAtOV1bQS1aYS16XVxccz9bMC05XVtBLVphLXpdWzAtOV0kLztcblxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5tYXNrID0gW0xFVFRFUiwgTlVNQkVSLCBMRVRURVIsIFNQQUNFLCBOVU1CRVIsIExFVFRFUiwgTlVNQkVSXTtcbiAgIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxufVxuIl19