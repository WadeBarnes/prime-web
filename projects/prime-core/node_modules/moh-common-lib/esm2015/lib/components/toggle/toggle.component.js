/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Base } from '../../../models/src/base';
export class ToggleComponent extends Base {
    constructor() {
        super();
        this.dataChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ToggleComponent.decorators = [
    { type: Component, args: [{
                selector: 'common-toggle',
                template: "<fieldset class=\"p-sm-1\">\n   <legend class=\"toggle--legend\">{{label}}</legend>\n   <div class=\"custom-radio custom-control custom-control-inline\">\n      <input class=\"custom-control-input \"\n         type=\"radio\"\n         id=\"no_{{objectId}}\"\n         name=\"selection_{{objectId}}\"\n         value=\"No\"\n         [checked]=\"data === false\"\n         (click)=\"dataChange.emit(false)\">\n      <label class=\"custom-control-label\" for=\"no_{{objectId}}\">No</label>\n   </div>\n   <div class=\"custom-radio custom-control custom-control-inline\">\n      <input class=\"custom-control-input\"\n         type=\"radio\"\n         id=\"yes_{{objectId}}\"\n         name=\"selection_{{objectId}}\"\n         value=\"Yes\"\n         [checked]=\"data === true\"\n         (click)=\"dataChange.emit(true)\">\n      <label class=\"custom-control-label\" for=\"yes_{{objectId}}\">Yes</label>\n   </div>\n</fieldset>\n\n",
                styles: [".toggle--legend{font-size:inherit;font-weight:700}.custom-control{padding-right:1.5rem;padding-left:0}.custom-control-label{cursor:pointer}.custom-radio .custom-control-label::before{border:1.5px solid #000}.custom-control-label::before{top:0;width:1.3rem;height:1.3rem;background-color:#fcfcfc;left:1.75rem}.custom-control-label::after{top:0;width:1.3rem;height:1.3rem;left:1.75rem}.custom-radio .custom-control-input:checked~.custom-control-label::before{background-color:#fcfcfc;border-color:#036}.custom-control-input:checked~.custom-control-label::before{color:#fcfcfc;background-color:#fcfcfc;border-color:#036}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-3.75 -3.75 8.25 8.25'%3E%3Ccircle r='3.5' fill='%23000099'/%3E%3C/svg%3E\")!important}"]
            }] }
];
/** @nocollapse */
ToggleComponent.ctorParameters = () => [];
ToggleComponent.propDecorators = {
    data: [{ type: Input }],
    label: [{ type: Input }],
    dataChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ToggleComponent.prototype.data;
    /** @type {?} */
    ToggleComponent.prototype.label;
    /** @type {?} */
    ToggleComponent.prototype.dataChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21vaC1jb21tb24tbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdG9nZ2xlL3RvZ2dsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBT2hELE1BQU0sT0FBTyxlQUFnQixTQUFRLElBQUk7SUFNdkM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUhBLGVBQVUsR0FBMEIsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQUkxRSxDQUFDOzs7O0lBRUQsUUFBUTtJQUNSLENBQUM7OztZQWhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLCs2QkFBc0M7O2FBRXZDOzs7OzttQkFHRSxLQUFLO29CQUNMLEtBQUs7eUJBQ0wsTUFBTTs7OztJQUZQLCtCQUF1Qjs7SUFDdkIsZ0NBQXVCOztJQUN2QixxQ0FBMEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3NyYy9iYXNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29tbW9uLXRvZ2dsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi90b2dnbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90b2dnbGUuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUb2dnbGVDb21wb25lbnQgZXh0ZW5kcyBCYXNlIGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBkYXRhOiBib29sZWFuO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBAT3V0cHV0KCkgZGF0YUNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=