/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
/**
 *
 * The base styles for a breadcrumb with slots for content to go.  If you need a
 * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use
 * the base styles.  There are 3 slots: left, center, and right - all are
 * optional and any configuration works. You select the slot by adding it as an
 * attribute to the top level elements inside of the breadcrumb element.
 *
 *   Example usage:
 *
 *   <common-core-breadcrumb>
 *    <div left>
 *      <a routerLink="/provisioner/">Dashboard</a> /
 *      <strong>Provision by {{ IS_SHOWING_PERSON ? "User" : "Site" }}</strong>
 *    </div>
 *    <div center></div>
 *    <div right></div>
 *   </common-core-breadcrumb>
 *
 * @export
 */
export class CoreBreadcrumbComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
CoreBreadcrumbComponent.decorators = [
    { type: Component, args: [{
                selector: 'common-core-breadcrumb',
                template: "<nav class=\"breadcrumb d-flex justify-content-between horizontal-scroll\">\n    <ng-content select=\"[left]\"></ng-content>\n    <ng-content class='d-flex' select=\"[center]\"></ng-content>\n    <ng-content select=\"[right]\"></ng-content>\n</nav>\n",
                styles: [".breadcrumb{display:flex;justify-content:space-between;background-color:transparent}@media (min-width:992px){.breadcrumb{flex-wrap:nowrap}}.horizontal-scroll{overflow-x:scroll;overflow-y:hidden}.horizontal-scroll::-webkit-scrollbar{background:0 0;height:5px}.horizontal-scroll::-webkit-scrollbar-thumb{background:#5475a7;border-radius:10px}"]
            }] }
];
/** @nocollapse */
CoreBreadcrumbComponent.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS1icmVhZGNydW1iLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21vaC1jb21tb24tbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvY29yZS1icmVhZGNydW1iL2NvcmUtYnJlYWRjcnVtYi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QmxELE1BQU0sT0FBTyx1QkFBdUI7SUFFbEMsZ0JBQWdCLENBQUM7Ozs7SUFFakIsUUFBUTtJQUNSLENBQUM7OztZQVZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxzUUFBK0M7O2FBRWhEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKlxuICogVGhlIGJhc2Ugc3R5bGVzIGZvciBhIGJyZWFkY3J1bWIgd2l0aCBzbG90cyBmb3IgY29udGVudCB0byBnby4gIElmIHlvdSBuZWVkIGFcbiAqIGNvbXBsZXggYnJlYWRjcnVtYiwgdGhlIGlkZWEgaXMgeW91IGNhbiBleHRlbmQgdGhpcyBDb3JlQnJlYWRjcnVtYiBhbmQgdXNlXG4gKiB0aGUgYmFzZSBzdHlsZXMuICBUaGVyZSBhcmUgMyBzbG90czogbGVmdCwgY2VudGVyLCBhbmQgcmlnaHQgLSBhbGwgYXJlXG4gKiBvcHRpb25hbCBhbmQgYW55IGNvbmZpZ3VyYXRpb24gd29ya3MuIFlvdSBzZWxlY3QgdGhlIHNsb3QgYnkgYWRkaW5nIGl0IGFzIGFuXG4gKiBhdHRyaWJ1dGUgdG8gdGhlIHRvcCBsZXZlbCBlbGVtZW50cyBpbnNpZGUgb2YgdGhlIGJyZWFkY3J1bWIgZWxlbWVudC5cbiAqXG4gKiAgIEV4YW1wbGUgdXNhZ2U6XG4gKlxuICogICA8Y29tbW9uLWNvcmUtYnJlYWRjcnVtYj5cbiAqICAgIDxkaXYgbGVmdD5cbiAqICAgICAgPGEgcm91dGVyTGluaz1cIi9wcm92aXNpb25lci9cIj5EYXNoYm9hcmQ8L2E+IC9cbiAqICAgICAgPHN0cm9uZz5Qcm92aXNpb24gYnkge3sgSVNfU0hPV0lOR19QRVJTT04gPyBcIlVzZXJcIiA6IFwiU2l0ZVwiIH19PC9zdHJvbmc+XG4gKiAgICA8L2Rpdj5cbiAqICAgIDxkaXYgY2VudGVyPjwvZGl2PlxuICogICAgPGRpdiByaWdodD48L2Rpdj5cbiAqICAgPC9jb21tb24tY29yZS1icmVhZGNydW1iPlxuICpcbiAqICAgQGV4cG9ydFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb21tb24tY29yZS1icmVhZGNydW1iJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvcmUtYnJlYWRjcnVtYi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2NvcmUtYnJlYWRjcnVtYi5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvcmVCcmVhZGNydW1iQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==