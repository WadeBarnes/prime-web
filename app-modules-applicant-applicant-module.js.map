{"version":3,"sources":["webpack:///./node_modules/ngx-bootstrap/chronos/moment/calendar.js","webpack:///./node_modules/ngx-bootstrap/chronos/moment/diff.js","webpack:///./node_modules/ngx-bootstrap/chronos/moment/min-max.js","webpack:///./node_modules/ngx-bootstrap/chronos/test/chain.js","webpack:///./node_modules/ngx-bootstrap/chronos/units/timezone.js","webpack:///./src/app/core/enrollment-list/enrollment-list.class.ts","webpack:///./src/app/modules/applicant/applicant-routing.modules.ts","webpack:///./src/app/modules/applicant/applicant.module.ts","webpack:///./src/app/modules/applicant/components/add-pharma-net-organization/add-pharma-net-organization.component.html","webpack:///./src/app/modules/applicant/components/add-pharma-net-organization/add-pharma-net-organization.component.scss","webpack:///./src/app/modules/applicant/components/add-pharma-net-organization/add-pharma-net-organization.component.ts","webpack:///./src/app/modules/applicant/components/app-enrollment-progress-row/app-enrollment-progress-row.component.html","webpack:///./src/app/modules/applicant/components/app-enrollment-progress-row/app-enrollment-progress-row.component.scss","webpack:///./src/app/modules/applicant/components/app-enrollment-progress-row/app-enrollment-progress-row.component.ts","webpack:///./src/app/modules/applicant/components/appl-enrollment-list/appl-enrollment-list.component.html","webpack:///./src/app/modules/applicant/components/appl-enrollment-list/appl-enrollment-list.component.scss","webpack:///./src/app/modules/applicant/components/appl-enrollment-list/appl-enrollment-list.component.ts","webpack:///./src/app/modules/applicant/components/appl-enrollment-row/appl-enrollment-row.component.html","webpack:///./src/app/modules/applicant/components/appl-enrollment-row/appl-enrollment-row.component.scss","webpack:///./src/app/modules/applicant/components/appl-enrollment-row/appl-enrollment-row.component.ts","webpack:///./src/app/modules/applicant/components/applicant-breadcrumbs/applicant-breadcrumbs.component.html","webpack:///./src/app/modules/applicant/components/applicant-breadcrumbs/applicant-breadcrumbs.component.scss","webpack:///./src/app/modules/applicant/components/applicant-breadcrumbs/applicant-breadcrumbs.component.ts","webpack:///./src/app/modules/applicant/components/pharma-net-access-list/pharma-net-access-list.component.html","webpack:///./src/app/modules/applicant/components/pharma-net-access-list/pharma-net-access-list.component.scss","webpack:///./src/app/modules/applicant/components/pharma-net-access-list/pharma-net-access-list.component.ts","webpack:///./src/app/modules/applicant/components/pharma-net-access-row/pharma-net-access-row.component.html","webpack:///./src/app/modules/applicant/components/pharma-net-access-row/pharma-net-access-row.component.scss","webpack:///./src/app/modules/applicant/components/pharma-net-access-row/pharma-net-access-row.component.ts","webpack:///./src/app/modules/applicant/pages/applicant-access-acceptance/applicant-access-acceptance.component.html","webpack:///./src/app/modules/applicant/pages/applicant-access-acceptance/applicant-access-acceptance.component.scss","webpack:///./src/app/modules/applicant/pages/applicant-access-acceptance/applicant-access-acceptance.component.ts","webpack:///./src/app/modules/applicant/pages/applicant-access-acceptance/applicant-access-acceptance.ts","webpack:///./src/app/modules/applicant/pages/applicant-contact/applicant-contact.component.html","webpack:///./src/app/modules/applicant/pages/applicant-contact/applicant-contact.component.scss","webpack:///./src/app/modules/applicant/pages/applicant-contact/applicant-contact.component.ts","webpack:///./src/app/modules/applicant/pages/applicant-dashboard/applicant-dashboard.component.html","webpack:///./src/app/modules/applicant/pages/applicant-dashboard/applicant-dashboard.component.scss","webpack:///./src/app/modules/applicant/pages/applicant-dashboard/applicant-dashboard.component.ts","webpack:///./src/app/modules/applicant/pages/applicant-professional/applicant-professional.component.html","webpack:///./src/app/modules/applicant/pages/applicant-professional/applicant-professional.component.scss","webpack:///./src/app/modules/applicant/pages/applicant-professional/applicant-professional.component.ts","webpack:///./src/app/modules/applicant/pages/applicant-review-page/applicant-review-page.component.html","webpack:///./src/app/modules/applicant/pages/applicant-review-page/applicant-review-page.component.scss","webpack:///./src/app/modules/applicant/pages/applicant-review-page/applicant-review-page.component.ts","webpack:///./src/app/modules/applicant/pages/complete-submission/complete-submission.component.html","webpack:///./src/app/modules/applicant/pages/complete-submission/complete-submission.component.scss","webpack:///./src/app/modules/applicant/pages/complete-submission/complete-submission.component.ts","webpack:///./src/app/modules/applicant/pages/pharma-net-page/pharma-net-page.component.html","webpack:///./src/app/modules/applicant/pages/pharma-net-page/pharma-net-page.component.scss","webpack:///./src/app/modules/applicant/pages/pharma-net-page/pharma-net-page.component.ts"],"names":[],"mappings":"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;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,kBAAkB,kEAAO;AACzB,8BAA8B,sBAAsB,EAAE;AACtD,8BAA8B,sBAAsB,EAAE;AACtD,gBAAgB,oDAAG;AACnB;AACA;AACA;AACA,WAAW,oEAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,uBAAuB,kEAAS;AAChC;AACA,+CAA+C,mEAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAM;AAClB,yBAAyB,+DAAS;AAClC;AACA;AACA;AACA,qBAAqB,+EAAgB;AACrC;AACA,uBAAuB,mEAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,sEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kEAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAQ;AACpB,yBAAyB,kDAAG;AAC5B;AACA,YAAY,mEAAQ;AACpB,yBAAyB,kDAAG;AAC5B;AACA,YAAY,mEAAQ;AACpB;AACA;AACA,yCAAyC,QAAQ,kDAAG,mCAAmC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E,eAAe,kEAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,0DAAI;AACnB;AACA;AACA;AACA,qBAAqB,kEAAK;AAC1B;AACA;AACA;AACA,eAAe,0DAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wEAAc,EAAE,0CAA0C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAQ;AACpB,yBAAyB,uDAAQ;AACjC;AACA;AACA,YAAY,mEAAQ;AACpB,yBAAyB,uDAAQ;AACjC;AACA,YAAY,mEAAQ;AACpB;AACA;AACA,yCAAyC,QAAQ,uDAAQ,mCAAmC,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uCAAuC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uEAAW,0BAA0B,uEAAW;AAC5D;AACA;AACA,YAAY,qEAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAAW;AAC7B,mBAAmB,oEAAQ;AAC3B,kBAAkB,mEAAO;AACzB,mBAAmB,oEAAQ;AAC3B,qBAAqB,sEAAU;AAC/B,qBAAqB,sEAAU;AAC/B,0BAA0B,2EAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mEAAO;AACtB;AACA;AACA;AACA,eAAe,oEAAQ;AACvB;AACA;AACA;AACA,eAAe,qEAAS;AACxB;AACA;AACA;AACA,eAAe,kEAAM;AACrB;AACA;AACA;AACA,eAAe,yEAAa;AAC5B;AACA;AACA;AACA,eAAe,0EAAc;AAC7B;AACA;AACA,eAAe,sEAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kEAAY;AAC/B;AACA,qBAAqB,kEAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,eAAe,0EAAoB;AACnC;AACA;AACA,eAAe,0EAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAW;AAC1B;AACA;AACA,eAAe,oEAAW;AAC1B;AACA;AACA;AACA,mBAAmB,uEAAW;AAC9B;AACA,qBAAqB,+DAAS,CAAC,uEAAW;AAC1C;AACA;AACA;AACA;AACA,mBAAmB,qEAAW;AAC9B;AACA,mBAAmB,wEAAc;AACjC,YAAY,iEAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wEAAc;AACjC;AACA,mBAAmB,2EAAiB;AACpC,YAAY,iEAAM;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU,CAAC,uEAAW;AACrC;AACA;AACA;AACA,mBAAmB,oEA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","file":"app-modules-applicant-applicant-module.js","sourcesContent":["import { diff } from './diff';\nimport { cloneWithOffset } from '../units/offset';\nimport { isFunction, isString } from '../utils/type-checks';\nimport { cloneDate } from '../create/clone';\nimport { startOf } from '../utils/start-end-of';\nimport { formatDate } from '../format';\nimport { getLocale } from '../locale/locales';\nexport function getCalendarFormat(date, now, config) {\n    var _diff = diff(date, now, 'day', true, config);\n    switch (true) {\n        case _diff < -6: return 'sameElse';\n        case _diff < -1: return 'lastWeek';\n        case _diff < 0: return 'lastDay';\n        case _diff < 1: return 'sameDay';\n        case _diff < 2: return 'nextDay';\n        case _diff < 7: return 'nextWeek';\n        default: return 'sameElse';\n    }\n}\nexport function calendar(date, time, formats, locale, config) {\n    if (locale === void 0) { locale = getLocale(); }\n    if (config === void 0) { config = {}; }\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time;\n    var sod = startOf(cloneWithOffset(now, date, config), 'day', config._isUTC);\n    var format = getCalendarFormat(date, sod, { _isUTC: true, _offset: 0 }) || 'sameElse';\n    var output;\n    if (formats) {\n        var _format = formats[format];\n        if (isString(_format)) {\n            output = _format;\n        }\n        if (isFunction(_format)) {\n            output = _format.call(null, date, now);\n        }\n    }\n    if (!output) {\n        output = locale.calendar(format, date, cloneDate(now));\n    }\n    return formatDate(date, output, config._locale._abbr, config._isUTC, config._offset);\n}\n//# sourceMappingURL=calendar.js.map","import { cloneWithOffset, getUTCOffset } from '../units/offset';\nimport { absFloor } from '../utils';\nimport { isDateValid, isNumber } from '../utils/type-checks';\nimport { getFullYear, getMonth } from '../utils/date-getters';\nimport { add } from './add-subtract';\nimport { cloneDate } from '../create/clone';\nexport function diff(date, input, units, asFloat, config) {\n    if (config === void 0) { config = {}; }\n    if (!isDateValid(date)) {\n        return NaN;\n    }\n    var that = cloneWithOffset(input, date, config);\n    if (!isDateValid(that)) {\n        return NaN;\n    }\n    // const zoneDelta = (getUTCOffset(input, dateConfig) - getUTCOffset(date, dateConfig)) * 6e4;\n    var zoneDelta = isNumber(config._zoneDelta)\n        ? config._zoneDelta * 6e4\n        : (getUTCOffset(input, config) - getUTCOffset(date, config)) * 6e4;\n    var output;\n    switch (units) {\n        case 'year':\n            output = monthDiff(date, that) / 12;\n            break;\n        case 'month':\n            output = monthDiff(date, that);\n            break;\n        case 'quarter':\n            output = monthDiff(date, that) / 3;\n            break;\n        case 'seconds':\n            output = (date.valueOf() - that.valueOf()) / 1e3;\n            break; // 1000\n        case 'minutes':\n            output = (date.valueOf() - that.valueOf()) / 6e4;\n            break; // 1000 * 60\n        case 'hours':\n            output = (date.valueOf() - that.valueOf()) / 36e5;\n            break; // 1000 * 60 * 60\n        case 'day':\n            output = (date.valueOf() - that.valueOf() - zoneDelta) / 864e5;\n            break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week':\n            output = (date.valueOf() - that.valueOf() - zoneDelta) / 6048e5;\n            break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default:\n            output = date.valueOf() - that.valueOf();\n    }\n    return asFloat ? output : absFloor(output);\n}\nfunction monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = ((getFullYear(b) - getFullYear(a)) * 12) + (getMonth(b) - getMonth(a));\n    // b is in (anchor - 1 month, anchor + 1 month)\n    var anchor = add(cloneDate(a), wholeMonthDiff, 'month');\n    var anchor2;\n    var adjust;\n    if (b.valueOf() - anchor.valueOf() < 0) {\n        anchor2 = add(cloneDate(a), wholeMonthDiff - 1, 'month');\n        // linear across the month\n        adjust = (b.valueOf() - anchor.valueOf()) / (anchor.valueOf() - anchor2.valueOf());\n    }\n    else {\n        anchor2 = add(cloneDate(a), wholeMonthDiff + 1, 'month');\n        // linear across the month\n        adjust = (b.valueOf() - anchor.valueOf()) / (anchor2.valueOf() - anchor.valueOf());\n    }\n    // check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n//# sourceMappingURL=diff.js.map","import { isArray, isDateValid } from '../utils/type-checks';\nimport { isAfter, isBefore } from '../utils/date-compare';\nfunction pickBy(fn, dates) {\n    var _dates;\n    var _firstArg = dates[0];\n    if (isArray(_firstArg) && dates.length === 1) {\n        _dates = _firstArg;\n    }\n    else if (isArray(dates)) {\n        _dates = dates;\n    }\n    if (!_dates || !_dates.length) {\n        return new Date();\n    }\n    var res = _dates[0];\n    for (var i = 1; i < _dates.length; ++i) {\n        // if (!moments[i].isValid() || moments[i][fn](res)) {\n        if (!isDateValid(_dates[i]) || fn.call(null, _dates[i], res)) {\n            res = _dates[i];\n        }\n    }\n    return res;\n}\n// TODO: Use [].sort instead?\nexport function min() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // const args = [].slice.call(arguments, 0);\n    return pickBy(isBefore, args);\n}\nexport function max() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // const args = [].slice.call(arguments, 0);\n    return pickBy(isAfter, args);\n}\n//# sourceMappingURL=min-max.js.map","import { add, subtract } from '../index';\nimport { getDate, getFullYear, getHours, getMilliseconds, getMinutes, getMonth, getSeconds } from '../utils/date-getters';\nimport { setDate, setFullYear, setHours, setMilliseconds, setMinutes, setMonth, setSeconds } from '../utils/date-setters';\nimport { cloneDate } from '../create/clone';\nimport { isArray, isBoolean, isDate, isDateValid, isFunction, isNumber, isObject, isString, isUndefined } from '../utils/type-checks';\nimport { formatDate } from '../format';\nimport { ISO_8601, RFC_2822 } from '../create/from-string-and-format';\nimport { getDateOffset, getUTCOffset, hasAlignedHourOffset, isDaylightSavingTime, setOffsetToParsedOffset, setUTCOffset } from '../units/offset';\nimport { isLeapYear, parseTwoDigitYear } from '../units/year';\nimport { isAfter, isBefore, isBetween, isSame, isSameOrAfter, isSameOrBefore } from '../utils/date-compare';\nimport { daysInMonth } from '../units/month';\nimport { getDayOfWeek, getISODayOfWeek, getLocaleDayOfWeek, parseWeekday, setDayOfWeek, setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getISOWeek, getWeek, setISOWeek, setWeek } from '../units/week';\nimport { getISOWeeksInYear, getISOWeekYear, getSetISOWeekYear, getSetWeekYear, getWeeksInYear, getWeekYear } from '../units/week-year';\nimport { endOf, startOf } from '../utils/start-end-of';\nimport { getQuarter, setQuarter } from '../units/quarter';\nimport { getDayOfYear, setDayOfYear } from '../units/day-of-year';\nimport { getZoneAbbr, getZoneName } from '../units/timezone';\nimport { diff } from '../moment/diff';\nimport { calendar } from '../moment/calendar';\nimport { defineLocale, getLocale, getSetGlobalLocale, listLocales } from '../locale/locales';\nimport { max, min } from '../moment/min-max';\nimport { isDuration } from '../duration/constructor';\nimport { createLocalOrUTC } from '../create/from-anything';\nimport { createDuration } from '../duration/create';\nexport var moment = _moment;\nfunction _moment(input, format, localeKey, strict, isUTC) {\n    if (input instanceof Khronos) {\n        var _date = input.clone();\n        return isUTC ? _date.utc() : _date;\n    }\n    if (isBoolean(localeKey)) {\n        return new Khronos(input, format, null, localeKey, isUTC);\n    }\n    return new Khronos(input, format, localeKey, strict, isUTC);\n}\nmoment.utc = function (input, format, localeKey, strict) {\n    return _moment(input, format, localeKey, strict, true);\n};\nmoment.parseZone = function (input, format, localeKey, strict) {\n    return _moment(input, format, localeKey, strict, true).parseZone();\n};\nmoment.locale = getSetGlobalLocale;\nmoment.localeData = function (key) {\n    if (key instanceof Khronos) {\n        return key.localeData();\n    }\n    return getLocale(key);\n};\n// moment.utc = createUTC;\nmoment.unix = function (inp) { return new Khronos(inp * 1000); };\nmoment.ISO_8601 = ISO_8601;\nmoment.RFC_2822 = RFC_2822;\nmoment.defineLocale = defineLocale;\nmoment.parseTwoDigitYear = parseTwoDigitYear;\nmoment.isDate = isDate;\nmoment.invalid = function _invalid() {\n    return new Khronos(new Date(NaN));\n};\n// duration(inp?: Duration | DateInput | Khronos, unit?: MomentUnitOfTime): Duration;\nmoment.duration = function (input, unit) {\n    var _unit = mapUnitOfTime(unit);\n    if (isDate(input)) {\n        throw new Error('todo implement');\n    }\n    if (input == null) {\n        return createDuration();\n    }\n    if (isDuration(input)) {\n        return createDuration(input, _unit, { _locale: input._locale });\n    }\n    if (isString(input) || isNumber(input) || isDuration(input) || isObject(input)) {\n        return createDuration(input, _unit);\n    }\n    throw new Error('todo implement');\n};\nmoment.min = function _min() {\n    var dates = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        dates[_i] = arguments[_i];\n    }\n    var _firstArg = dates[0];\n    var _dates = (isArray(_firstArg) ? _firstArg : dates)\n        .map(function (date) { return _moment(date); })\n        .map(function (date) { return date.toDate(); });\n    var _date = min.apply(void 0, _dates);\n    return new Khronos(_date);\n};\nmoment.max = function _max() {\n    var dates = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        dates[_i] = arguments[_i];\n    }\n    var _firstArg = dates[0];\n    var _dates = (isArray(_firstArg) ? _firstArg : dates)\n        .map(function (date) { return _moment(date); })\n        .map(function (date) { return date.toDate(); });\n    var _date = max.apply(void 0, _dates);\n    return new Khronos(_date);\n};\nmoment.locales = function () {\n    return listLocales();\n};\nvar _unitsPriority = {\n    year: 1,\n    month: 8,\n    week: 5,\n    isoWeek: 5,\n    day: 11,\n    weekday: 11,\n    isoWeekday: 11,\n    hours: 13,\n    weekYear: 1,\n    isoWeekYear: 1,\n    quarter: 7,\n    date: 9,\n    dayOfYear: 4,\n    minutes: 14,\n    seconds: 15,\n    milliseconds: 16\n};\n// todo: do I need 2 mappers?\nvar _timeHashMap = {\n    y: 'year',\n    years: 'year',\n    year: 'year',\n    M: 'month',\n    months: 'month',\n    month: 'month',\n    w: 'week',\n    weeks: 'week',\n    week: 'week',\n    d: 'day',\n    days: 'day',\n    day: 'day',\n    date: 'date',\n    dates: 'date',\n    D: 'date',\n    h: 'hours',\n    hour: 'hours',\n    hours: 'hours',\n    m: 'minutes',\n    minute: 'minutes',\n    minutes: 'minutes',\n    s: 'seconds',\n    second: 'seconds',\n    seconds: 'seconds',\n    ms: 'milliseconds',\n    millisecond: 'milliseconds',\n    milliseconds: 'milliseconds',\n    quarter: 'quarter',\n    quarters: 'quarter',\n    q: 'quarter',\n    Q: 'quarter',\n    isoWeek: 'isoWeek',\n    isoWeeks: 'isoWeek',\n    W: 'isoWeek',\n    weekYear: 'weekYear',\n    weekYears: 'weekYear',\n    gg: 'weekYears',\n    isoWeekYear: 'isoWeekYear',\n    isoWeekYears: 'isoWeekYear',\n    GG: 'isoWeekYear',\n    dayOfYear: 'dayOfYear',\n    dayOfYears: 'dayOfYear',\n    DDD: 'dayOfYear',\n    weekday: 'weekday',\n    weekdays: 'weekday',\n    e: 'weekday',\n    isoWeekday: 'isoWeekday',\n    isoWeekdays: 'isoWeekday',\n    E: 'isoWeekday'\n};\nfunction mapUnitOfTime(period) {\n    return _timeHashMap[period];\n}\nfunction mapMomentInputObject(obj) {\n    var _res = {};\n    return Object.keys(obj)\n        .reduce(function (res, key) {\n        res[mapUnitOfTime(key)] = obj[key];\n        return res;\n    }, _res);\n}\nvar Khronos = /** @class */ (function () {\n    function Khronos(input, format, localeKey, strict, isUTC, offset) {\n        if (strict === void 0) { strict = false; }\n        if (isUTC === void 0) { isUTC = false; }\n        this._date = new Date();\n        this._isUTC = false;\n        // locale will be needed to format invalid date message\n        this._locale = getLocale(localeKey);\n        // parse invalid input\n        if (input === '' || input === null || (isNumber(input) && isNaN(input))) {\n            this._date = new Date(NaN);\n            return this;\n        }\n        this._isUTC = isUTC;\n        if (this._isUTC) {\n            this._offset = 0;\n        }\n        if (offset || offset === 0) {\n            this._offset = offset;\n        }\n        this._isStrict = strict;\n        this._format = format;\n        if (!input && input !== 0 && !format) {\n            this._date = new Date();\n            return this;\n        }\n        if (isDate(input)) {\n            this._date = cloneDate(input);\n            return this;\n        }\n        // this._date = parseDate(input, format, localeKey, strict, isUTC);\n        var config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n        this._date = config._d;\n        this._offset = isNumber(config._offset) ? config._offset : this._offset;\n        this._isUTC = config._isUTC;\n        this._isStrict = config._strict;\n        this._format = config._f;\n        this._tzm = config._tzm;\n    }\n    Khronos.prototype._toConfig = function () {\n        return { _isUTC: this._isUTC, _locale: this._locale, _offset: this._offset, _tzm: this._tzm };\n    };\n    Khronos.prototype.locale = function (localeKey) {\n        if (isUndefined(localeKey)) {\n            return this._locale._abbr;\n        }\n        if (localeKey instanceof Khronos) {\n            this._locale = localeKey._locale;\n            return this;\n        }\n        var newLocaleData = getLocale(localeKey);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    };\n    Khronos.prototype.localeData = function () {\n        return this._locale;\n    };\n    // Basic\n    // Basic\n    Khronos.prototype.add = \n    // Basic\n    function (val, period) {\n        var _this = this;\n        if (isString(val)) {\n            this._date = add(this._date, parseInt(val, 10), mapUnitOfTime(period));\n        }\n        if (isNumber(val)) {\n            this._date = add(this._date, val, mapUnitOfTime(period));\n        }\n        if (isObject(val)) {\n            var _mapped_1 = mapMomentInputObject(val);\n            Object.keys(_mapped_1)\n                .forEach(function (key) { return add(_this._date, _mapped_1[key], key); });\n        }\n        return this;\n    };\n    // fixme: for some reason here 'null' for time is fine\n    // fixme: for some reason here 'null' for time is fine\n    Khronos.prototype.calendar = \n    // fixme: for some reason here 'null' for time is fine\n    function (time, formats) {\n        var _time = time instanceof Khronos ? time : new Khronos(time || new Date());\n        var _offset = (this._offset || 0) - (_time._offset || 0);\n        var _config = Object.assign(this._toConfig(), { _offset: _offset });\n        return calendar(this._date, _time._date, formats, this._locale, _config);\n    };\n    Khronos.prototype.clone = function () {\n        var localeKey = this._locale && this._locale._abbr || 'en';\n        // return new Khronos(cloneDate(this._date), this._format, localeKey, this._isStrict, this._isUTC);\n        // fails if isUTC and offset\n        // return new Khronos(new Date(this.valueOf()),\n        return new Khronos(this._date, this._format, localeKey, this._isStrict, this._isUTC, this._offset);\n    };\n    Khronos.prototype.diff = function (b, unitOfTime, precise) {\n        var unit = mapUnitOfTime(unitOfTime);\n        var _b = b instanceof Khronos ? b : new Khronos(b);\n        // const zoneDelta = (_b.utcOffset() - this.utcOffset());\n        // const config = Object.assign(this._toConfig(), {\n        //   _offset: 0,\n        //   _isUTC: true,\n        //   _zoneDelta: zoneDelta\n        // });\n        // return diff(new Date(this.valueOf()), new Date(_b.valueOf()), unit, precise, config);\n        return diff(this._date, _b.toDate(), unit, precise, this._toConfig());\n    };\n    Khronos.prototype.endOf = function (period) {\n        var _per = mapUnitOfTime(period);\n        this._date = endOf(this._date, _per, this._isUTC);\n        return this;\n    };\n    Khronos.prototype.format = function (format) {\n        return formatDate(this._date, format, this._locale && this._locale._abbr, this._isUTC, this._offset);\n    };\n    // todo: implement\n    // todo: implement\n    Khronos.prototype.from = \n    // todo: implement\n    function (time, withoutSuffix) {\n        var _time = _moment(time);\n        if (this.isValid() && _time.isValid()) {\n            return createDuration({ to: this.toDate(), from: _time.toDate() })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        }\n        return this.localeData().invalidDate;\n    };\n    Khronos.prototype.fromNow = function (withoutSuffix) {\n        return this.from(new Date(), withoutSuffix);\n    };\n    Khronos.prototype.to = function (inp, suffix) {\n        throw new Error(\"TODO: Implement\");\n    };\n    Khronos.prototype.toNow = function (withoutPrefix) {\n        throw new Error(\"TODO: Implement\");\n    };\n    Khronos.prototype.subtract = function (val, period) {\n        var _this = this;\n        if (isString(val)) {\n            this._date = subtract(this._date, parseInt(val, 10), mapUnitOfTime(period));\n            return this;\n        }\n        if (isNumber(val)) {\n            this._date = subtract(this._date, val, mapUnitOfTime(period));\n        }\n        if (isObject(val)) {\n            var _mapped_2 = mapMomentInputObject(val);\n            Object.keys(_mapped_2)\n                .forEach(function (key) { return subtract(_this._date, _mapped_2[key], key); });\n        }\n        return this;\n    };\n    Khronos.prototype.get = function (period) {\n        if (period === 'dayOfYear') {\n            return this.dayOfYear();\n        }\n        var unit = mapUnitOfTime(period);\n        switch (unit) {\n            case 'year':\n                return this.year();\n            case 'month':\n                return this.month();\n            // | 'week'\n            case 'date':\n                return this.date();\n            case 'day':\n                return this.day();\n            case 'hours':\n                return this.hours();\n            case 'minutes':\n                return this.minutes();\n            case 'seconds':\n                return this.seconds();\n            case 'milliseconds':\n                return this.milliseconds();\n            case 'week':\n                return this.week();\n            case 'isoWeek':\n                return this.isoWeek();\n            case 'weekYear':\n                return this.weekYear();\n            case 'isoWeekYear':\n                return this.isoWeekYear();\n            case 'weekday':\n                return this.weekday();\n            case 'isoWeekday':\n                return this.isoWeekday();\n            case 'quarter':\n                return this.quarter();\n            default:\n                throw new Error(\"Unknown moment.get('\" + period + \"')\");\n        }\n    };\n    Khronos.prototype.set = function (period, input) {\n        var _this = this;\n        if (isString(period)) {\n            var unit = mapUnitOfTime(period);\n            switch (unit) {\n                case 'year':\n                    return this.year(input);\n                case 'month':\n                    return this.month(input);\n                // | 'week'\n                case 'day':\n                    return this.day(input);\n                case 'date':\n                    return this.date(input);\n                case 'hours':\n                    return this.hours(input);\n                case 'minutes':\n                    return this.minutes(input);\n                case 'seconds':\n                    return this.seconds(input);\n                case 'milliseconds':\n                    return this.milliseconds(input);\n                case 'week':\n                    return this.week(input);\n                case 'isoWeek':\n                    return this.isoWeek(input);\n                case 'weekYear':\n                    return this.weekYear(input);\n                case 'isoWeekYear':\n                    return this.isoWeekYear(input);\n                case 'weekday':\n                    return this.weekday(input);\n                case 'isoWeekday':\n                    return this.isoWeekday(input);\n                case 'quarter':\n                    return this.quarter(input);\n                default:\n                    throw new Error(\"Unknown moment.get('\" + period + \"')\");\n            }\n        }\n        if (isObject(period)) {\n            var _mapped_3 = mapMomentInputObject(period);\n            Object.keys(_mapped_3)\n                .sort(function (a, b) {\n                return _unitsPriority[a] - _unitsPriority[b];\n            })\n                .forEach(function (key) { return _this.set(key, _mapped_3[key]); });\n        }\n        return this;\n    };\n    Khronos.prototype.toString = function () {\n        return this.format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    };\n    Khronos.prototype.toISOString = function () {\n        if (!this.isValid()) {\n            return null;\n        }\n        if (getFullYear(this._date, true) < 0 || getFullYear(this._date, true) > 9999) {\n            return this.format('YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            return this.toDate().toISOString();\n        }\n        return this.format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    };\n    Khronos.prototype.inspect = function () {\n        throw new Error('TODO: implement');\n    };\n    Khronos.prototype.toJSON = function () {\n        return this.toISOString();\n    };\n    Khronos.prototype.toDate = function () {\n        return new Date(this.valueOf());\n    };\n    Khronos.prototype.toObject = function () {\n        return {\n            // years: getFullYear(this._date, this._isUTC),\n            // months: getMonth(this._date, this._isUTC),\n            year: getFullYear(this._date, this._isUTC),\n            month: getMonth(this._date, this._isUTC),\n            date: getDate(this._date, this._isUTC),\n            hours: getHours(this._date, this._isUTC),\n            minutes: getMinutes(this._date, this._isUTC),\n            seconds: getSeconds(this._date, this._isUTC),\n            milliseconds: getMilliseconds(this._date, this._isUTC)\n        };\n    };\n    Khronos.prototype.toArray = function () {\n        return [this.year(), this.month(), this.date(), this.hour(), this.minute(), this.second(), this.millisecond()];\n    };\n    // Dates boolean algebra\n    // Dates boolean algebra\n    Khronos.prototype.isAfter = \n    // Dates boolean algebra\n    function (date, unit) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isAfter(this._date, date.toDate(), _unit);\n    };\n    Khronos.prototype.isBefore = function (date, unit) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isBefore(this.toDate(), date.toDate(), _unit);\n    };\n    Khronos.prototype.isBetween = function (from, to, unit, inclusivity) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isBetween(this.toDate(), from.toDate(), to.toDate(), _unit, inclusivity);\n    };\n    Khronos.prototype.isSame = function (date, unit) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isSame(this._date, date.toDate(), _unit);\n    };\n    Khronos.prototype.isSameOrAfter = function (date, unit) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isSameOrAfter(this._date, date.toDate(), _unit);\n    };\n    Khronos.prototype.isSameOrBefore = function (date, unit) {\n        var _unit = unit ? mapUnitOfTime(unit) : void 0;\n        return isSameOrBefore(this._date, date.toDate(), _unit);\n    };\n    Khronos.prototype.isValid = function () {\n        return isDateValid(this._date);\n    };\n    Khronos.prototype.valueOf = function () {\n        return this._date.valueOf() - ((this._offset || 0) * 60000);\n    };\n    Khronos.prototype.unix = function () {\n        // return getUnixTime(this._date);\n        return Math.floor(this.valueOf() / 1000);\n    };\n    Khronos.prototype.utcOffset = function (b, keepLocalTime) {\n        var _config = this._toConfig();\n        if (!b && b !== 0) {\n            return getUTCOffset(this._date, _config);\n        }\n        this._date = setUTCOffset(this._date, b, keepLocalTime, false, _config);\n        this._offset = _config._offset;\n        this._isUTC = _config._isUTC;\n        return this;\n    };\n    Khronos.prototype.utc = function (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    };\n    Khronos.prototype.local = function (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this._date), 'm');\n            }\n        }\n        return this;\n    };\n    Khronos.prototype.parseZone = function (input) {\n        var _config = this._toConfig();\n        this._date = setOffsetToParsedOffset(this._date, input, _config);\n        this._offset = _config._offset;\n        this._isUTC = _config._isUTC;\n        return this;\n    };\n    Khronos.prototype.hasAlignedHourOffset = function (input) {\n        return hasAlignedHourOffset(this._date, input ? input._date : void 0);\n    };\n    Khronos.prototype.isDST = function () {\n        return isDaylightSavingTime(this._date);\n    };\n    Khronos.prototype.isLocal = function () {\n        return !this._isUTC;\n    };\n    Khronos.prototype.isUtcOffset = function () {\n        return this._isUTC;\n    };\n    Khronos.prototype.isUTC = function () {\n        return this.isUtc();\n    };\n    Khronos.prototype.isUtc = function () {\n        return this._isUTC && this._offset === 0;\n    };\n    // Timezone\n    // Timezone\n    Khronos.prototype.zoneAbbr = \n    // Timezone\n    function () {\n        return getZoneAbbr(this._isUTC);\n    };\n    Khronos.prototype.zoneName = function () {\n        return getZoneName(this._isUTC);\n    };\n    Khronos.prototype.year = function (year) {\n        if (!year && year !== 0) {\n            return getFullYear(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setFullYear(this._date, year));\n        return this;\n    };\n    Khronos.prototype.weekYear = function (val) {\n        if (!val && val !== 0) {\n            return getWeekYear(this._date, this._locale, this.isUTC());\n        }\n        var date = getSetWeekYear(this._date, val, this._locale, this.isUTC());\n        if (isDate(date)) {\n            this._date = date;\n        }\n        return this;\n    };\n    Khronos.prototype.isoWeekYear = function (val) {\n        if (!val && val !== 0) {\n            return getISOWeekYear(this._date, this.isUTC());\n        }\n        var date = getSetISOWeekYear(this._date, val, this.isUtc());\n        if (isDate(date)) {\n            this._date = date;\n        }\n        return this;\n    };\n    Khronos.prototype.isLeapYear = function () {\n        return isLeapYear(getFullYear(this.toDate(), this.isUTC()));\n    };\n    Khronos.prototype.month = function (month) {\n        if (!month && month !== 0) {\n            return getMonth(this._date, this._isUTC);\n        }\n        var _month = month;\n        if (isString(month)) {\n            var locale = this._locale || getLocale();\n            _month = locale.monthsParse(month);\n        }\n        if (isNumber(_month)) {\n            this._date = cloneDate(setMonth(this._date, _month, this._isUTC));\n        }\n        return this;\n    };\n    Khronos.prototype.hour = function (hours) {\n        return this.hours(hours);\n    };\n    Khronos.prototype.hours = function (hours) {\n        if (!hours && hours !== 0) {\n            return getHours(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setHours(this._date, hours, this._isUTC));\n        return this;\n    };\n    Khronos.prototype.minute = function (minutes) {\n        return this.minutes(minutes);\n    };\n    Khronos.prototype.minutes = function (minutes) {\n        if (!minutes && minutes !== 0) {\n            return getMinutes(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setMinutes(this._date, minutes, this._isUTC));\n        return this;\n    };\n    Khronos.prototype.second = function (seconds) {\n        return this.seconds(seconds);\n    };\n    Khronos.prototype.seconds = function (seconds) {\n        if (!seconds && seconds !== 0) {\n            return getSeconds(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setSeconds(this._date, seconds, this._isUTC));\n        return this;\n    };\n    Khronos.prototype.millisecond = function (ms) {\n        return this.milliseconds(ms);\n    };\n    Khronos.prototype.milliseconds = function (seconds) {\n        if (!seconds && seconds !== 0) {\n            return getMilliseconds(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setMilliseconds(this._date, seconds, this._isUTC));\n        return this;\n    };\n    Khronos.prototype.date = function (date) {\n        if (!date && date !== 0) {\n            return getDate(this._date, this._isUTC);\n        }\n        this._date = cloneDate(setDate(this._date, date, this._isUTC));\n        return this;\n    };\n    Khronos.prototype.day = function (input) {\n        if (!input && input !== 0) {\n            return getDayOfWeek(this._date, this._isUTC);\n        }\n        var _input = input;\n        if (isString(input)) {\n            _input = parseWeekday(input, this._locale);\n        }\n        if (isNumber(_input)) {\n            this._date = setDayOfWeek(this._date, _input, this._locale, this._isUTC);\n        }\n        return this;\n    };\n    Khronos.prototype.weekday = function (val) {\n        if (!val && val !== 0) {\n            return getLocaleDayOfWeek(this._date, this._locale, this._isUTC);\n        }\n        this._date = setLocaleDayOfWeek(this._date, val, { locale: this._locale, isUTC: this._isUTC });\n        return this;\n    };\n    Khronos.prototype.isoWeekday = function (val) {\n        if (!val && val !== 0) {\n            return getISODayOfWeek(this._date);\n        }\n        this._date = setISODayOfWeek(this._date, val);\n        return this;\n    };\n    Khronos.prototype.dayOfYear = function (val) {\n        if (!val && val !== 0) {\n            return getDayOfYear(this._date);\n        }\n        this._date = setDayOfYear(this._date, val);\n        return this;\n    };\n    Khronos.prototype.week = function (input) {\n        if (!input && input !== 0) {\n            return getWeek(this._date, this._locale);\n        }\n        this._date = setWeek(this._date, input, this._locale);\n        return this;\n    };\n    Khronos.prototype.weeks = function (input) {\n        return this.week(input);\n    };\n    Khronos.prototype.isoWeek = function (val) {\n        if (!val && val !== 0) {\n            return getISOWeek(this._date);\n        }\n        this._date = setISOWeek(this._date, val);\n        return this;\n    };\n    Khronos.prototype.isoWeeks = function (val) {\n        return this.isoWeek(val);\n    };\n    Khronos.prototype.weeksInYear = function () {\n        return getWeeksInYear(this._date, this._isUTC, this._locale);\n    };\n    Khronos.prototype.isoWeeksInYear = function () {\n        return getISOWeeksInYear(this._date, this._isUTC);\n    };\n    Khronos.prototype.daysInMonth = function () {\n        return daysInMonth(getFullYear(this._date, this._isUTC), getMonth(this._date, this._isUTC));\n    };\n    Khronos.prototype.quarter = function (val) {\n        if (!val && val !== 0) {\n            return getQuarter(this._date, this._isUTC);\n        }\n        this._date = setQuarter(this._date, val, this._isUTC);\n        return this;\n    };\n    Khronos.prototype.quarters = function (val) {\n        return this.quarter(val);\n    };\n    Khronos.prototype.startOf = function (period) {\n        var _per = mapUnitOfTime(period);\n        this._date = startOf(this._date, _per, this._isUTC);\n        return this;\n    };\n    return Khronos;\n}());\nexport { Khronos };\n//# sourceMappingURL=chain.js.map","import { addFormatToken } from '../format/format';\n// todo: add support for timezones\n// FORMATTING\naddFormatToken('z', null, null, function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n});\naddFormatToken('zz', null, null, function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n});\n// MOMENTS\nexport function getZoneAbbr(isUTC) {\n    return isUTC ? 'UTC' : '';\n}\nexport function getZoneName(isUTC) {\n    return isUTC ? 'Coordinated Universal Time' : '';\n}\n//# sourceMappingURL=timezone.js.map","import {Base} from '../base/base.class';\nimport {Input} from '@angular/core';\nimport {SiteAccess} from '../../models/sites.model';\n\n// Define for constant string\nexport const defaultViewSelector = 'View All';\n\nexport abstract class EnrollmentList extends Base {\n\n  @Input() rowItems: any[];\n\n  /** Internal representation of data used in for loops. Can be filtered by search. */\n  public data: any[];\n\n  // Valid values: EnrollmentStatus enums + \"All\"\n  public viewTypeSelector  = defaultViewSelector;\n\n  /**\n   * Filters all expandable rows, making sure changes propagate up to the top\n   * level rows. Just pass in a function which will filter, with its only\n   * parameter being the ExpandableRow/SiteAccess\n   *\n   * @private\n   * @param {(sa: SiteAccess) => boolean} fn Takes a SiteAccess as a parameter\n   * @memberof ApplEnrollmentListComponent\n   */\n  protected deepSearch(fn: (sa: SiteAccess) => boolean    ){\n\n    // Clone the source data so our changes do not wind up persisting in the underlying data\n    const cloned = this.rowItems.map(x => Object.assign({}, x));\n\n    this.data = cloned.map(enrollmentRow => {\n      // Hide all subrows that don't match search results.\n      enrollmentRow.expandableRows = enrollmentRow.expandableRows\n        .filter(expandableRow => {\n          return fn(expandableRow);\n        });\n\n      return enrollmentRow;\n    }).filter(enrollmentRow => {\n      // Only show rows with search results\n      return enrollmentRow.expandableRows.length;\n    });\n  }\n\n  // Searches based on the expandable rows, per business requirements (i.e. site name, NOT collection name!)\n  protected searchSites(phrase){\n\n    if (phrase.length === 0){\n      return this.data = this.rowItems;\n    }\n\n    this.deepSearch(expandableRow => {\n      return expandableRow.title.toLowerCase().indexOf(phrase.toLowerCase()) !== -1;\n    });\n  }\n\n  // Searches based on the top level row (i.e. user name)\n  protected searchUsers(phrase){\n    this.data = this.rowItems.filter(x => {\n      return x.title.toLowerCase().indexOf(phrase.toLowerCase()) !== -1;\n    });\n  }\n\n  /**\n   * Can be overwritten by EnrollmentList, but by default will reverse rowItems\n   */\n  sort() {\n    this.rowItems.reverse();\n  }\n\n  // Abstract function to be implemented in derived class\n  abstract get EnrollmentStatus();\n  abstract search(phrase);\n  // abstract rowOpened<T>(item: T); //original -  desired!\n  abstract rowOpened(item); //Remove typings to pass warnings.\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ApplicantDashboardComponent } from './pages/applicant-dashboard/applicant-dashboard.component';\nimport { ApplicantContactComponent } from './pages/applicant-contact/applicant-contact.component';\nimport { ApplicantAccessAcceptanceComponent } from './pages/applicant-access-acceptance/applicant-access-acceptance.component';\nimport { ApplicantProfessionalComponent } from './pages/applicant-professional/applicant-professional.component';\nimport { ApplicantReviewPageComponent } from './pages/applicant-review-page/applicant-review-page.component';\nimport { PharmaNetPageComponent } from './pages/pharma-net-page/pharma-net-page.component';\nimport { CompleteSubmissionComponent} from './pages/complete-submission/complete-submission.component';\n\n\nexport const routes: Routes = [\n  {\n    path: 'dashboard',\n    component: ApplicantDashboardComponent,\n  },\n  {\n    path: 'contact',\n    component: ApplicantContactComponent,\n  },\n  {\n    path: 'access-acceptance',\n    component: ApplicantAccessAcceptanceComponent,\n  },\n  {\n    path: 'pharma-net',\n    component: PharmaNetPageComponent\n  },\n  {\n    path: 'complete-submission',\n    component: CompleteSubmissionComponent,\n  },\n  {\n    path: 'professional',\n    component: ApplicantProfessionalComponent,\n  },\n  {\n    path: 'review',\n    component: ApplicantReviewPageComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApplicantRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApplicantDashboardComponent } from './pages/applicant-dashboard/applicant-dashboard.component';\nimport { ApplicantRoutingModule } from './applicant-routing.modules';\nimport { CoreModule } from '../core/core.module';\nimport { ApplicantContactComponent } from './pages/applicant-contact/applicant-contact.component';\nimport { ApplicantProfessionalComponent } from './pages/applicant-professional/applicant-professional.component';\nimport { ApplicantAccessAcceptanceComponent } from './pages/applicant-access-acceptance/applicant-access-acceptance.component';\nimport { FormsModule } from '@angular/forms';\nimport { ApplicantBreadcrumbsComponent } from './components/applicant-breadcrumbs/applicant-breadcrumbs.component';\nimport { ApplEnrollmentListComponent } from './components/appl-enrollment-list/appl-enrollment-list.component';\nimport { ApplEnrollmentRowComponent } from './components/appl-enrollment-row/appl-enrollment-row.component';\nimport { AlertModule } from 'ngx-bootstrap';\nimport { AppEnrollmentProgressRowComponent } from './components/app-enrollment-progress-row/app-enrollment-progress-row.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { ApplicantReviewPageComponent } from './pages/applicant-review-page/applicant-review-page.component';\nimport { PharmaNetAccessListComponent } from './components/pharma-net-access-list/pharma-net-access-list.component';\nimport { PharmaNetPageComponent } from './pages/pharma-net-page/pharma-net-page.component';\nimport { PharmaNetAccessRowComponent } from './components/pharma-net-access-row/pharma-net-access-row.component';\nimport { AddPharmaNetOrganizationComponent } from './components/add-pharma-net-organization/add-pharma-net-organization.component';\nimport { CompleteSubmissionComponent} from './pages/complete-submission/complete-submission.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ApplicantRoutingModule,\n    CoreModule,\n    FormsModule,\n    AlertModule,\n    TextMaskModule,\n  ],\n  declarations: [\n    ApplicantDashboardComponent,\n    ApplicantContactComponent,\n    ApplicantProfessionalComponent,\n    ApplicantAccessAcceptanceComponent,\n    ApplicantBreadcrumbsComponent,\n    ApplEnrollmentListComponent,\n    ApplEnrollmentRowComponent,\n    AppEnrollmentProgressRowComponent,\n    ApplicantReviewPageComponent,\n    PharmaNetAccessListComponent,\n    PharmaNetPageComponent,\n    PharmaNetAccessRowComponent,\n    AddPharmaNetOrganizationComponent,\n    CompleteSubmissionComponent\n  ]\n})\nexport class ApplicantModule { }\n","module.exports = \"<button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"openModal()\\\">\\n    Find and Add an Organization <i class=\\\"fa fa-plus-square\\\"></i>\\n</button>\\n\\n<ng-template #template>\\n  <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Find and Add an Organization</h4>\\n\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n\\n        <label  class=\\\"has-float-label\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2\\\" id=\\\"orgName\\\" name=\\\"orgName\\\" placeholder=\\\" \\\" [(ngModel)]=\\\"searchQuery.orgName\\\" tabindex=\\\"1\\\">\\n          <span>Organization Name</span>\\n        </label>\\n\\n        <label  class=\\\"has-float-label\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control mb-2 mr-sm-2\\\" id=\\\"orgCity\\\" name=\\\"orgCity\\\" placeholder=\\\" \\\" [(ngModel)]=\\\"searchQuery.orgCity\\\" tabindex=\\\"1\\\">\\n          <span>City (optional)</span>\\n        </label>\\n\\n      </div>\\n      <div class=\\\"col\\\">\\n          <label class=\\\"has-float-label mx-2\\\">\\n              <select class=\\\"form-control\\\" (input)='updateOrgType($event.target.value)'>\\n                <option name='orgTypeSelect' value=\\\"Select Type\\\">Select Type</option>\\n                <option *ngFor=\\\"let types of orgTypes\\\"\\n                        value=\\\"{{types}}\\\">\\n                  {{types}}\\n                </option>\\n              </select>\\n              <span>Type (optional)</span>\\n            </label>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"search-wrapper\\\">\\n      <ul class=\\\"list-group list-group-flush\\\" *ngIf='showSearchResults'>\\n        <li class='list-group-item' *ngFor=\\\"let org of searchResults\\\" (click)='org.isSelected = !org.isSelected'>\\n            <div class=\\\"checkbox checkbox-success checkbox-inline\\\">\\n                <input class=\\\"input-lg\\\" id=\\\"selectOrg_{{org.objectId}}\\\" type=\\\"checkbox\\\" [(ngModel)]='org.isSelected' (click)='$event.stopPropagation()'>\\n                <label class=\\\"\\\" for=\\\"selectOrg_{{org.objectId}}\\\" (click)='$event.stopPropagation()' class='ml-1'>{{org.title}}</label>\\n            </div>\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" tabindex=\\\"1\\\" (click)=\\\"find()\\\" *ngIf='!showSearchResults'>\\n          Find Organization\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" tabindex=\\\"1\\\" (click)=\\\"cancel()\\\" *ngIf='showSearchResults'>\\n          Cancel\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" tabindex=\\\"1\\\" (click)=\\\"addOrg()\\\" *ngIf='showSearchResults'>\\n          Add Organization\\n      </button>\\n  </div>\\n\\n</ng-template>\\n\"","module.exports = \".search-wrapper {\\n  max-height: 300px;\\n  overflow-y: scroll;\\n  overflow-x: hidden; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { PharmaNetOrganization, PharmaNetOrgTypes } from '../../../../models/organizations.model';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { OrganizationAccess } from '../../../../models/organization-access.model';\n\ninterface PharmaNetSearchResult extends PharmaNetOrganization {\n  isSelected: boolean;\n}\n@Component({\n  selector: 'prime-add-pharma-net-organization',\n  templateUrl: './add-pharma-net-organization.component.html',\n  styleUrls: ['./add-pharma-net-organization.component.scss']\n})\nexport class AddPharmaNetOrganizationComponent implements OnInit {\n\n  public modalRef: BsModalRef;\n  public searchQuery: {orgName?: string, orgCity?: string, orgType?: string} = {};\n\n  public orgTypes: string[]; // values from PharmaNetOrgTypes enum\n\n  public showSearchResults = false;\n  public searchResults: PharmaNetSearchResult[] = [];\n\n  @ViewChild('template') modalTemplate;\n\n  constructor(private modalService: BsModalService, private dataService: PrimeDataService) { }\n\n  ngOnInit() {\n    this.orgTypes = Object.keys(PharmaNetOrgTypes).map(x => PharmaNetOrgTypes[x]);\n  }\n\n  openModal(){\n    this.reset();\n    this.modalRef = this.modalService.show(this.modalTemplate);\n  }\n\n  closeModal() {\n    this.modalRef.hide();\n  }\n\n  find(){\n    // ? should we abstract to dataService method\n    const results: PharmaNetSearchResult[] = this.dataService.organizations.filter(org => {\n      if (this.searchQuery.orgName){\n        return org.title.toLowerCase().includes(this.searchQuery.orgName.toLowerCase());\n      }\n      return true;\n    })\n    .filter(org => {\n        // filter out any orgs that have already been added\n        return !this.dataService.user.allOrganizations().includes(org);\n    })\n    .filter(org => {\n      if (this.searchQuery.orgCity){\n        return org.city.toLowerCase().includes(this.searchQuery.orgCity.toLowerCase());\n      }\n      return true;\n    })\n    .filter(org => {\n      if (this.searchQuery.orgType){\n        let target = org.type.toLowerCase();\n\n        if (this.searchQuery.orgType === 'HA'){\n          //Since 'HA', short for health authority, is contained in 'pHArmacy',\n          //we have to avoid searching for HA and getting pharmacies\n          target = target.replace('pharmacy', '');\n        }\n\n        return target.includes(this.searchQuery.orgType.toLowerCase());\n      }\n      return true;\n    })\n    .map((org: PharmaNetOrganization): PharmaNetSearchResult => {\n      // Add a boolean we can use for the checkboxes, used in this component only.\n      (org as PharmaNetSearchResult).isSelected = false;\n      return (org as PharmaNetSearchResult);\n    });\n\n\n    this.showSearchResults = results.length > 0;\n    this.searchResults = results;\n  }\n\n  cancel(){\n    this.reset();\n  }\n\n  reset(){\n    this.showSearchResults = false;\n    this.searchResults = [];\n    this.searchQuery = {};\n  }\n\n  addOrg(){\n    const selected = this.searchResults.filter(x => x.isSelected);\n\n    // Create OrgAccess for each\n\n    selected.map(org => {\n      const oa = new OrganizationAccess(this.dataService.user, org);\n      this.dataService.organizationAccess.push(oa);\n      this.dataService.user.organizationAccess.push(oa);\n      org.organizationAccess.push(oa);\n    });\n\n    this.closeModal();\n  }\n\n  updateOrgType(orgType: string){\n    // filter out the default 'Select type' placeholder value\n    if (this.orgTypes.includes(orgType)){\n      this.searchQuery.orgType = orgType;\n    }\n    else {\n      this.searchQuery.orgType = null;\n    }\n  }\n\n}\n","module.exports = \"<div class='d-flex justify-content-between progress-row-content' [@growVertical] *ngIf=\\\"open\\\">\\n\\n  <div class=\\\"col\\\">\\n    <i class=\\\"fa fa-quote-left fa-2x fa-pull-left\\\" aria-hidden=\\\"true\\\"></i>\\n    <p><em>{{description}}</em></p>\\n    <p><small>Submitted Date: {{ data ? data.formatDateShort(data.requestDate) : 'n/a'}}</small></p>\\n  </div>\\n\\n  <div class=\\\"col\\\">\\n    <div class=\\\"progressSlider\\\">\\n      <!-- Labels -->\\n      <div class=\\\"progressSlider--text\\\">\\n        <div class=\\\"progressItem\\\">\\n          <div class=\\\"progressText\\\">Verifier</div>\\n        </div>\\n        <div class=\\\"progressItem\\\">\\n          <div class=\\\"progressText\\\">PharmaNet user</div>\\n        </div>\\n        <div class=\\\"progressItem\\\">\\n          <div class=\\\"progressText\\\">MoH</div>\\n        </div>\\n        <div class=\\\"progressItem active\\\">\\n          <div class=\\\"progressText\\\">Provisioner</div>\\n        </div>\\n      </div>\\n\\n      <!-- The progress bar line / dots -->\\n      <div class=\\\"progressSlider--bar\\\">\\n        <div class=\\\"progressBarMarker\\\"\\n             *ngFor=\\\"let x of iterableNumberOfSteps\\\">\\n        </div>\\n        <div class=\\\"progressSlider--dot\\\"\\n             [style.left]=\\\"activeStepIndex * 33 + '%'\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"isAccepted\\\" class=\\\"col d-inline-flex flex-column access-reason\\\">\\n    <!-- New enrollments -->\\n    <select *ngIf=\\\"!disableReason\\\" id=\\\"reasonForAccess\\\"\\n            class=\\\"form-control drop-dl-box-15 color\\\"\\n            [(ngModel)]=\\\"accessReason\\\">\\n      <option value=\\\"Please Select\\\" selected>Please Select</option>\\n      <option *ngFor=\\\"let reason of accessReasons\\\" [value]=\\\"reason\\\">{{reason}}</option>\\n    </select>\\n    <select *ngIf=\\\"disableReason\\\" id=\\\"reasonForAccess\\\"\\n            class=\\\"form-control drop-dl-box-15 color\\\"\\n            [value]=\\\"accessReason\\\"\\n            disabled>\\n      <option [value]=\\\"accessReason\\\" selected>{{accessReason}}</option>\\n    </select>\\n  </div>\\n\\n  <div *ngIf=\\\"isDeclined\\\" class=\\\"col d-inline-flex flex-column access-reason\\\">\\n    <!-- New enrollments -->\\n    <select *ngIf=\\\"!disableReason\\\" id=\\\"reasonForAccess\\\"\\n            class=\\\"form-control drop-dl-box-15 color\\\"\\n            [(ngModel)]=\\\"declineReason\\\">\\n      <option value=\\\"Please Select\\\" selected>Please Select</option>\\n      <option *ngFor=\\\"let reason of declineReasons\\\" [value]=\\\"reason\\\">{{reason}}</option>\\n    </select>\\n    <select *ngIf=\\\"disableReason\\\" id=\\\"reasonForAccess\\\"\\n            class=\\\"form-control drop-dl-box-15 color\\\"\\n            [value]=\\\"declineReason\\\"\\n            disabled>\\n      <option [value]=\\\"declineReason\\\" selected>{{declineReason}}</option>\\n    </select>\\n  </div>\\n</div>\\n\"","module.exports = \":host {\\n  background-color: #ced4da;\\n  width: 100%; }\\n\\n.progressSlider {\\n  padding-top: 1em;\\n  display: flex;\\n  justify-content: space-between;\\n  flex-wrap: wrap; }\\n\\n.progressItem {\\n  display: inline-flex;\\n  position: relative; }\\n\\np:first-of-type, .fa-quote-left {\\n  padding-top: 1rem;\\n  margin-bottom: 0; }\\n\\n.progressSlider--text {\\n  display: flex;\\n  flex-basis: 100%;\\n  justify-content: space-between; }\\n\\n.progressSlider--bar {\\n  display: flex;\\n  position: relative;\\n  flex-basis: calc(100% - 20px);\\n  justify-content: space-between;\\n  background: #adb5bd;\\n  height: 2px;\\n  margin: 0.75em auto; }\\n\\n.progressSlider--dot {\\n  display: block;\\n  width: 15px;\\n  height: 15px;\\n  background: #00800080;\\n  position: absolute;\\n  -webkit-transform: translateY(-50%) translateX(-20%);\\n          transform: translateY(-50%) translateX(-20%);\\n  left: 0;\\n  transition: 0.3s;\\n  background: #6c757d;\\n  border-radius: 100%; }\\n\\n.progressBarMarker {\\n  height: 8px;\\n  width: 8px;\\n  border-radius: 100%;\\n  background: #6c757d;\\n  -webkit-transform: translateY(-33%);\\n          transform: translateY(-33%); }\\n\\ndiv.access-reason {\\n  -ms-grid-row-align: center;\\n      align-self: center; }\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { EnrollmentProgressRowComponent } from '../../../../core/enrollment-progress-row/enrollment-progress-row.component';\nimport { growVertical } from '../../../../animations/animations';\nimport { AccessReasons, SiteAccess, DeclinedReasons } from '../../../../models/sites.model';\nimport { isNullOrUndefined } from 'util';\nimport { cloneDeep } from 'lodash';\n\n@Component({\n  selector: 'prime-app-enrollment-progress-row',\n  templateUrl: './app-enrollment-progress-row.component.html',\n  styleUrls: ['./app-enrollment-progress-row.component.scss'],\n  animations: [growVertical]\n})\nexport class AppEnrollmentProgressRowComponent extends EnrollmentProgressRowComponent implements OnInit {\n\n  @Input() disableReason: boolean = true;\n  @Output() onPendingChange = new EventEmitter<SiteAccess>();\n  @Input() isDeclined: boolean;\n  @Input() isAccepted: boolean;\n\n  private _data; // copy of data\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.data) {\n      this._data = cloneDeep(this.data);\n    }\n  }\n\n  get accessReasons() {\n    const list = Object.keys(AccessReasons);\n    return list.map(x => { return AccessReasons[x]; });\n  }\n\n  get accessReason() {\n    if (isNullOrUndefined(this._data.accessReason) || 0 === this._data.accessReason.length) {\n      return 'Please Select';\n    }\n    return this._data.accessReason;\n  }\n\n  set accessReason(reason: string) {\n    this._data.pendingChanges = true;\n    this._data.accessReason = reason;\n    this.onPendingChange.emit(this._data);\n  }\n\n  get declineReasons() {\n    const list = Object.keys(DeclinedReasons);\n    return list.map(x => { return DeclinedReasons[x]; });\n  }\n\n\n  get declineReason() {\n    if (isNullOrUndefined(this._data.declinedReason) || 0 === this._data.declinedReason.length) {\n      return 'Please Select';\n    }\n    return this._data.declinedReason;\n  }\n\n  set declineReason(reason: string) {\n    this._data.pendingChanges = true;\n    this._data.declinedReason = reason;\n    this.onPendingChange.emit(this._data);\n  }\n}\n","module.exports = \"<div class=\\\"enrollment-list-controls bg-light\\\">\\n  <div>\\n    <form class=\\\"form-inline\\\">\\n      <span class=\\\"has-float-label\\\">\\n        <input class=\\\"form-control bg-transparent\\\" type=\\\"search\\\" placeholder=\\\"Sites\\\" aria-label=\\\"Sites\\\" (input)=\\\"search($event.target.value)\\\">\\n        <span>Search</span>\\n      </span>\\n\\n      <label class=\\\"has-float-label mx-2\\\">\\n        <select id=\\\"enrollmentViewSelector\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"viewTypeSelector\\\" (change)=\\\"viewTypes($event.target.value)\\\">\\n          <option value=\\\"View All\\\">All</option>\\n          <option *ngFor=\\\"let status of EnrollmentStatus\\\" value=\\\"{{status}}\\\">\\n            {{status}}\\n          </option>\\n        </select>\\n        <span>View</span>\\n      </label>\\n\\n    </form>\\n  </div>\\n  <div>\\n    <prime-alert inlineBlock='true' *ngIf=\\\"showSaveMessage\\\" [@fadeIn] dismissable='' type='success'>Submitted.</prime-alert>\\n\\n    <button [disabled]=\\\"!updated\\\" type=\\\"button\\\" class=\\\"btn btn-default mx-2\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    <button [disabled]=\\\"!updated\\\" type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"save()\\\" [primeLoadingSpinner]=\\\"loadingSpinner\\\" >Submit</button>\\n  </div>\\n</div>\\n\\n<div class=\\\"enrollment-item-container\\\">\\n  <div class=\\\"enrollment-item-inner\\\">\\n    <prime-appl-enrollment-row\\n      *ngFor=\\\"let item of data\\\"\\n      [rowData]=\\\"item\\\"\\n      (onChange) = \\\"onChange($event)\\\"\\n      (onRowOpened)=\\\"rowOpened($event)\\\">\\n    </prime-appl-enrollment-row>\\n  </div>\\n</div>\\n\\n\"","module.exports = \".enrollment-item-container {\\n  border-top: none;\\n  height: 25rem;\\n  overflow-y: scroll; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border-right: 2px solid #dee2e6;\\n    border-left: 2px solid #dee2e6;\\n    border-bottom: 2px solid #dee2e6;\\n    min-height: 100%; }\\n  .enrollment-list-controls {\\n  border: 2px solid #dee2e6;\\n  min-height: 4em;\\n  padding: 1em;\\n  border-bottom: none;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n  .enrollment-view-selector {\\n  min-width: 5em; }\\n  .has-float-label + .has-float-label {\\n  margin-top: initial; }\\n  .has-float-label + .has-float-label select {\\n    height: auto; }\\n  .controls {\\n  flex-basis: 10.5rem;\\n  min-width: 10.5rem; }\\n  .save-message {\\n  display: inline; }\\n\"","import {Component, EventEmitter, OnDestroy, OnInit, Output, QueryList, ViewChildren} from '@angular/core';\nimport {ApplEnrollmentRowComponent, ApplEnrollmentRowItem} from '../appl-enrollment-row/appl-enrollment-row.component';\nimport {ApplicantDataService} from '../../../../services/applicant-data.service';\nimport {EnrollmentStatus} from '../../../../models/enrollment-status.enum';\nimport {defaultViewSelector, EnrollmentList} from '../../../../core/enrollment-list/enrollment-list.class';\nimport {fadeIn} from '../../../../animations/animations';\nimport { cloneDeep } from 'lodash';\nimport {SiteAccess, SiteAccessProgressSteps} from '../../../../models/sites.model';\n\n@Component({\n  selector: 'prime-enrollment-list',\n  templateUrl: './appl-enrollment-list.component.html',\n  styleUrls: ['./appl-enrollment-list.component.scss'],\n  animations: [fadeIn]\n})\nexport class ApplEnrollmentListComponent extends EnrollmentList implements OnInit, OnDestroy {\n\n  @ViewChildren(ApplEnrollmentRowComponent) rowElements: QueryList<ApplEnrollmentRowComponent>;\n  @Output() onSave = new EventEmitter<SiteAccess[]>();\n\n  public showSaveMessage = false;\n  public loadingSpinner = false;\n\n  /* Flag to indicate that information page has been updated */\n  public updated = false;\n\n  // List of Pending updates\n  private _pendingUpdates: SiteAccess[] = [];\n\n  constructor(private applicantDataService: ApplicantDataService) {\n    super();\n\n    applicantDataService.$enrollmentViewType.subscribe(viewType => {\n      this.viewTypeSelector = viewType;\n      this.viewTypes(viewType);\n    });\n  }\n\n  /* OnInit implementation */\n  ngOnInit() {\n    if (this.rowItems) {\n      this.data = cloneDeep( this.rowItems );\n    }\n  }\n\n  /* OnDestroy implementation */\n  ngOnDestroy() {\n    this.applicantDataService.enrollmentViewTypeSelector = defaultViewSelector;\n  }\n\n  // Abstract functions defined by derived class\n  //Convert enum to iterable array\n  get EnrollmentStatus() {\n    let allCurrentStatuses;\n    if (this.data){\n      allCurrentStatuses = this.data\n        .filter(x => x.expandableRows.length && x.expandableRows[0].status)\n        .map(x => x.expandableRows[0].status);\n    }\n    else {\n      // If we have no items, then show all\n      allCurrentStatuses = Object.keys( EnrollmentStatus );\n    }\n\n    // Only show statues that are in the currently displayed list in the table\n    const list = Object.keys( EnrollmentStatus ).filter(status => {\n      return allCurrentStatuses.indexOf(status) !== -1;\n    })\n    return list.map( x => {return EnrollmentStatus[x]; });\n  }\n\n  rowOpened(item: ApplEnrollmentRowComponent) {\n    this.rowElements.filter(x => x !== item)\n      .map(x => x.closeRow());\n  }\n\n  search(phrase) {\n    this.deepSearch(phrase);\n  }\n\n  // Save button clicked\n  save() {\n    this.loadingSpinner = true;\n    setTimeout(() => {\n      this.loadingSpinner = false;\n      this.showSaveMessage = true;\n\n      // Change status to 'Provisioning' or 'Declined' based on user action\n      this._pendingUpdates = this._pendingUpdates.map(sa => {\n        if (sa.declinedReason){\n          console.log('DECLINING', sa);\n          sa.status = EnrollmentStatus.Declined;\n          sa.progress = SiteAccessProgressSteps.Verifier;\n        } else if (sa.accessReason){\n          console.log('ACCEPTING', sa);\n          sa.status = EnrollmentStatus.Provisioning;\n          sa.progress = SiteAccessProgressSteps.Provisioner;\n        }\n        return sa;\n      })\n\n      // Close the row but only after updating the UI so user can see the animated change\n      setTimeout( () => {\n        this.rowElements.map(x => x.closeRow());\n      }, 500)\n\n      this.onSave.emit( this._pendingUpdates ); //Send list of updates\n    }, 3000)\n\n    this.updated = false;\n    this.rowItems = cloneDeep( this.data );\n  }\n\n  // Cancel button clicked\n  cancel() {\n    this.updated = false;\n\n    // Clear pending update list\n    while (this._pendingUpdates.length > 0) {\n      this._pendingUpdates.pop();\n    }\n\n    // Restore original values\n    this.data = cloneDeep( this.rowItems );\n  }\n\n  /**\n   * Record changes in a list\n   * @param {ApplEnrollmentRowItem} item\n   */\n  onChange( item: SiteAccess ) {\n    const obj = this._pendingUpdates.find(sa => sa.objectId === item.objectId);\n    if (obj) {\n      // Update possible fields that could change\n      obj.accessReason = item.accessReason;\n      obj.declinedReason = item.declinedReason;\n      obj.endDate = item.endDate;\n    } else {\n      // Add to the list\n      this._pendingUpdates.push( item );\n    }\n\n    this.updated = true;\n    this.showSaveMessage = false;\n  }\n\n  // PRIVATE\n\n  // NOTE: This doesn't work properly with search. Fine for prototype for now, but will need to be resolved in future.\n  viewTypes(type){\n\n    if (type === defaultViewSelector){\n      return this.data = this.rowItems;\n    }\n\n    this.deepSearch(expandableRow => {\n      return expandableRow.status.includes(type);\n    });\n  }\n\n}\n\n","module.exports = \"<div *ngIf=\\\"rowData\\\" class=\\\"enrollment-list-item\\\" (click)=\\\"toggleRow()\\\" [@openStateDisable]=\\\"openState\\\">\\n\\n  <div class=\\\"enrollment-text-container\\\">\\n    <span class=\\\"enrollment-text-main\\\">{{rowData.title}}</span>\\n    <prime-info-button\\n      class='mx-2'\\n      [targetId]=\\\"rowData.associatedObjectId\\\"\\n      [searchDomain]=\\\"applicantSearch\\\">\\n    </prime-info-button>\\n  </div>\\n  <div class=\\\"enrollment-actions\\\">\\n    <div *ngIf=\\\"!isDeclinedStatus() && !isDeclined()\\\" class=\\\"dates-col\\\">\\n      <span class=\\\"d-inline-flex align-items-center p-2 border-left\\\">Start\\n        <prime-datepicker disabled size=\\\"mini\\\" [dateFormat]=\\\"dateFormat\\\"\\n            [(date)]=\\\"startDateShort\\\"\\n            class=\\\"ml-1\\\"\\n            clearButton=\\\"invisible\\\">\\n        </prime-datepicker>\\n      </span>\\n      <span class=\\\"d-inline-flex align-items-center p-2 border-left border-right\\\">End\\n        <prime-datepicker\\n            size=\\\"mini\\\"\\n            [dateFormat]=\\\"dateFormat\\\"\\n            [(date)]=\\\"endDateShort\\\"\\n            class=\\\"ml-1\\\"\\n            [disabled]=\\\"!isActiveStatus() && !isNewStatus()\\\"\\n            [clearButton]=\\\"(!isActiveStatus() && !isNewStatus()) ? 'invisible' : '' \\\">\\n        </prime-datepicker>\\n    </span>\\n    </div>\\n    <!-- <div *ngIf=\\\"isDeclinedStatus()\\\">\\n      <div class=\\\"col d-inline-flex flex-column\\\">\\n        <select name=\\\"reasonForDecline\\\"\\n                id=\\\"reasonForDecline\\\"\\n                class=\\\"orm-control drop-dl-box-15 color\\\"\\n                [value]=\\\"declinedReason\\\" disabled>\\n          <option [value]=\\\"declinedReason\\\" selected>{{declinedReason}}</option>\\n        </select>\\n      </div>\\n    </div> -->\\n    <!-- <div *ngIf=\\\"isNewStatus() && isDeclined()\\\">\\n      <select name=\\\"reasonForDecline\\\"\\n              id=\\\"reasonForDecline\\\"\\n              class=\\\"orm-control drop-dl-box-15 color\\\"\\n              [(ngModel)]=\\\"declinedReason\\\"\\n              (click)=\\\"$event.stopPropagation()\\\">\\n        <option value=\\\"Please Select\\\" selected>Please Select</option>\\n        <option *ngFor=\\\"let reason of declinedReasons\\\" [value]=\\\"reason\\\">\\n          {{reason}}\\n        </option>\\n      </select>\\n    </div> -->\\n    <span class=\\\"enrollment-icons\\\">\\n      <prime-pill-badge\\n        [alerts]=\\\"allChildAlerts\\\"\\n        [iconOnly]='false'>\\n      </prime-pill-badge>\\n\\n      <prime-accept-reject-icons [ngClass]=\\\"{invisible: shouldHideAcceptRejectControls() }\\\" class='border-left'\\n          (onAccepted)=\\\"onAccept()\\\"\\n          (onRejected)=\\\"onDecline()\\\"\\n          labelAccept=\\\"Accept Provisioning\\\"\\n          labelReject=\\\"Decline Enrolment\\\">\\n      </prime-accept-reject-icons>\\n    </span>\\n  </div>\\n</div>\\n\\n\\n<!-- <div *ngIf=\\\"(!isNewStatus() && isShowProgress()) || (isNewStatus() && isAccepted())\\\" [@openState]=\\\"openState\\\"> -->\\n    <!-- [disableReason]=\\\"!(isNewStatus() || isInitiatedStatus())\\\" -->\\n\\n<div [@openState]=\\\"openState\\\">\\n  <div [@openStateChild]=\\\"openState\\\"  class=\\\"expandable-container\\\">\\n\\n    <div class=\\\"enrollment-expandable\\\" *ngFor=\\\"let siteAccess of siteAccessRequiringAttention\\\"\\n      (click)=\\\"expandedRowClick(siteAccess)\\\">\\n      <prime-app-enrollment-progress-row\\n        [open]=\\\"siteAccess.open\\\"\\n        [data]=\\\"siteAccess\\\"\\n        [disableReason]=\\\"!(isNewStatus() || isInitiatedStatus())\\\"\\n        (onPendingChange)=\\\"pendingChanges($event)\\\"\\n        [isDeclined]=\\\"isDeclined()\\\"\\n        [isAccepted]=\\\"isAccepted()\\\">\\n      </prime-app-enrollment-progress-row>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background: #e9ecef; }\\n\\n.enrollment-icons,\\n.enrollment-list-item,\\n.enrollment-expandable {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.enrollment-list-item {\\n  border: 1px solid #adb5bd;\\n  border-left: none;\\n  border-right: none;\\n  min-height: 4em;\\n  background: white;\\n  z-index: 1;\\n  position: relative; }\\n\\n.enrollment-expandable,\\n.enrollment-list-item {\\n  transition: 0.25s; }\\n\\n.enrollment-expandable:hover,\\n  .enrollment-list-item:hover {\\n    background: #f9f9f9; }\\n\\n.enrollment-expandable {\\n  color: #495057;\\n  min-height: 4em;\\n  border: 1px solid #adb5bd;\\n  flex-wrap: wrap;\\n  background: #e9ecef; }\\n\\n.enrollment-actions {\\n  display: flex;\\n  align-items: center;\\n  align-self: stretch; }\\n\\n.enrollment-actions .btn-block {\\n    border-radius: 0;\\n    border-top: 0;\\n    border-right: 0;\\n    border-bottom: 0;\\n    height: 100%; }\\n\\n.enrollment-text-container {\\n  min-height: 4em;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  flex: 5;\\n  padding-left: 1em;\\n  margin-right: 2em; }\\n\\n.enrollment-text-container .enrollment-text-main {\\n    font-size: 1.072rem; }\\n\\n.enrollment-text-container > span:not(:last-of-type):not(.no-separator):after {\\n    font-size: 1rem;\\n    color: #6c757d;\\n    content: \\\" / \\\"; }\\n\\n@media (max-width: 575.98px) {\\n    .enrollment-text-container > span:first-of-type:after {\\n      content: \\\"\\\";\\n      display: block; } }\\n\\n.enrollment-text-container > span:not(.enrollment-text-main) {\\n    color: #6c757d;\\n    margin-left: 0.1rem; }\\n\\n.enrollment-icons > i {\\n  padding: 0 5px;\\n  font-size: 18px;\\n  cursor: pointer; }\\n\\n.enrollment-icons > i.fa-edit {\\n    font-size: 1.75rem; }\\n\\ninput[id=\\\"startDt\\\"], input[id=\\\"endDt\\\"] {\\n  width: 12ch; }\\n\\n.dates-col {\\n  padding: 0 1em; }\\n\\n.dates-col, .dates-col > span {\\n    height: 100%; }\\n\\n.dates-col prime-datepicker {\\n    min-width: 8rem; }\\n\\n.enrollment-icons {\\n  height: 100%; }\\n\\nprime-accept-reject-icons {\\n  height: 100%;\\n  display: flex;\\n  align-items: center; }\\n\\n.enrollment-actions {\\n  min-width: 35rem; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {EnrollmentRow, RowState} from '../../../../core/enrollment-row/enrollment-row.class';\nimport {loadInOut, openState, openStateChild, openStateDisable} from '../../../../animations/animations';\nimport {DeclinedReasons, SiteAccess} from '../../../../models/sites.model';\nimport {EnrollmentStatus} from '../../../../models/enrollment-status.enum';\nimport {SearchDomain} from '../../../../core/user-info-button/user-info-button.component';\nimport {isNullOrUndefined} from 'util';\nimport {cloneDeep} from 'lodash';\n\n// Specific to this component\nexport interface ApplEnrollmentRowItem {\n  title: string;\n\n  /** associatedObjectId and title both refer to the same underlying object. By\n   * having an id, we can lookup from the EnrollmentRow -> item, e.g. when\n   * navigating between pages */\n  associatedObjectId: string;\n\n  /** Optional and only used in one config. */\n  expandableRows?: SiteAccess[];\n}\n\n@Component({\n  selector: 'prime-appl-enrollment-row',\n  templateUrl: './appl-enrollment-row.component.html',\n  styleUrls: ['./appl-enrollment-row.component.scss'],\n  animations: [openState, openStateChild, loadInOut, openStateDisable]\n})\nexport class ApplEnrollmentRowComponent extends EnrollmentRow implements OnInit {\n\n  @Input() rowData: ApplEnrollmentRowItem;\n  @Output() onChange = new EventEmitter<ApplEnrollmentRowItem>();\n\n  public applicantSearch: SearchDomain = SearchDomain.Applicant; // Domain to search for user sites\n  public dateFormat = 'mmm. dd, yyyy';\n\n  // copy of row data\n  private _data;\n  private _acceptedEnroll = false;\n  private _declinedEnroll = false;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.rowData) {\n      this._data = cloneDeep(this.rowData);\n      return this.siteAccessRequiringAttention.map(x => x.open = false);\n    }\n  }\n\n  onAccept() {\n    this._acceptedEnroll = true;\n\n    this.openRow();\n  }\n\n  onDecline() {\n    this._declinedEnroll = true;\n    this.openRow();\n  }\n\n  /**\n   * Checks whether enrollment was accepted\n   * @returns {boolean}\n   */\n  isAccepted(): boolean {\n    this.siteAccessRequiringAttention.map( x => {\n      if ( x.accessReason ) {\n        this._acceptedEnroll = true;\n        return x; }\n    }).filter(x => x); //Remove undefined\n\n    return this._acceptedEnroll;\n  }\n\n  /**\n   * Checks whether enrollment was declined\n   * @returns {boolean}\n   */\n  isDeclined(): boolean {\n    this.siteAccessRequiringAttention.map( x => {\n      if ( x.declinedReason ) {\n        this._declinedEnroll = true;\n        return x; }\n    }).filter(x => x); //Remove undefined\n\n    return this._declinedEnroll;\n  }\n\n  /**\n   * Forward pending changes to parent component to track\n   * @param {SiteAccess} item\n   */\n  pendingChanges( item: SiteAccess ) {\n\n    // Changes that occur on the enrollment progress row\n    this.siteAccessRequiringAttention[0].accessReason = item.accessReason;\n    this.siteAccessRequiringAttention[0].declinedReason = item.declinedReason;\n\n    // Send changes for this row\n    this.onChange.emit( this.siteAccessRequiringAttention[0] );\n  }\n\n  /**\n   * Get the possible reasons for declining the site access\n   * @returns {any[]}\n   */\n  get declinedReasons() {\n    const list = Object.keys(DeclinedReasons);\n    return list.map( x => { return DeclinedReasons[x]; });\n  }\n\n  /**\n   * Get the reason why access was declined\n   * @returns {string}\n   */\n  get declinedReason(): string {\n\n    if (isNullOrUndefined( this.siteAccessRequiringAttention[0].declinedReason ) ||\n        0 === this.siteAccessRequiringAttention[0].declinedReason.length ) {\n      return 'Please Select';\n    }\n    return this.siteAccessRequiringAttention[0].declinedReason;\n  }\n\n  set declinedReason( reason: string ) {\n    this.siteAccessRequiringAttention[0].declinedReason = reason;\n\n    // Send changes for this row\n    this.onChange.emit( this.siteAccessRequiringAttention[0] );\n  }\n\n  get startDate(): Date {\n    return this.siteAccessRequiringAttention[0].startDate;\n  }\n\n  set startDate( startDt: Date ) {\n    this.siteAccessRequiringAttention[0].startDate = startDt;\n  }\n\n  get endDate(): Date {\n    return this.siteAccessRequiringAttention[0].endDate;\n  }\n\n  set endDate( endDt: Date ) {\n    this.siteAccessRequiringAttention[0].endDate = endDt;\n\n    // Send changes for this row\n    this.onChange.emit( this.siteAccessRequiringAttention[0] );\n  }\n\n  get startDateShort(): Date {\n    return this.siteAccessRequiringAttention[0].startDateShort;\n  }\n\n  set startDateShort( startDt: Date ) {\n    this.siteAccessRequiringAttention[0].startDateShort = startDt;\n  }\n\n  get endDateShort(): Date {\n    return this.siteAccessRequiringAttention[0].endDateShort;\n  }\n\n  set endDateShort( endDt: Date ) {\n    this.siteAccessRequiringAttention[0].endDateShort = endDt;\n\n    // Send changes for this row\n    this.onChange.emit(this.siteAccessRequiringAttention[0]);\n  }\n\n    shouldHideAcceptRejectControls(): boolean {\n\n    if (this.isAccepted() || this.isDeclined() ){\n      return true;\n    }\n\n    // For now don't hide Initiated or New. Not clear on what the difference between these two is, but we're honouring the distinction here.\n    return !(this.isInitiatedStatus() || this.isNewStatus())\n  }\n\n  isNewStatus(): boolean {\n    return this.filterStatus(x => x.status === EnrollmentStatus.New);\n  }\n\n  isDeclinedStatus(): boolean {\n    return this.filterStatus(x => x.status === EnrollmentStatus.Declined);\n  }\n\n  isActiveStatus(): boolean {\n    return this.filterStatus(x => x.status === EnrollmentStatus.Active);\n  }\n\n  isInitiatedStatus(): boolean {\n    return this.filterStatus(x => x.status === EnrollmentStatus.Initiated);\n  }\n\n  isShowProgress(): boolean {\n    return this.filterStatus(x => (x.status !== EnrollmentStatus.Expired && x.status !== EnrollmentStatus.Active));\n  }\n\n  filterStatus(fn: (sa: SiteAccess) => boolean    ){\n    return this.siteAccessRequiringAttention.filter(fn).length !== 0;\n  }\n\n  // abstract method - defined in derived\n  /** This function is responsible for generating site access row titles depending on dashboard type */\n  get siteAccessRequiringAttention(): any[] {\n\n    if (!this._data || !this._data.expandableRows) {\n      return [];\n    }\n\n    return this._data.expandableRows.map(siteAccess => {\n      siteAccess.title = `${siteAccess.site.name}`;\n      return siteAccess;\n    });\n  }\n\n  canOpen(): boolean{\n    // return (this.isNewStatus() || this.isInitiatedStatus());\n    return true;\n    // // Don't open on New or Active rows, unless user has Accepted the New row\n    // return this.rowData.expandableRows.filter(sa => {\n    //   return (sa.status !== EnrollmentStatus.New && sa.status !== EnrollmentStatus.Active) || this._acceptedEnroll;\n    // }).length >= 1;\n  }\n}\n\n","module.exports = \"<prime-core-breadcrumb [horizontalScroll]='\\\"true\\\"'>\\n  <span *ngIf=\\\"!hasCompletedWizardFlag\\\" left class='breadcrumb-text'>Dashboard / {{this.pageName}} </span>\\n  <span *ngIf=\\\"hasCompletedWizardFlag\\\" left class='breadcrumb-text'><a routerLink=\\\"/applicant/dashboard\\\">Dashboard</a> / {{this.pageName}} </span>\\n\\n  <prime-wizard-progress-bar  *ngIf=\\\"!hasCompletedWizardFlag\\\" center [progressSteps]='progressSteps' class=''></prime-wizard-progress-bar>\\n\\n  <span right class='d-flex'>\\n    <div *ngIf=\\\"!hasCompletedWizardFlag\\\" class='controls'>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"continue()\\\" [disabled]='!canContinue()' [ngClass]=\\\"{'btn-primary': !isButtonSubmitting, 'btn-secondary': isButtonSubmitting}\\\">{{ isButtonSubmitting ? 'Submit' : 'Continue'}}</button>\\n     </div>\\n    <div *ngIf=\\\"hasCompletedWizardFlag\\\" class='controls'>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"cancel()\\\" [disabled]='!contactHasChanged'>Cancel</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"continue()\\\" [disabled]='!contactHasChanged'>Save</button>\\n    </div>\\n  </span>\\n\\n</prime-core-breadcrumb>\\n\"","module.exports = \"prime-applicant-breadcrumbs prime-wizard-progress-bar {\\n  padding: 0 2rem; }\\n\\nprime-applicant-breadcrumbs .controls {\\n  min-width: 14em;\\n  display: flex;\\n  justify-content: flex-end; }\\n\\nprime-applicant-breadcrumbs .breadcrumb-text {\\n  min-width: 14em; }\\n\\nprime-applicant-breadcrumbs .alert, prime-applicant-breadcrumbs .alert .close {\\n  padding: 0.35rem 1.25rem; }\\n\\nprime-applicant-breadcrumbs .alert {\\n  margin-bottom: 0; }\\n\\nprime-applicant-breadcrumbs .disabled {\\n  color: #58595a;\\n  opacity: 0.8;\\n  pointer-events: none;\\n  cursor: not-allowed; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { ApplicantDataService } from '../../../../services/applicant-data.service';\nimport { fadeIn } from '../../../../animations/animations';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'prime-applicant-breadcrumbs',\n  templateUrl: './applicant-breadcrumbs.component.html',\n  styleUrls: ['./applicant-breadcrumbs.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [fadeIn]\n})\nexport class ApplicantBreadcrumbsComponent implements OnInit {\n  @Input() pageName: string;\n  @Input() nextPageLink: string;\n  @Input() previousPageLink: string;\n  @Input() shouldDisableContinue: boolean;\n  @Input() contactHasChanged: boolean;\n  /** If true, the button colour will be made to stand out more */\n  @Input() isButtonSubmitting: boolean = false;\n  @Input() hasCompletedWizardFlag: boolean;\n\n  @Output() onSave = new EventEmitter<boolean>();\n  @Output() onCancel = new EventEmitter<boolean>();\n  @Output() onSetHasCompletedWizardFlag = new EventEmitter<boolean>();\n\n  public showSaveMessage: boolean = false;\n\n  constructor(private applicantDataService: ApplicantDataService, private router: Router) { }\n\n  ngOnInit() {}\n\n\n  get progressSteps() {\n    return this.applicantDataService.getPageProgressSteps();\n  }\n\n  reset(){\n    this.showSaveMessage = false;\n  }\n\n  save(){\n    this.showSaveMessage = true;\n    this.onSave.emit(true);\n  }\n\n  continue(){\n    this.save();\n    if (!this.hasCompletedWizardFlag) {\n      if (this.router.url === '/applicant/review') {\n        this.setHasCompletedWizardFlag();\n        this.router.navigate(['/applicant/complete-submission']);\n      }\n      else {\n        this.router.navigate([this.nextPageLink]);\n      }\n    }\n  }\n\n  setHasCompletedWizardFlag(){\n    this.onSetHasCompletedWizardFlag.emit(true);\n  }\n\n  canContinue(): boolean {\n    return !this.shouldDisableContinue;\n  }\n\n  cancel(){\n    //this.router.navigate([this.previousPageLink]);\n    this.onCancel.emit(true);\n  }\n\n}\n","module.exports = \"<div class=\\\"enrollment-list-controls bg-light\\\">\\n  <div>\\n    <form class=\\\"form-inline\\\">\\n      <span class=\\\"has-float-label\\\">\\n        <input class=\\\"form-control bg-transparent\\\" type=\\\"search\\\" placeholder=\\\"Organizations\\\" aria-label=\\\"Organizations\\\" (input)=\\\"search($event.target.value)\\\">\\n        <span>Search</span> \\n      </span>\\n\\n      <label class=\\\"has-float-label mx-2\\\">\\n        <select id=\\\"enrollmentViewSelector\\\" class=\\\"form-control enrollment-view-selector\\\" [value]=\\\"viewTypeSelector\\\" (change)=\\\"viewTypes($event.target.value)\\\">\\n          <option value=\\\"View All\\\">All</option>\\n          <option *ngFor=\\\"let status of orgTypes\\\" value=\\\"{{status}}\\\">\\n            {{status}}\\n          </option>\\n        </select>\\n        <span>View</span>\\n      </label>\\n\\n    </form>\\n  </div>\\n  <div>\\n    <prime-add-pharma-net-organization #addOrgComponent></prime-add-pharma-net-organization>\\n  </div>\\n</div>\\n<div class=\\\"enrollment-item-container\\\">\\n  <div class=\\\"enrollment-item-inner\\\">\\n    <ng-container *ngIf='data?.length; else emptyState'>\\n      <prime-pharma-net-access-row\\n        *ngFor='let item of data'\\n        [rowData]='item'\\n      >\\n      </prime-pharma-net-access-row>\\n\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<ng-template #emptyState>\\n  <span class=\\\"text-center\\\" (click)=\\\"addOrg(addOrgComponent)\\\">\\n    <!-- Use padding instead of margin so we don't mess up borders -->\\n    <h3 class='m-0 p-2 pt-4'>No organizations selected</h3>\\n    <p class='m-0 p-2'>To add an organization, click here, or click “Add Organization” above.</p>\\n  </span>\\n</ng-template>\\n\"","module.exports = \".enrollment-item-container {\\n  border-top: none;\\n  height: 25rem;\\n  overflow-y: scroll; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border-right: 2px solid #dee2e6;\\n    border-left: 2px solid #dee2e6;\\n    border-bottom: 2px solid #dee2e6;\\n    min-height: 100%; }\\n  .enrollment-list-controls {\\n  border: 2px solid #dee2e6;\\n  min-height: 4em;\\n  padding: 1em;\\n  border-bottom: none;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n  .enrollment-view-selector {\\n  min-width: 5em; }\\n  .has-float-label + .has-float-label {\\n  margin-top: initial; }\\n  .has-float-label + .has-float-label select {\\n    height: auto; }\\n  .enrollment-item-container {\\n  min-height: 25rem;\\n  height: calc(70vh - 5rem);\\n  border-right: 2px solid #dee2e6;\\n  border-left: 2px solid #dee2e6;\\n  border-bottom: 4px solid #dee2e6; }\\n  .enrollment-item-container .enrollment-item-inner {\\n    border: none; }\\n\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { EnrollmentList, defaultViewSelector } from '../../../../core/enrollment-list/enrollment-list.class';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { cloneDeep } from 'lodash';\nimport { PharmaNetOrgTypes } from '../../../../models/organizations.model';\nimport { RowState } from '../../../../core/enrollment-row/enrollment-row.class';\nimport { AddPharmaNetOrganizationComponent } from '../add-pharma-net-organization/add-pharma-net-organization.component';\nimport { EventEmitter } from 'events';\n\n\n@Component({\n  selector: 'prime-pharma-net-access-list',\n  templateUrl: './pharma-net-access-list.component.html',\n  styleUrls: ['./pharma-net-access-list.component.scss']\n})\nexport class PharmaNetAccessListComponent extends EnrollmentList implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  EnrollmentStatus: EnrollmentStatus[] = [ ];\n\n  public orgTypes;\n\n  ngOnInit() {\n    this.orgTypes = Object.keys(PharmaNetOrgTypes).map(x => PharmaNetOrgTypes[x]);\n  }\n\n  ngOnChanges(){\n    this.data = this.rowItems;\n  }\n\n  search(phrase) {\n    this.data = this.rowItems.filter(x => x.title.toLowerCase().includes(phrase.toLowerCase()));\n  }\n\n  rowOpened() { \n    return null;\n  }\n\n  addOrg(component: AddPharmaNetOrganizationComponent){\n    component.openModal();\n  }\n\n  viewTypes(type) {\n\n    if (type === defaultViewSelector) {\n      return this.data = this.rowItems;\n    }\n\n\n    this.data = this.rowItems.filter(x => {\n      let target = x.type.toLowerCase();\n      if (type === 'HA'){\n        target = target.replace('pharmacy', '');\n      }\n      return target.toLowerCase().includes(type.toLowerCase());\n    });\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"rowData\\\" class=\\\"enrollment-list-item org-row\\\" (click)=\\\"toggleRow()\\\" [ngClass]='{orgOnly: orgsOnly}'>\\n  <div class=\\\"enrollment-text-container\\\">\\n    <span class=\\\"enrollment-text-main\\\">\\n      <i class='fa fa-caret-down' [@rotate180]='openState' *ngIf='!orgsOnly'></i> \\n        {{rowData.title}}\\n      </span>\\n  </div>\\n\\n  <!-- Stop propagation so that click events on e.g. the dropdown won't bubble up to toggleRow() -->\\n  <div class=\\\"enrollment-actions\\\" (click)=\\\"$event.stopPropagation()\\\" >\\n\\n    <!-- TODO - Temp removed, will be in \\\"return visit\\\" (possibly in separate component) -->\\n    <!-- <label class=\\\"has-float-label mx-2\\\">\\n      <select class=\\\"form-control\\\">\\n        <option *ngFor=\\\"let status of accessType\\\"\\n                value=\\\"{{status}}\\\">\\n          {{status}}\\n        </option>\\n      </select>\\n      <span>Access Type</span>\\n    </label> -->\\n\\n    <div class=\\\"dates-col\\\">\\n      <span class=\\\"d-inline-flex align-items-center p-2 border-left\\\">Start\\n        <prime-datepicker \\n                          size=\\\"mini\\\"\\n                          dateFormat='yyyy/mm/dd'\\n                          [date]='getOrgAccess()?.startDate'\\n                          (dateChange)='onOrgStartDate($event)'\\n                          class=\\\"ml-1\\\"\\n                          clearButton=\\\"invisible\\\">\\n        </prime-datepicker>\\n      </span>\\n      <span class=\\\"d-inline-flex align-items-center p-2 border-left border-right\\\">End\\n        <prime-datepicker size=\\\"mini\\\"\\n                          dateFormat='yyyy/mm/dd'\\n                          [date]='getOrgAccess()?.endDate'\\n                          (dateChange)=\\\"onOrgEndDate($event)\\\"\\n                          onlyFutureDates='true'\\n                          class=\\\"ml-1\\\">\\n        </prime-datepicker>\\n      </span>\\n    </div>\\n\\n    <!-- <prime-accept-reject-icons *ngIf=\\\"!orgsOnly && shouldShowOrgActionButtons()\\\"\\n                               [@growHorizontal]\\n                               (onAccepted)=\\\"onAcceptOrg()\\\"\\n                               (onRejected)=\\\"onRejectOrg()\\\"\\n                               labelAccept=\\\"Accept Enrollment\\\"\\n                               labelReject=\\\"Decline Enrollment\\\">\\n    </prime-accept-reject-icons> -->\\n\\n\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" *ngIf=\\\"orgsOnly\\\" (click)=\\\"removeOrg()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n  </div>\\n</div>\\n\\n\\n<!-- Nested rows for all the sites -->\\n<div [@growVertical] *ngIf=\\\"!orgsOnly && isOpen()\\\" class='pharmanet-site'>\\n  <div class=\\\"expandable-container\\\">\\n\\n       <div class=\\\"enrollment-expandable\\\"\\n         *ngFor=\\\"let siteAccess of subRowData\\\"\\n         (click)=\\\"expandedRowClick(siteAccess)\\\">\\n\\n\\n      <div class='d-flex align-items-center justify-content-between w-100 py-2'[@growVertical]>\\n        <div>\\n          Site {{siteAccess.site.name}}\\n          <prime-info-button [targetId]='siteAccess.site.objectId'></prime-info-button>\\n        </div>\\n\\n        <div class='d-flex align-items-center align-self-stretch'>\\n\\n          <!-- TODO - Temp removed, will be in \\\"return visit\\\" (possibly in separate component) -->\\n          <!-- <label class=\\\"has-float-label mx-2\\\">\\n            <select id=\\\"enrollmentViewSelector\\\"\\n                    class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let status of accessType\\\"\\n                      value=\\\"{{status}}\\\">\\n                {{status}}\\n              </option>\\n            </select>\\n            <span>Access Type</span>\\n          </label> -->\\n\\n          <label class=\\\"has-float-label\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control input-readonly pos-input\\\" [value]=\\\"siteAccess.posUserId ? siteAccess.posUserId : 'n/a'\\\" disabled>\\n            <span>PoS User ID</span>\\n          </label>\\n    \\n\\n          <div class=\\\"dates-col\\\">\\n            <span class=\\\"d-inline-flex align-items-center p-2 border-left\\\">Start\\n              <prime-datepicker [disabled]=\\\"!isActionableRow(siteAccess)\\\"\\n                                size=\\\"mini\\\"\\n                                dateFormat=\\\"yyyy/mm/dd\\\" \\n                                [(date)]=\\\"siteAccess.startDate\\\"\\n                                class=\\\"ml-1\\\"\\n                                clearButton=\\\"invisible\\\">\\n              </prime-datepicker>              \\n            </span>\\n            <span class=\\\"d-inline-flex align-items-center p-2 border-left border-right\\\">End\\n              <prime-datepicker [disabled]=\\\"!isActionableRow(siteAccess)\\\"\\n                                size=\\\"mini\\\"\\n                                onlyFutureDates='true'\\n                                dateFormat=\\\"yyyy/mm/dd\\\"\\n                                [(date)]=\\\"siteAccess.endDate\\\"\\n                                class=\\\"ml-1\\\">\\n              </prime-datepicker>\\n            </span>\\n          </div>\\n\\n          <label class=\\\"has-float-label mx-2\\\">\\n            <select class=\\\"form-control access-type-selector\\\" [(ngModel)]='siteAccess.personalAccess' >\\n              <option *ngFor=\\\"let status of accessType\\\"\\n                      value=\\\"{{status}}\\\">\\n                {{status}}\\n              </option>\\n            </select>\\n            <span>Personal Access</span>\\n          </label>\\n\\n\\n          <!-- Only show accept/declined -->\\n          <prime-pill-badge class='ml-2 align-self-center' *ngIf='siteAccess.status !== \\\"New\\\"' [alerts]=\\\"[siteAccess.alert]\\\">\\n          </prime-pill-badge>\\n\\n          <prime-accept-reject-icons *ngIf=\\\"isActionableRow(siteAccess); else editExisting\\\"\\n                                    (onAccepted)=\\\"onAcceptSite(siteAccess)\\\"\\n                                    (onRejected)=\\\"onRejectSite(siteAccess)\\\"\\n                                    labelAccept=\\\"Accept Enrolment\\\"\\n                                    labelReject=\\\"Decline Enrolment\\\"\\n                                    class='site-accept-reject'>\\n          </prime-accept-reject-icons>\\n\\n          <ng-template #editExisting>\\n            <i class=\\\"fa fa-pencil text-muted edit-icon\\\"></i>\\n          </ng-template>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background: #e9ecef; }\\n\\n.enrollment-icons,\\n.enrollment-list-item,\\n.enrollment-expandable {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end; }\\n\\n.enrollment-list-item {\\n  border: 1px solid #adb5bd;\\n  border-left: none;\\n  border-right: none;\\n  min-height: 4em;\\n  background: white;\\n  z-index: 1;\\n  position: relative; }\\n\\n.enrollment-expandable,\\n.enrollment-list-item {\\n  transition: 0.25s; }\\n\\n.enrollment-expandable:hover,\\n  .enrollment-list-item:hover {\\n    background: #f9f9f9; }\\n\\n.enrollment-expandable {\\n  color: #495057;\\n  min-height: 4em;\\n  border: 1px solid #adb5bd;\\n  flex-wrap: wrap;\\n  background: #e9ecef; }\\n\\n.enrollment-actions {\\n  display: flex;\\n  align-items: center;\\n  align-self: stretch; }\\n\\n.enrollment-actions .btn-block {\\n    border-radius: 0;\\n    border-top: 0;\\n    border-right: 0;\\n    border-bottom: 0;\\n    height: 100%; }\\n\\n.enrollment-text-container {\\n  min-height: 4em;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  flex: 5;\\n  padding-left: 1em;\\n  margin-right: 2em; }\\n\\n.enrollment-text-container .enrollment-text-main {\\n    font-size: 1.072rem; }\\n\\n.enrollment-text-container > span:not(:last-of-type):not(.no-separator):after {\\n    font-size: 1rem;\\n    color: #6c757d;\\n    content: \\\" / \\\"; }\\n\\n@media (max-width: 575.98px) {\\n    .enrollment-text-container > span:first-of-type:after {\\n      content: \\\"\\\";\\n      display: block; } }\\n\\n.enrollment-text-container > span:not(.enrollment-text-main) {\\n    color: #6c757d;\\n    margin-left: 0.1rem; }\\n\\n.enrollment-icons > i {\\n  padding: 0 5px;\\n  font-size: 18px;\\n  cursor: pointer; }\\n\\n.enrollment-icons > i.fa-edit {\\n    font-size: 1.75rem; }\\n\\n.org-row {\\n  background: #e9ecef; }\\n\\n.enrollment-list-item {\\n  transition: 0.25s;\\n  padding-right: 1em; }\\n\\n.enrollment-list-item:hover {\\n    background: #dadfe4; }\\n\\n.enrollment-expandable {\\n  justify-content: space-between;\\n  background: white;\\n  padding: 0 1em; }\\n\\nselect {\\n  background-color: white; }\\n\\n.dates-col {\\n  padding: 0 1em;\\n  white-space: nowrap; }\\n\\n.dates-col, .dates-col > span {\\n    height: 100%; }\\n\\n.dates-col prime-datepicker {\\n    min-width: 8rem; }\\n\\n.edit-icon {\\n  font-size: 1.5rem;\\n  cursor: pointer; }\\n\\n.orgOnly {\\n  cursor: default; }\\n\\n.orgOnly .enrollment-text-container,\\n  .orgOnly .enrollment-expandable,\\n  .orgOnly .enrollment-list-item {\\n    cursor: default; }\\n\\n.site-accept-reject {\\n  margin-right: 0.75em; }\\n\\n.access-type-selector {\\n  min-width: 100px; }\\n\\n.pos-input {\\n  min-width: 5em; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { EnrollmentRow, RowState } from '../../../../core/enrollment-row/enrollment-row.class';\nimport { openState, openStateChild, loadInOut, openStateDisable, rotate180, growVertical, growHorizontal } from '../../../../animations/animations';\nimport { SiteAccess, PersonalAccessType } from '../../../../models/sites.model';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { PharmaNetOrganization } from '../../../../models/organizations.model';\nimport { OrganizationAccess } from '../../../../models/organization-access.model';\n\n\n@Component({\n  selector: 'prime-pharma-net-access-row',\n  templateUrl: './pharma-net-access-row.component.html',\n  styleUrls: ['./pharma-net-access-row.component.scss'],\n  animations: [openState, openStateChild, loadInOut, rotate180, growVertical, growHorizontal]\n})\nexport class PharmaNetAccessRowComponent extends EnrollmentRow implements OnInit {\n\n  @Input() rowData: PharmaNetOrganization;\n\n  /** If true, hide all sites and only display orgs. For the prototype, this\n   * simulates that the Org has not yet had sites provisioned for the user. */\n  public orgsOnly: boolean = true;\n\n  public subRowData: SiteAccess[];\n\n  public accessType = Object.keys(PersonalAccessType);\n\n  constructor(private dataService: PrimeDataService) {\n    super();\n  }\n\n  ngOnInit() {\n    // ! Ideally we shouldn't be configuring our data here, but it's fine for prototype.\n    this.subRowData = this.rowData.setupNewEnrollments(this.dataService.user);\n\n    // We only need to update on init\n    this.orgsOnly = this.calculateOrgOnly();\n\n    if (this.hasActionableSites()){\n      this.openRow();\n    }\n  }\n\n  /** Determines if we should restrict the row to orgOnly - i.e. before the Provisoiner has selected sites */\n  calculateOrgOnly(): boolean {\n    return this.rowData.members.filter(site => {\n      return site.siteAccess.length && site.siteAccess[0].status !== null;\n    }).length === 0;\n  }\n\n  /**\n   * The OrgAccess for the Org for this row.\n   */\n  getOrgAccess(): OrganizationAccess{\n\n    const result = this.rowData.organizationAccess.find(oa => oa.person === this.dataService.user);\n    // if (!result){\n    //   throw new Error('Unable to find OrganizationAccess for organization with objID - ' + this.rowData.objectId)\n    // }\n    return result;\n  }\n\n  isOpen(): boolean {\n    return this.openState === RowState.Opened;\n  }\n\n  hasActionableSites(): boolean {\n    // The org row is actionable if any of its children are actionable\n    return this.subRowData\n      .map(this.isActionableRow)\n      .filter(x => x === true)\n      .length >= 1;\n  }\n\n  isActionableRow(sa: SiteAccess): boolean{\n    return sa.status === EnrollmentStatus.New;\n  }\n\n  // Replace the inheritied method as our behaviour diverges\n  toggleRow(){\n    this.openState = this.openState === RowState.Opened ? RowState.Closed : RowState.Opened;\n\n    if (this.openState === RowState.Opened) {\n      this.onRowOpened.emit(this);\n    }\n\n  }\n\n  onOrgStartDate(newDate: Date){\n    this.subRowData = this.subRowData.map(sa => {\n      if (this.isActionableRow(sa)){\n        sa.startDate = newDate;\n      }\n      return sa;\n    });\n    this.getOrgAccess().startDate = newDate;\n  }\n\n  onOrgEndDate(newDate: Date) {\n    this.subRowData = this.subRowData.map(sa => {\n      if (this.isActionableRow(sa)){\n        sa.endDate = newDate;\n      }\n      return sa;\n    });\n    this.getOrgAccess().endDate = newDate;\n  }\n\n  // Remove the org, which removes the entire row and destroys the component\n  removeOrg(){\n    // ! TODO Bug - This does not (but should) delete/change the status of the SiteAccess too, currently they're orphaned.\n    this.dataService.user.organizationAccess = this.dataService.user.organizationAccess.filter(oa => {\n      return oa.organization.objectId !== this.rowData.objectId;\n    });\n  }\n\n\n  // public accessType = ['Personal Access', 'Test', 'Todo']; // replace with PharmaNetOrgType\n\n  onAcceptSite(sa: SiteAccess){\n    sa.status = EnrollmentStatus.Active;\n  }\n\n  onRejectSite(sa: SiteAccess){\n    sa.status = EnrollmentStatus.Declined;\n  }\n\n  onAcceptOrg(org: PharmaNetOrganization){\n    this.subRowData = this.subRowData.map(siteAccess => {\n      if (siteAccess.status === EnrollmentStatus.New){\n        this.onAcceptSite(siteAccess);\n      }\n      return siteAccess;\n    });\n  }\n\n  onRejectOrg(org: PharmaNetOrganization) {\n    this.subRowData = this.subRowData.map(siteAccess => {\n      if (siteAccess.status === EnrollmentStatus.New) {\n        this.onRejectSite(siteAccess);\n      }\n      return siteAccess;\n    });\n  }\n\n\n  get siteAccessRequiringAttention(): any[] {\n\n    if (!this.rowData){\n      return [];\n    }\n\n    return this.rowData.allSiteAccess;\n  }\n\n}\n","module.exports = \"<prime-applicant-breadcrumbs\\n  pageName=\\\"Access Acceptance\\\"\\n  previousPageLink=\\\"/applicant/professional\\\"\\n  nextPageLink=\\\"/applicant/review\\\"\\n  [shouldDisableContinue]=\\\"disableContinue()\\\"\\n  (onSave)=\\\"save()\\\">\\n</prime-applicant-breadcrumbs>\\n\\n<prime-page-framework>\\n\\n  <h2 class='prime-title' id=\\\"uaa\\\">Terms & Conditions of Access</h2>\\n  <div>Before you have access to PharmaNet, you must read and accept the\\n    terms and conditions set out here.\\n  </div>\\n\\n  <div>\\n    <span class=\\\"has-float-label\\\" *ngFor=\\\"let item of accessAcceptances\\\">\\n      <h3><b>Section / Clause</b></h3>\\n      <textarea disabled value={{item.acceptanceClause}}></textarea>\\n      <input type=\\\"checkbox\\\" class=\\\"myCheckbox\\\" [(ngModel)]=\\\"item.isAccepted\\\">\\n    </span>\\n  </div>\\n\\n  <hr>\\n\\n  <h2 class='prime-title' id='declare'>Declaration</h2>\\n  <div>You must complete this declaration before you can proceed any further.</div>\\n  <div>\\n    <span class='has-float-label'>\\n      <textarea disabled value=\\\"\\\">I declare the information I provided is complete and accurate.</textarea>\\n      <input type=\\\"checkbox\\\" class=\\\"myCheckbox\\\" [(ngModel)]=\\\"isDeclareChecked\\\">\\n    </span>\\n  </div>\\n\\n</prime-page-framework>\\n\"","module.exports = \"textarea {\\n  background-color: lightgrey;\\n  width: 90%;\\n  height: 7em;\\n  vertical-align: middle;\\n  font-size: medium;\\n  padding: 0.5em; }\\n\\ninput[type=\\\"checkbox\\\"] {\\n  vertical-align: middle;\\n  position: relative;\\n  white-space: nowrap; }\\n\\n.myCheckbox {\\n  width: 22px;\\n  height: 22px;\\n  margin-left: 0.6em;\\n  margin-right: 0.6em; }\\n\\nhr {\\n  margin-left: 0;\\n  width: 90%;\\n  margin-top: 3rem; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { ApplicantAccessAcceptance} from './applicant-access-acceptance';\nimport {PrimeDataService} from '../../../../services/prime-data.service';\n\n@Component({\n  selector: 'prime-applicant-access-acceptance',\n  templateUrl: './applicant-access-acceptance.component.html',\n  styleUrls: ['./applicant-access-acceptance.component.scss']\n})\nexport class ApplicantAccessAcceptanceComponent implements OnInit {\n\n  isDeclareChecked: boolean = false;\n\n  accessAcceptances = [\n    new ApplicantAccessAcceptance('Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quam nihil quisquam officiis. Voluptates ad nisi possimus maxime voluptatum. Quis accusamus officiis rerum odit reiciendis saepe sapiente alias quisquam, dignissimos voluptatibus.', false),\n    new ApplicantAccessAcceptance('Officiis soluta, adipisci distinctio ipsum magni mollitia quasi quos fugit voluptatibus. Deleniti architecto, quasi placeat reiciendis, nostrum eos laudantium repellendus aspernatur, dicta consequuntur esse quas molestiae officiis laboriosam temporibus sed.', false),\n    new ApplicantAccessAcceptance('Nesciunt, inventore, qui molestiae repellendus corporis architecto culpa perspiciatis accusantium, hic eos sequi velit consectetur at quae. Labore, ratione minima! Quas sint facilis laboriosam eaque rerum amet deserunt reiciendis pariatur?', false)\n  ];\n\n  constructor(private dataService: PrimeDataService) { }\n\n  /** Each boolean is bound to a checkbox. Useful for validation. */\n  get allCheckboxes(): boolean[]{\n    return this.accessAcceptances\n      .map(item => item.isAccepted)\n      .concat(this.isDeclareChecked);\n  }\n\n  ngOnInit() {\n    this.loadDataFromApplicant();\n  }\n\n  get applicant() {\n    return this.dataService.user;\n  }\n\n\n  disableContinue() {\n    return !this.isDeclareChecked;\n    // return this.allCheckboxes.filter(item => item !== true).length >= 1;\n  }\n\n  save() {\n    this.applicant.accessAcceptance = this.accessAcceptances.map(x => x.isAccepted)\n    this.applicant.isDeclaredCheck = this.isDeclareChecked;\n  }\n\n\n  private loadDataFromApplicant() {\n    for (let i = 0; i < this.accessAcceptances.length; i++) {\n      const item = this.accessAcceptances[i];\n      item.isAccepted = this.applicant.accessAcceptance[i];\n    }\n    this.isDeclareChecked = this.applicant.isDeclaredCheck;\n  }\n\n}\n\n\n","export class ApplicantAccessAcceptance {\n  constructor(\n    public acceptanceClause: string,\n    public isAccepted: boolean){  }\n\n}\n","module.exports = \"<prime-applicant-breadcrumbs\\n  pageName=\\\"Contact\\\"\\n  previousPageLink=\\\"/applicant/dashboard\\\"\\n  nextPageLink=\\\"/applicant/professional\\\"\\n  [shouldDisableContinue]=\\\"!canContinue()\\\"\\n  (onSave)=\\\"onSave($event)\\\"\\n  (onCancel)=\\\"onCancel($event)\\\"\\n  [hasCompletedWizardFlag]=\\\"applicant._hasCompletedWizard\\\"\\n  [contactHasChanged]=\\\"hasChanged\\\">\\n</prime-applicant-breadcrumbs>\\n\\n<prime-page-framework>\\n\\n  <img class=\\\"photo pull-right\\\" src=\\\"assets/photoPlaceholder.png\\\" alt=\\\"Generic placeholder image\\\">\\n\\n  <h2 class='prime-title' id=\\\"regInfo\\\">Registration Information</h2>\\n  <div>Your Registration Information is the identity information from your ID\\n    document or as provided at Registration. You may not update this information here.\\n  </div>\\n\\n\\n  <form>\\n\\n    <div>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control input-readonly prime-input-large\\\" id=\\\"legalName\\\" name=\\\"legalName\\\" [ngModel]=\\\"applicant.legalName\\\" disabled>\\n        <span>Legal Name</span>\\n      </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"DoB\\\" name=\\\"DoB\\\" [ngModel]=\\\"applicant.dateOfBirth | date:'MMM. dd, yyyy'\\\" disabled>\\n        <span>Date of Birth</span>\\n      </label>\\n\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"address\\\" name=\\\"address\\\" [ngModel]=\\\"applicant.address?.street\\\" disabled>\\n        <span>Address</span>\\n      </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"city\\\" name=\\\"city\\\" [ngModel]=\\\"applicant.address?.city\\\" disabled>\\n        <span>City</span>\\n      </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"province\\\" name=\\\"province\\\" [ngModel]=\\\"applicant.address?.province\\\" disabled>\\n        <span>Province</span>\\n      </label>\\n\\n      <prime-postal-code [value]=\\\"applicant.address?.postal\\\"  disabled='true'></prime-postal-code>\\n\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"country\\\" name=\\\"country\\\" [ngModel]=\\\"applicant.address?.country\\\" disabled>\\n        <span>Country</span>\\n      </label>\\n\\n    </div>\\n  </form>\\n\\n\\n  <h2 class='prime-title' id=\\\"prefName\\\">Preferred Name (optional)</h2>\\n  <form>\\n    <div>\\n      <div class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"prefLastName\\\" name=\\\"prefLastName\\\" [ngModel]=\\\"applicant.preferLastName ? applicant.preferLastName : applicant.lastName\\\" (ngModelChange)=\\\"updatePrefLastName($event)\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n        <label for=\\\"prefLastName\\\">Preferred Last Name</label>\\n      </div>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"prefMiddleName\\\" name=\\\"prefMiddleName\\\" [ngModel]=\\\"applicant.preferMiddleName ? applicant.preferMiddleName : applicant.middleName\\\" (ngModelChange)=\\\"updatePrefMiddleName($event)\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n        <label for=\\\"prefMiddleName\\\">Preferred Middle Name</label>\\n      </div>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"prefFirstName\\\" name=\\\"prefFirstName\\\" [ngModel]=\\\"applicant.preferFirstName ? applicant.preferFirstName : applicant.firstName\\\" (ngModelChange)=\\\"updatePrefFirstName($event)\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n        <label for=\\\"prefFirstName\\\">Preferred First Name</label>\\n      </div>\\n\\n    </div>\\n\\n  </form>\\n\\n  <h2 class='prime-title' id='contactInfo'>Contact Information</h2>\\n\\n  <form>\\n    <div>\\n\\n      <label>\\n          I have an international (non-Canadian) phone-number\\n        <prime-toggle [(data)]=\\\"applicant.hasInternationalPhoneNumber\\\" (click) = \\\"onInternationalPhoneNumberChange()\\\"></prime-toggle>\\n      </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" [textMask]=\\\"{mask: getPhoneMask()}\\\" class=\\\"form-control prime-input-large\\\" id=\\\"phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"applicant.phone\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n        <span>Phone Number</span>\\n      </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"phoneExt\\\" name=\\\"phoneExt\\\" [(ngModel)]=\\\"applicant.phoneExtension\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n          <span>Extension Number (optional)</span>\\n        </label>\\n\\n      <label class=\\\"has-float-label\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"applicant.email\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n        <span>Email</span>\\n      </label>\\n    </div>\\n  </form>\\n\\n  <h2 class='prime-title' id=\\\"mailingAddr\\\">Mailing Address</h2>\\n\\n  <form>\\n    <label>\\n      Use the address from my Registration Information as my mailing address\\n      <prime-toggle [(data)]=\\\"applicant.useRegAddress\\\" (click) = \\\"onChange()\\\"></prime-toggle>\\n    </label>\\n\\n    <div>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input *ngIf = \\\"!applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"mailAdress\\\" name=\\\"mailAddress\\\" [(ngModel)]=\\\"applicant.mailAddress.street\\\" (input) = \\\"onChange()\\\"  placeholder=\\\" \\\">\\n        <input *ngIf = \\\"applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-large\\\" id=\\\"mailAdress\\\" name=\\\"mailAddress\\\" [ngModel]=\\\"applicant.address?.street\\\" (ngModelChange)=\\\"updateStreet($event)\\\"  placeholder=\\\" \\\">\\n        <label for=\\\"mailAdress\\\">Address</label>\\n      </div>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input *ngIf = \\\"!applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailCity\\\" name=\\\"mailCity\\\" [(ngModel)]=\\\"applicant.mailAddress.city\\\" (input) = \\\"onChange()\\\" placeholder=\\\" \\\">\\n        <input *ngIf = \\\"applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailCity\\\" name=\\\"mailCity\\\" [ngModel]=\\\"applicant.address?.city\\\" (ngModelChange)=\\\"updateCity($event)\\\" placeholder=\\\" \\\">\\n        <label for=\\\"mailCity\\\">City</label>\\n      </div>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input *ngIf = \\\"!applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailProvince\\\" name=\\\"mailProvince\\\" [(ngModel)]=\\\"applicant.mailAddress.province\\\" (input) = \\\"onChange()\\\" placeholder=\\\" \\\">\\n        <input *ngIf = \\\"applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailProvince\\\" name=\\\"mailProvince\\\" [ngModel]=\\\"applicant.address?.province\\\" (ngModelChange)=\\\"updateProvince($event)\\\" placeholder=\\\" \\\">\\n        <label for=\\\"mailProvince\\\">Province</label>\\n      </div>\\n\\n      <prime-postal-code *ngIf = \\\"!applicant.useRegAddress\\\" [(value)]=\\\"applicant.mailAddress.postal\\\" ></prime-postal-code>\\n\\n      <prime-postal-code *ngIf = \\\"applicant.useRegAddress\\\" [value]=\\\"applicant.address?.postal\\\" (valueChange)=\\\"updatePostal($event)\\\" ></prime-postal-code>\\n\\n      <div class=\\\"has-float-label\\\">\\n        <input *ngIf = \\\"!applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailCountry\\\" name=\\\"mailCountry\\\" [(ngModel)]=\\\"applicant.mailAddress.country\\\" (input) = \\\"onChange()\\\" placeholder=\\\" \\\">\\n        <input *ngIf = \\\"applicant.useRegAddress\\\" type=\\\"text\\\" class=\\\"form-control prime-input-medium\\\" id=\\\"mailCountry\\\" name=\\\"mailCountry\\\" [ngModel]=\\\"applicant.address?.country\\\" (ngModelChange)=\\\"updateCountry($event)\\\" placeholder=\\\" \\\">\\n        <label for=\\\"mailCountry\\\">Country</label>\\n      </div>\\n\\n    </div>\\n\\n  </form>\\n\\n</prime-page-framework>\\n\"","module.exports = \".photo {\\n  width: auto;\\n  height: 128px; }\\n\\n.z-top {\\n  position: relative;\\n  z-index: 10; }\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { DummyDataService } from '../../../../services/dummy-data.service';\nimport { Person } from '../../../../models/person.model';\nimport { cloneDeep } from 'lodash';\n\nconst NUMBER = /\\d/;\n\n@Component({\n  selector: 'prime-applicant-contact',\n  templateUrl: './applicant-contact.component.html',\n  styleUrls: ['./applicant-contact.component.scss']\n})\nexport class ApplicantContactComponent implements OnInit {\n\n  private _user: Person;\n\n  public hasChanged: boolean = false;\n  public hasEverChanged: boolean = false;\n\n  private phoneMask = ['(', NUMBER, NUMBER, NUMBER, ')', '-', NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n\n  constructor(private primeDataService: PrimeDataService) { }\n\n  ngOnInit() {\n    // Clone user class\n    this._user = cloneDeep(this.primeDataService.user);\n  }\n\n  get applicant(): Person {\n    return this._user;\n  }\n\n  canContinue(): boolean {\n    if (!this.hasEverChanged){\n      return true;\n    }\n\n    return this.hasChanged;\n  }\n\n  /**\n   * Toggle to show the fields to set the preferrred names\n   */\n  showPreferredNames() {\n    this.applicant.hasPreferName = !this.applicant.hasPreferName;\n  }\n\n  onChange() {\n    this.hasChanged = true;\n    this.hasEverChanged = true;\n  }\n\n  onInternationalPhoneNumberChange() {\n    this.applicant.phone = '';\n    this.applicant.phoneExtension = '';\n    this.onChange();\n  }\n\n  onCancel(val: boolean) {\n    this._user = cloneDeep(this.primeDataService.user);\n    this.hasChanged = false;\n  }\n\n  onSave(val: boolean){\n    // Use registration address as mailing address.\n    if ( this._user.useRegAddress ) {\n      this.primeDataService.user.mailAddress.copy(this._user.address);\n    } else {\n      this.primeDataService.user.mailAddress.copy(this._user.mailAddress);\n    }\n    this.primeDataService.user.useRegAddress = this._user.useRegAddress;\n\n    // Other updateable fields\n    this.primeDataService.user.phone = this._user.phone;\n    this.primeDataService.user.email = this._user.email;\n\n    // Preferred Name fields\n    if ( this._user.hasPreferName ) {\n      this.primeDataService.user.hasPreferName = this._user.hasPreferName;\n      this.primeDataService.user.preferFirstName = this._user.preferFirstName;\n      this.primeDataService.user.preferMiddleName = this._user.preferMiddleName;\n      this.primeDataService.user.preferLastName = this._user.preferLastName;\n    } else {\n      this.primeDataService.user.hasPreferName = this._user.hasPreferName;\n      this.primeDataService.user.preferFirstName = null;\n      this.primeDataService.user.preferMiddleName = null;\n      this.primeDataService.user.preferLastName = null;\n    }\n    this.hasChanged = false;\n  }\n\n\n\n  // Update mailAddress with information in the input field that the user is\n  // currently updating\n  updateStreet(event) {\n    this.copyRegAddress();\n    this._user.mailAddress.street = event;\n  }\n  updateProvince(event) {\n    this.copyRegAddress();\n    this._user.mailAddress.province = event;\n  }\n  updateCountry(event) {\n    this.copyRegAddress();\n    this._user.mailAddress.country = event;\n  }\n  updateCity(event) {\n    this.copyRegAddress();\n    this._user.mailAddress.city = event;\n  }\n  updatePostal(event) {\n    this.copyRegAddress();\n    this._user.mailAddress.postal = event;\n  }\n  updatePrefLastName(event) {\n    this._user.preferLastName = event;\n  }\n  updatePrefMiddleName(event) {\n    this._user.preferMiddleName = event;\n  }\n  updatePrefFirstName(event) {\n    this._user.preferFirstName = event;\n  }\n\n  getPhoneMask(): (RegExp | string )[] | false {\n    if (!this.applicant.hasInternationalPhoneNumber ){\n      // return  { mask: this.phoneMask };\n      return this.phoneMask;\n    }\n\n    //TODO: FINISH THIS OFF AND TEST THAT TOGGLING ACTUALLY WORKS\n    return false;\n  }\n\n\n  // Copy registration address into mailing\n  private copyRegAddress() {\n    if (this._user.mailAddress.isEmpty()) {\n      this._user.mailAddress.copy(this._user.address);\n    }\n    // Set useRegAddress to false as user is attempting to update\n    this._user.useRegAddress = false;\n  }\n}\n","module.exports = \"<prime-alert>\\n  System Notification: Server will be down for 2 hours maintenance at 14:30 PT.\\n</prime-alert>\\n\\n<section class='dashboard-cards row'>\\n  <div class=\\\"col-sm-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        Contact Information\\n        <a routerLink=\\\"/applicant/contact\\\">\\n          <i class=\\\"fa fa-edit fa-2x text-muted\\\"></i>\\n        </a>\\n      </div>\\n      <div class=\\\"card-body d-flex justify-content-between\\\">\\n        <div class=\\\"photocol\\\">\\n          <img class=\\\"photo\\\" src=\\\"assets/photoPlaceholder.png\\\" alt=\\\"Generic placeholder image\\\">\\n        </div>\\n        <div class=\\\"appcol\\\">\\n          <p>{{applicant.name}}</p>\\n          <p>{{applicant.phone}}</p>\\n          <p>{{applicant.email}}</p>\\n        </div>\\n\\n        <i class=\\\"fa fa-check-circle text-success fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        Professional Information\\n        <a routerLink=\\\"/applicant/professional\\\">\\n          <i class=\\\"fa fa-edit fa-2x text-muted\\\"></i>\\n        </a>\\n      </div>\\n      <div *ngIf=\\\"applicant.hasCollege || applicant.isWorkingOnBehalf\\\"\\n      class=\\\"card-body d-flex justify-content-between\\\">\\n\\n        <div>\\n          <ng-container *ngIf=\\\"applicant.hasCollege\\\">\\n            <p>{{collegeType}}</p>\\n            <p>Practitioner College ID: {{licenceNumber}}</p>\\n            <p>Registration Renewal Date: {{ licenceExpiryDate }}</p>\\n          </ng-container>\\n          <p *ngIf=\\\"applicant.isWorkingOnBehalf\\\">Job Title: {{jobTitle}}</p>\\n        </div>\\n\\n        <i class=\\\"fa fa-check-circle text-success fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-6 mt-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        Terms & Conditions of Access\\n        <a routerLink=\\\"/applicant/access-acceptance\\\">\\n          <i class=\\\"fa fa-edit fa-2x text-muted\\\"></i>\\n        </a>\\n      </div>\\n      <div class=\\\"card-body d-flex justify-content-between\\\">\\n        <p>Renewal Date: {{ renewalDate }}</p>\\n        <i *ngIf=\\\"!applicant.hasUAARequiringAttention()\\\" class=\\\"fa fa-check-circle text-success fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n        <i *ngIf=\\\"applicant.hasUAARequiringAttention()\\\" class=\\\"fa fa-exclamation-triangle text-warning fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 mt-4\\\">\\n    <div class=\\\"card {{ showPharmaNetAccessWarning() ? 'card-warning' : '' }}\\\">\\n      <div class=\\\"card-header d-flex justify-content-between\\\">\\n        <label *ngIf=\\\"showPharmaNetAccessWarning\\\">PharmaNet Access</label>\\n        <label *ngIf=\\\"!showPharmaNetAccessWarning\\\">Active Enrolment</label>\\n        <a routerLink=\\\"/applicant/pharma-net\\\">\\n          <i class=\\\"fa fa-edit fa-2x text-muted\\\"></i>\\n        </a>\\n      </div>\\n      <div class=\\\"card-body d-flex justify-content-between align-items-center\\\" *ngIf='!showPharmaNetAccessWarning(); else pharmaNetAccessWarning'>\\n        <div class=\\\"pharma-net-container\\\">\\n          <span class=\\\"pharma-net-fact\\\"><span class=\\\"circle-num\\\">{{ orgCount }}</span> Organization</span>\\n          <span class=\\\"pharma-net-fact\\\"><span class=\\\"circle-num\\\">{{ siteCount }}</span> Sites</span>\\n        </div>\\n\\n        <p class=\\\"text-success text-bold\\\" *ngIf='!hasHandledSites; else checkMark'>Enrolment Requested</p>\\n        <ng-template #checkMark>\\n          <p class=\\\"text-success text-bold\\\">Enrolment Active</p>\\n          <i class=\\\"fa fa-check-circle text-success fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n</section>\\n\\n<ng-template #emptySection>\\n  <div class=\\\"card-body bg-warning text-center d-flex flex-column align-items-center\\\">\\n    <p>Please Update Information</p>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #pharmaNetAccessWarning>\\n  <div class=\\\"card-body d-flex justify-content-between align-items-center\\\" >\\n    <div class=\\\"pharma-net-container\\\">\\n        <span class=\\\"pharma-net-fact\\\"><span class=\\\"circle-num circle-num-warning\\\">{{ sitesRequiringAttention }}</span> <span class='text-bold'> NEW</span> Sites need your attention</span>\\n      </div>\\n\\n      <i class=\\\"fa fa-exclamation-circle text-warning fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i>\\n      <!-- <i class=\\\"fa fa-check-circle text-success fa-3x pull-right\\\" aria-hidden=\\\"true\\\"></i> -->\\n\\n  </div>\\n</ng-template>\\n\"","module.exports = \".card {\\n  height: 100%; }\\n\\n.photocol {\\n  height: 70%;\\n  width: 25%; }\\n\\n.photo {\\n  width: 95%;\\n  height: 80%;\\n  max-width: 10em; }\\n\\n.appcol {\\n  width: 65%; }\\n\\n.circle-num {\\n  border: 3px solid #adb5bd;\\n  font-size: 18px;\\n  color: #6c757d;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  line-height: 40px;\\n  text-align: center;\\n  display: inline-block; }\\n\\n.circle-num-warning {\\n  border-color: #f3cd65;\\n  color: #f3cd65; }\\n\\n.pharma-net-fact {\\n  margin-right: 2em; }\\n\\n.text-bold {\\n  font-weight: bold; }\\n\\n.card-warning {\\n  background-color: #f9e4ac; }\\n\\n.card-warning .card-body {\\n    background-color: #fefbf3; }\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { Person } from '../../../../models/person.model';\nimport {ApplEnrollmentRowItem} from '../../components/appl-enrollment-row/appl-enrollment-row.component';\nimport {Router} from '@angular/router';\nimport {WorkingOnBehalfTitleTypes, CollegeHelper} from '../../../../models/colleges.enum';\nimport {moment} from 'ngx-bootstrap/chronos/test/chain';\nimport { environment } from 'environments/environment';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { Site } from '../../../../models/sites.model';\n\n\n@Component({\n  selector: 'prime-applicant-dashboard',\n  templateUrl: './applicant-dashboard.component.html',\n  styleUrls: ['./applicant-dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApplicantDashboardComponent implements OnInit {\n\n  private _dateFormat = 'MMM DD, YYYY';\n\n  constructor(private primeDataService: PrimeDataService,\n              private router: Router) {}\n\n  ngOnInit() {\n\n    // Redirect to contact page to be completed, if applicant is missing information\n\n    if (environment.skipRedirects){\n      return;\n    }\n\n    // Disabled redirects for now\n    // if (!this.contactDone) {\n    //   const link = '/applicant/contact';\n    //   this.router.navigate([link]);\n    // } else if (!this.professionalDone) {\n    //   const link = '/applicant/professional';\n    //   this.router.navigate([link]);\n    // //} else if (!this.accessAcceptanceDone) {\n    // //  const link = '/applicant/access-acceptance';\n    // //  this.router.navigate([link]);\n    // }\n  }\n\n  get applicant(): Person {\n    return this.primeDataService.user;\n  }\n\n  /**\n   * List of enrollments for the user\n   * @returns {ApplEnrollmentRowItem[]}\n   */\n  get userSiteEnrollmentData(): ApplEnrollmentRowItem[] {\n    // functions creates a copy of data - uses map functionality\n    return this.primeDataService.getUserSiteEnrollment();\n  }\n\n  get contactDone(): boolean {\n    return this.applicant.hasContactInfo;\n  }\n\n  get professionalDone(): boolean {\n    if (this.applicant.hasCollege && this.applicant.isWorkingOnBehalf ) {\n      return false;\n    }\n    return this.applicant.hasCollege || this.applicant.isWorkingOnBehalf;\n  }\n\n  get accessAcceptanceDone(): boolean {\n    return !!this.applicant.accessAcceptance;\n  }\n\n  get collegeType(): string {\n    const college = CollegeHelper.getFullCollegeNameFromString(this.applicant.collegeCertificationList[0].collegeType);\n\n    return college ? college : 'n/a';\n  }\n\n  get licenceNumber(): string {\n    const licence = this.applicant.collegeCertificationList[0].licenceNumber;\n    return licence ? 'n/a' : licence;\n  }\n\n  get licenceExpiryDate(): string {\n    const expiryDate = this.applicant.collegeCertificationList[0].licenceExpiryDate;\n    return expiryDate ? 'n/a' : moment( expiryDate ).format( this._dateFormat );\n  }\n\n  get jobTitle(): string {\n    const obj = Object.keys( WorkingOnBehalfTitleTypes ).filter(x => x === this.applicant.workingOnBehalfList[0].jobTitle );\n    return (obj.length > 0) ? WorkingOnBehalfTitleTypes[obj[0]] : 'n/a';\n  }\n\n  get renewalDate(): string {\n    return this.applicant.renewalDate ? 'n/a' : moment( this.applicant.renewalDate ).format( this._dateFormat );\n  }\n\n  showPharmaNetAccessWarning(): boolean {\n    return this.sitesRequiringAttention >= 1;\n  }\n\n  get orgCount(): number {\n    return this.applicant.allOrganizations().length;\n  }\n\n  get siteCount(): number {\n    return this.getAllSites().filter(site => site.siteAccess[0].status !== null).length;\n  }\n\n  get sitesRequiringAttention(): number {\n    return this.getAllSites().filter(site => site.siteAccess[0].status === EnrollmentStatus.New).length;\n  }\n\n  // Enrollment is requested when the user \n  // TODO rename? think it's opposite of what it is now\n  get hasHandledSites(): boolean {\n    const handledSites = this.getAllSites().filter(site => {\n      const sa = site.siteAccess.find(sa => sa.person.objectId === this.applicant.objectId);\n      return sa.status === EnrollmentStatus.Active || sa.status === EnrollmentStatus.Declined;\n    })\n    return handledSites.length > 0;\n  }\n\n  private getAllSites(): Site[] {\n    if (!this.applicant.allOrganizations().length) return [];\n\n    return this.applicant.allOrganizations()\n      .map(orgs => orgs.members) // get all sites\n      .reduce( (a, b) => a.concat(b)) // concat into single array get # of sites\n  }\n  \n}\n","module.exports = \"<prime-applicant-breadcrumbs\\n  pageName=\\\"Professional\\\"\\n  nextPageLink=\\\"/applicant/pharma-net\\\"\\n  previousPageLink=\\\"/applicant/contact\\\"\\n  (onSave)=\\\"onSave($event)\\\"\\n  [shouldDisableContinue]='displayCannotContinueErrors()'>\\n</prime-applicant-breadcrumbs>\\n\\n<prime-page-framework>\\n\\n  <h2 class='prime-title' id=\\\"profInfo\\\">Professional Information</h2>\\n  <div>Your professional information is used to assign you to a user class,\\n    which helps determine the PharmaNet access privileges you will receive.\\n  </div>\\n\\n  <section class='my-3'>\\n    <label>\\n      <div>Are you a regulated health care professional?</div>\\n      <prime-toggle [(data)]=\\\"applicant.hasCollege\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </label>\\n\\n    <ng-container *ngIf=\\\"applicant.hasCollege === true\\\">\\n      <div class='applicant-row border p-3' *ngFor=\\\"let collegeCertificationRecord of applicant.collegeCertificationList; let i = index\\\">\\n\\n          <div class=\\\"applicant-row--item prime-input-large\\\">\\n            <label class=\\\"has-float-label\\\">\\n              <select id=\\\"collegeTypesType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"collegeCertificationRecord.collegeType\\\" (input)=\\\"onChange()\\\">\\n                <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n                <option *ngFor=\\\"let type of CollegeTypes\\\" value=\\\"{{type}}\\\">\\n                    {{ getFullCollegeName(type) }}\\n                </option>\\n              </select>\\n              <span>College Registration</span>\\n            </label>\\n\\n          </div>\\n          <ng-container *ngIf=\\\"applicant.collegeCertificationList[i].collegeType !== 'pleaseSelect'\\\">\\n            <div class=\\\"applicant-row--item prime-input-medium\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <input type=\\\"text\\\" name=\\\"collegeNumber\\\" id=\\\"collegeNumber\\\" [value]=\\\"collegeCurrValue(applicant.collegeCertificationList[i].collegeType)\\\"\\n                  class=\\\"form-control\\\" disabled>\\n                <span>College Number</span>\\n              </label>\\n            </div>\\n            <div class=\\\"applicant-row--item prime-input-medium\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <input type=\\\"text\\\" name=\\\"licenceNumber\\\" id=\\\"licenceNumber\\\" [(ngModel)]=\\\"collegeCertificationRecord.licenceNumber\\\" maxlength=\\\"{{maxLengthValue('LICENCE_NUMBER')}}\\\"\\n                  class=\\\"form-control\\\" (input)=\\\"onChange()\\\" placeholder=\\\" \\\">\\n                <span>Practitioner College ID</span>\\n              </label>\\n            </div>\\n            <div *ngIf=\\\"applicant.collegeCertificationList[i].collegeType === 'CPBC'\\\" class=\\\"applicant-row--item prime-input-large\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <select id=\\\"licenceClassCP\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"collegeCertificationRecord.licenceClassCPType\\\"\\n                  (input)=\\\"onChange()\\\">\\n                  <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n                  <option *ngFor=\\\"let type of LicenceClassCPTypes\\\" value=\\\"{{type}}\\\">\\n                    {{licenceClassCPValue(type)}}\\n                  </option>\\n                </select>\\n                <span>Licence Class</span>\\n              </label>\\n            </div>\\n            <div *ngIf=\\\"applicant.collegeCertificationList[i].collegeType === 'CRNBC'\\\" class=\\\"applicant-row--item prime-input-large\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <select id=\\\"licenceClassCRN\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"collegeCertificationRecord.licenceClassCRNType\\\"\\n                  (input)=\\\"onChange()\\\">\\n                  <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n                  <option *ngFor=\\\"let type of LicenceClassCRNTypes\\\" value=\\\"{{type}}\\\">\\n                    {{licenceClassCRNValue(type)}}\\n                  </option>\\n                </select>\\n                <span>Licence Class</span>\\n              </label>\\n            </div>\\n            <div *ngIf=\\\"applicant.collegeCertificationList[i].collegeType === 'CPSBC'\\\" class=\\\"applicant-row--item prime-input-large\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <select id=\\\"licenceClassCPS\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"collegeCertificationRecord.licenceClassCPSType\\\" (input)=\\\"onChange()\\\">\\n                  <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n                  <option *ngFor=\\\"let type of LicenceClassCPSTypes\\\" value=\\\"{{type}}\\\">\\n                    {{licenceClassCPSValue(type)}}\\n                  </option>\\n                </select>\\n                <span>Licence Class</span>\\n              </label>\\n            </div>\\n            <div class=\\\"applicant-row--item prime-input-large\\\">\\n\\n              <prime-datepicker dateFormat=\\\"mmm. dd, yyyy\\\" [(date)]=\\\"collegeCertificationRecord.licenceExpiryDate\\\" labelText=\\\"College Registration Renewal Date\\\"></prime-datepicker>\\n            </div>\\n            <div *ngIf=\\\"applicant.collegeCertificationList[i].collegeType === 'CRNBC'\\\" class=\\\"applicant-row--item prime-input-large\\\">\\n              <label class=\\\"has-float-label\\\">\\n                <select id=\\\"advancedPracticeCertification\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"collegeCertificationRecord.advancedPracticeCertificationType\\\"\\n                  (input)=\\\"onChange()\\\">\\n                  <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n                  <option *ngFor=\\\"let type of AdvancedPracticeCertificationTypes\\\" value=\\\"{{type}}\\\">\\n                    {{advancedPracticeCertificationValue(type)}}\\n                  </option>\\n                </select>\\n                <span>Advanced Practice Certification</span>\\n              </label>\\n            </div>\\n          </ng-container>\\n\\n\\n        <!-- Buttons -->\\n        <span class='d-flex align-items-center ml-auto'>\\n          <ng-container *ngIf=\\\"i > 0\\\">\\n            <a class='mx-1' (click)=\\\"deleteCollegeCertification(i)\\\">\\n              <i class=\\\"fa fa-times-circle fa-2x\\\" aria-label=\\\"Delete\\\"></i>\\n            </a>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"collegeCertificationValid(i)\\n          && i === applicant.collegeCertificationList.length - 1\\\">\\n            <a class='mx-1' (click)=\\\"addCollegeCertification()\\\">\\n              <i class=\\\"fa fa-plus-circle fa-2x\\\" aria-label=\\\"Add\\\"></i>\\n            </a>\\n          </ng-container>\\n        </span>\\n      </div>\\n    </ng-container>\\n  </section>\\n\\n\\n  <section *ngIf=\\\"displayDeviceProviderSection()\\\" class='my-3'>\\n\\n    <label>\\n      <div>Are you a Device Provider?</div>\\n      <div>A Device Provider is enroled in the device provider class, and associated sub-classes, under the Pharmaceutical Services Act, Provider Regulation.</div>\\n      <prime-toggle [(data)]=\\\"applicant.isDeviceProvider\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </label>\\n\\n    <ng-container *ngIf=\\\"applicant.isDeviceProvider === true\\\">\\n      <div class='d-flex justify-content-between border p-3'>\\n          <label class=\\\"has-float-label prime-input-large\\\">\\n            <input type=\\\"text\\\" name=\\\"deviceProviderNumber\\\" id=\\\"deviceProviderNumber\\\" placeholder=\\\" \\\"\\n                   [(ngModel)]=\\\" applicant.deviceProviderNumber\\\" maxlength=\\\"{{maxLengthValue('DEVICE_PROVIDER_NUMBER')}}\\\"\\n              class=\\\"form-control\\\" (input)=\\\"onChange()\\\">\\n            <span>Device Provider Number</span>\\n          </label>\\n      </div>\\n    </ng-container>\\n  </section>\\n\\n\\n  <div *ngIf=\\\"displayWorkingOnBehalfSection()\\\" class='my-3'>\\n\\n    <label>\\n      <div>Are you accessing PharmaNet on behalf of a regulated health care professional or a Device Provider?</div>\\n      <prime-toggle [(data)]=\\\"applicant.isWorkingOnBehalf\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </label>\\n\\n    <ng-container *ngIf=\\\"applicant.isWorkingOnBehalf === true\\\">\\n      <div class='applicant-row border p-3' *ngFor=\\\"let workingOnBehalfRecord of applicant.workingOnBehalfList; let i = index\\\">\\n        <div class=\\\"applicant-row--item prime-input-large\\\">\\n          <label class=\\\"has-float-label\\\">\\n            <select id=\\\"workingOnBehalfTitle\\\" class=\\\"form-control row-dropbox-20\\\" [(ngModel)]=\\\"workingOnBehalfRecord.jobTitle\\\" (input)=\\\"onChange()\\\">\\n              <option value=\\\"pleaseSelect\\\" disabled selected>Select</option>\\n              <option *ngFor=\\\"let type of WorkingOnBehalfTitleTypes\\\" value=\\\"{{type}}\\\">\\n                {{workingOnBehalfTitleValue(type)}}\\n              </option>\\n            </select>\\n            <span>Job Title</span>\\n          </label>\\n        </div>\\n\\n        <div class=\\\"applicant-row--item\\\" *ngIf=\\\"applicant.workingOnBehalfList[0].jobTitle === 'OTHER'\\\">\\n            <label class=\\\"has-float-label\\\">\\n              <input type=\\\"text\\\" class='prime-input-large' placeholder=\\\" \\\" [(ngModel)]=\\\"applicant.workingOnBehalfOtherReason\\\"/>\\n              <span>On-Behalf-of User Job Title</span>\\n            </label>\\n        </div>\\n\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n\\n  <section *ngIf=\\\"displaySelfDeclarationSection()\\\">\\n\\n    <h2 class='prime-title' id=\\\"selfDeclaration\\\">Self Declaration  Professional History</h2>\\n    <div>The information you provide here will determine whether or not a manual review is required. Upload any supporting documents as needed.</div>\\n    <hr>\\n\\n    <div class='my-3'>\\n      <div>Have you ever been the subject of an order or a conviction for an information contravention?</div>\\n      <prime-toggle [(data)]=\\\"applicant.informationContravention.flag\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </div>\\n    <div *ngIf=\\\"applicant.informationContravention.flag\\\">\\n      <label class=\\\"has-float-label\\\">\\n        <span>Please provide details</span>\\n        <textarea class=\\\"selfDeclarationTextArea\\\" name=\\\"informationContraventionDetail\\\" id=\\\"informationContraventionDetail\\\" [(ngModel)]=\\\"applicant.informationContravention.detail\\\"\\n          (input)=\\\"onChange()\\\"></textarea>\\n      </label>\\n    </div>\\n\\n    <div class='my-3'>\\n      <div>\\n        Have you ever had your registration with a governing body of a health profession suspended or cancelled?\\n      </div>\\n      <prime-toggle [(data)]=\\\"applicant.cancelledRegistration.flag\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </div>\\n    <div *ngIf=\\\"applicant.cancelledRegistration.flag\\\">\\n      <label class=\\\"has-float-label\\\">\\n        <span>Please provide details</span>\\n        <textarea class=\\\"selfDeclarationTextArea\\\" name=\\\"cancelledRegistrationDetail\\\" id=\\\"cancelledRegistrationDetail\\\" [(ngModel)]=\\\"applicant.cancelledRegistration.detail\\\"\\n          (input)=\\\"onChange()\\\"></textarea>\\n      </label>\\n    </div>\\n\\n    <div class='my-3'>\\n      <div>\\n        Have you ever had Limits and Conditions imposed on your licence as a result of disciplinary actions taken by the governing body of a Health Profession?\\n      </div>\\n      <prime-toggle [(data)]=\\\"applicant.licenceCondition.flag\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n\\n    </div>\\n    <div *ngIf=\\\"applicant.licenceCondition.flag\\\">\\n\\n      <label class=\\\"has-float-label\\\">\\n        <span>Please provide details</span>\\n        <textarea class=\\\"selfDeclarationTextArea\\\" name=\\\"licenceConditionDetail\\\" id=\\\"licenceConditionDetail\\\"\\n          [(ngModel)]=\\\"applicant.licenceCondition.detail\\\" (input)=\\\"onChange()\\\"></textarea>\\n      </label>\\n\\n\\n    </div>\\n\\n    <div class='my-3'>\\n      <div>\\n        Have you ever had your access to PharmaNet suspended or revoked?\\n      </div>\\n      <prime-toggle [(data)]=\\\"applicant.revokedAccess.flag\\\" (click)=\\\"onChange()\\\"></prime-toggle>\\n    </div>\\n    <div *ngIf=\\\"applicant.revokedAccess.flag\\\">\\n\\n      <label class=\\\"has-float-label\\\">\\n        <span>Please provide details</span>\\n        <textarea class=\\\"selfDeclarationTextArea\\\" name=\\\"revokedAccessDetail\\\" id=\\\"revokedAccessDetail\\\"\\n          [(ngModel)]=\\\"applicant.revokedAccess.detail\\\" (input)=\\\"onChange()\\\"></textarea>\\n      </label>\\n\\n\\n    </div>\\n\\n  </section>\\n\\n  <section *ngIf=\\\"displayCannotContinueErrors()\\\">\\n    <h2 class='text-danger'>The selections you have made above make you ineligible to continue.</h2>\\n  </section>\\n\\n\\n  <div right>\\n    <div *ngIf=\\\"displayUploadSection()\\\">\\n      <div class=\\\"d-flex justify-content-start align-items-center\\\">\\n        <i class=\\\"fa fa-upload fa-2x mx-2\\\" aria-label=\\\"Delete\\\"></i>\\n        <h2>Upload your documents</h2>\\n      </div>\\n      <span class=\\\"note\\\">Scan the document, or take a photo of it. Make sure that it's:</span>\\n      <ul class=\\\"note\\\">\\n        <li>The entire document, from corner to corner</li>\\n        <li>At least 1000 pixels wide x 1500 pixels tall</li>\\n        <li>Rotated correctly (not upside down or sideways)</li>\\n        <li>In focus and easy to read</li>\\n        <li>A JPG, PNG, GIF or BMP file (\\n          <b>not a PDF</b>)</li>\\n      </ul>\\n      <prime-file-uploader>\\n        <span class=\\\"note\\\">Please upload required supporting  documents</span>\\n      </prime-file-uploader>\\n    </div>\\n  </div>\\n\\n\\n</prime-page-framework>\\n\"","module.exports = \".selfDeclarationTextArea {\\n  width: 100%;\\n  height: 75px; }\\n\\n.note {\\n  color: #252525;\\n  font-size: 85%; }\\n\\n.fa-plus-circle {\\n  color: green; }\\n\\n.fa-times-circle {\\n  color: red; }\\n\\n.fa-upload {\\n  color: #036; }\\n\\n.with-top-margin {\\n  margin-top: 10px; }\\n\\n.applicant-row {\\n  display: flex;\\n  flex-flow: row wrap; }\\n\\n.applicant-row > .applicant-row--item {\\n    margin: 0.5em 1em; }\\n\\n@media (max-width: 767.98px) {\\n      .applicant-row > .applicant-row--item {\\n        flex-basis: 100%; } }\\n\\n@media (min-width: 768px) {\\n    .applicant-row > .applicant-row--dropdown {\\n      flex-basis: 30%; } }\\n\\n.sameLevel {\\n  position: relative;\\n  top: 500px;\\n  background-color: yellow; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { DummyDataService } from '../../../../services/dummy-data.service';\nimport { Person } from '../../../../models/person.model';\nimport { cloneDeep } from 'lodash';\nimport { CollegeTypes,\n  LicenceClassCPTypes,\n  LicenceClassCRNTypes,\n  LicenceClassCPSTypes,\n  AdvancedPracticeCertificationTypes,\n  WorkingOnBehalfTitleTypes,\n  MaxLengthTypes,\n  CollegeHelper} from '../../../../models/colleges.enum';\n\n@Component({\n  selector: 'prime-applicant-professional',\n  templateUrl: './applicant-professional.component.html',\n  styleUrls: ['./applicant-professional.component.scss']\n})\nexport class ApplicantProfessionalComponent implements OnInit {\n  private _user: Person;\n\n  public workingOnBehalfTotal = 0;\n\n  public hasChanged: boolean = false;\n\n  constructor(private primeDataService: PrimeDataService) { }\n\n  ngOnInit() {\n\n    // Clone user clas\n    this._user = cloneDeep(this.primeDataService.user);\n\n    this.workingOnBehalfTotal = this._user.workingOnBehalfList.length - 1;\n  }\n\n  get applicant(): Person {\n    return this._user;\n  }\n\n  //\n  // Record related\n  //\n\n  addCollegeCertification() {\n    this._user.collegeCertificationList.push({\n      collegeType: 'pleaseSelect',\n      licenceNumber: '',\n      licenceClassCPType: 'pleaseSelect',\n      licenceClassCRNType: 'pleaseSelect',\n      licenceClassCPSType: 'pleaseSelect',\n      licenceExpiryDate: null,\n      advancedPracticeCertificationType: 'pleaseSelect'\n    });\n\n    this.onChange();\n  }\n\n  deleteCollegeCertification(i){\n    console.log(`delete index ${i}`, this._user.collegeCertificationList);\n    this._user.collegeCertificationList.splice(i, 1);\n\n    this.onChange();\n  }\n\n  // addWorkingOnBehalf() {\n  //   if(this.workingOnBehalfTotal < this.WorkingOnBehalfTitleTypesCount() - 1) {\n  //     this._user.workingOnBehalfList.push({ jobTitle: 'pleaseSelect' });\n  //     this.workingOnBehalfTotal++;\n\n  //     this.onChange();\n  //   }\n  // }\n\n  // deleteWorkingOnBehalf(i){\n  //   console.log(`delete index ${i}`, this._user.workingOnBehalfList);\n  //   this._user.workingOnBehalfList.splice(i, 1);\n  //   this.workingOnBehalfTotal--;\n\n  //   this.onChange();\n  // }\n\n  onChange() {\n    this.hasChanged = true;\n  }\n\n  onSave(val: boolean){\n    // toggles\n    this.primeDataService.user.hasCollege        = this._user.hasCollege;\n    this.primeDataService.user.isDeviceProvider  = this._user.isDeviceProvider;\n    this.primeDataService.user.isWorkingOnBehalf = this._user.isWorkingOnBehalf;\n\n    // toggle related arrays\n    this.primeDataService.user.collegeCertificationList = cloneDeep(this._user.collegeCertificationList);\n    this.primeDataService.user.deviceProviderNumber       = cloneDeep(this._user.deviceProviderNumber);\n    this.primeDataService.user.workingOnBehalfList      = cloneDeep(this._user.workingOnBehalfList);\n\n    // Self declaration related\n    this.primeDataService.user.informationContravention = cloneDeep(this._user.informationContravention);\n    this.primeDataService.user.cancelledRegistration    = cloneDeep(this._user.cancelledRegistration);\n    this.primeDataService.user.licenceCondition         = cloneDeep(this._user.licenceCondition);\n    this.primeDataService.user.revokedAccess            = cloneDeep(this._user.revokedAccess);\n\n    this.hasChanged = false;\n  }\n\n  onCancel(val: boolean){\n    // toggles\n    this._user.hasCollege        = this.primeDataService.user.hasCollege;\n    this._user.isDeviceProvider  = this.primeDataService.user.isDeviceProvider;\n    this._user.isWorkingOnBehalf = this.primeDataService.user.isWorkingOnBehalf;\n\n    // toggle related arrays\n    this._user.collegeCertificationList = cloneDeep(this.primeDataService.user.collegeCertificationList);\n    this._user.deviceProviderNumber       = cloneDeep(this.primeDataService.user.deviceProviderNumber);\n    this._user.workingOnBehalfList      = cloneDeep(this.primeDataService.user.workingOnBehalfList);\n\n    // Self declaration related\n    this._user.informationContravention = cloneDeep(this.primeDataService.user.informationContravention);\n    this._user.cancelledRegistration    = cloneDeep(this.primeDataService.user.cancelledRegistration);\n    this._user.licenceCondition         = cloneDeep(this.primeDataService.user.licenceCondition);\n    this._user.revokedAccess            = cloneDeep(this.primeDataService.user.revokedAccess);\n\n    this.hasChanged = false;\n  }\n\n  //\n  // Enum related\n  //\n\n  // Make enum accessible to template\n  get CollegeTypes() {\n    return Object.keys(CollegeTypes);\n  }\n\n  // Make enum accessible to template\n  get LicenceClassCPTypes() {\n    return Object.keys(LicenceClassCPTypes);\n  }\n\n  // Make enum accessible to template\n  get LicenceClassCRNTypes() {\n    return Object.keys(LicenceClassCRNTypes);\n  }\n\n  // Make enum accessible to template\n  get LicenceClassCPSTypes() {\n    return Object.keys(LicenceClassCPSTypes);\n  }\n\n  // Make enum accessible to template\n  get AdvancedPracticeCertificationTypes() {\n    return Object.keys(AdvancedPracticeCertificationTypes);\n  }\n\n  // Make enum accessible to template\n  get WorkingOnBehalfTitleTypes() {\n    return Object.keys(WorkingOnBehalfTitleTypes);\n  }\n\n  WorkingOnBehalfTitleTypesCount() {\n    return Object.keys(WorkingOnBehalfTitleTypes).length;\n  }\n\n  collegeCurrValue(selection) {\n    return CollegeTypes[selection];\n  }\n\n  licenceClassCPValue(selection) {\n    return LicenceClassCPTypes[selection];\n  }\n\n  licenceClassCRNValue(selection) {\n    return LicenceClassCRNTypes[selection];\n  }\n\n  licenceClassCPSValue(selection) {\n    return LicenceClassCPSTypes[selection];\n  }\n\n  advancedPracticeCertificationValue(selection) {\n    return AdvancedPracticeCertificationTypes[selection];\n  }\n\n  workingOnBehalfTitleValue(selection) {\n    return WorkingOnBehalfTitleTypes[selection];\n  }\n\n  maxLengthValue(selection) {\n    return MaxLengthTypes[selection];\n  }\n\n  //\n  // Conditional layout related\n  //\n\n  collegeCertificationValid(i) {\n    if(  this._user.collegeCertificationList[i].collegeType !== 'pleaseSelect'\n      && this._user.collegeCertificationList[i].licenceNumber.length\n      && this._user.collegeCertificationList[i].licenceExpiryDate !== null\n      && this._user.collegeCertificationList[i].licenceExpiryDate.valueOf() > 0\n      && ((  this._user.collegeCertificationList[i].collegeType === 'CPBC'\n          && this._user.collegeCertificationList[i].licenceClassCPType !== 'pleaseSelect')\n        || ( this._user.collegeCertificationList[i].collegeType === 'CRNBC'\n          && this._user.collegeCertificationList[i].licenceClassCRNType !== 'pleaseSelect'\n          && this._user.collegeCertificationList[i].advancedPracticeCertificationType !== 'pleaseSelect')\n        || ( this._user.collegeCertificationList[i].collegeType === 'CPSBC'\n          && this._user.collegeCertificationList[i].licenceClassCPSType !== 'pleaseSelect'))) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  displayDeviceProviderSection() {\n    if (this.collegeCertificationValid(0) && this._user.collegeCertificationList[0].collegeType === 'CPBC') {\n      return true;\n    }\n    else if (this.applicant.hasCollege === false) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  //FIXME: SHOULD only display if previous two sections are No. Currently it shows REGARDLESS of what the users answer is.\n  displayWorkingOnBehalfSection() {\n    /*if (this.displayDeviceProviderSection()){\n      return this._user.isDeviceProvider === false;\n    }\n    else if (this.collegeCertificationValid(0)) {\n      return this._user.collegeCertificationList[0].collegeType !== 'CPBC';\n    }\n    else if (this.applicant.hasCollege === false){\n      return true;\n    }*/\n    if (this.applicant.hasCollege === false && this.applicant.isDeviceProvider === false){\n      return true;\n    } else {\n      return false;\n    };\n  }\n\n  displaySelfDeclarationSection() {\n\n   /* if (this._user.hasCollege === false && this._user.isWorkingOnBehalf === false){\n      return false;\n    }\n\n    if (this._user.hasCollege === true) {\n      return true;\n    }\n\n    // User has filled out 'on behalf' section\n    if (this.displayWorkingOnBehalfSection() && this._user.workingOnBehalfList[0].jobTitle !== 'pleaseSelect' && this._user.workingOnBehalfList[0].jobTitle !== 'OTHER'){\n      return true;\n    }\n\n    // If the user has filled out the 'Other' reason\n    if (this._user.workingOnBehalfOtherReason && this._user.workingOnBehalfList.length){\n      return true;\n    }\n\n    // User has filled out device provider\n    else if (this.displayDeviceProviderSection() && this._user.deviceProviderNumber) {\n      return true;\n    }*/\n    // User has said 'no' to each section\n    // else if (this.displayDeviceProviderSection() && this.displayWorkingOnBehalfSection() && this._user.isWorkingOnBehalf === false) {\n    //   return true;\n    // }\n\n    return true;\n  }\n\n  displayCannotContinueErrors(){\n    if (this._user.isDeviceProvider){\n      return false;\n    }\n\n    return this._user.hasCollege === false && this._user.isWorkingOnBehalf === false;\n  }\n\n  getFullCollegeName(name: string){\n    return CollegeHelper.getFullCollegeNameFromString(name);\n  }\n\n  displayUploadSection() {\n    if(  this._user.informationContravention.flag\n      || this._user.cancelledRegistration.flag\n      || this._user.licenceCondition.flag\n      || this._user.revokedAccess.flag) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}\n","module.exports = \"<prime-applicant-breadcrumbs pageName=\\\"Review & Submit\\\" previousPageLink=\\\"/applicant/access-acceptance\\\" nextPageLink=\\\"/applicant/dashboard\\\"\\n  [shouldDisableContinue]=\\\"false\\\" [isButtonSubmitting]='true' (onSetHasCompletedWizardFlag)=\\\"onSetHasCompletedWizardFlag($event)\\\">\\n</prime-applicant-breadcrumbs>\\n\\n<prime-page-framework>\\n\\n  <h2 class='prime-title' id=\\\"review-and-submit\\\">Review &amp; Submit</h2>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n\\n\\n      <h2 class='prime-title'>Contact Information\\n        <i class=\\\"fa fa-pencil float-right pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"goToContactPage()\\\"></i>\\n      </h2>\\n      <section class=\\\"bg-light\\\">\\n\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Name</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.name}}</div>\\n        </div>\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Date of Birth</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.dateOfBirth | date: 'MMM. dd, yyyy'}}</div>\\n        </div>\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Phone Number</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.phone}}</div>\\n        </div>\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Extension Number</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.phoneExtension}}</div>\\n        </div>\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Email</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.email}}</div>\\n        </div>\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-6\\\">Address</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.address?.fullAddress}}</div>\\n        </div>\\n\\n      </section>\\n\\n      <h2 class='prime-title'>Professional Information\\n        <i class=\\\"fa fa-pencil float-right pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"goToProfessionalPage()\\\"></i>\\n      </h2>\\n\\n      <section class=\\\"bg-light\\\">\\n\\n        <ng-container *ngIf=\\\"applicant.hasCollege\\\">\\n          <div class=\\\"row p-md-1\\\">\\n            <div class=\\\"col-md-6\\\">College Type</div>\\n            <div class=\\\"col-md-6 font-weight-bold\\\">{{collegeType}}</div>\\n          </div>\\n          <div class=\\\"row p-md-1\\\">\\n            <div class=\\\"col-md-6\\\">Licence Class</div>\\n            <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.getLicenceClassByIndex()}}</div>\\n          </div>\\n          <div class=\\\"row p-md-1\\\">\\n            <div class=\\\"col-md-6\\\">Licence Number</div>\\n            <div class=\\\"col-md-6 font-weight-bold\\\">{{applicant.collegeCertificationList[0].licenceNumber}}</div>\\n          </div>\\n\\n          <div class=\\\"row p-md-1\\\">\\n            <div class=\\\"col-md-6\\\">Licence Expiry Date</div>\\n            <div class=\\\"col-md-6 font-weight-bold\\\">{{licenceExpiryDate | date: 'MMM. dd, yyyy'}}</div>\\n          </div>\\n        </ng-container>\\n\\n\\n        <div class=\\\"row p-md-1\\\" *ngIf=\\\"applicant.isWorkingOnBehalf\\\">\\n          <div class=\\\"col-md-6\\\">Job Title</div>\\n          <div class=\\\"col-md-6 font-weight-bold\\\">{{jobTitle}}</div>\\n        </div>\\n\\n      </section>\\n\\n\\n      <h2 class='prime-title'>PharmaNet Access\\n        <i class=\\\"fa fa-pencil float-right pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"goToPharmaNetPage()\\\"></i>\\n      </h2>\\n\\n      <section class=\\\"bg-light\\\">\\n\\n          <div class=\\\"row p-md-1\\\" *ngFor='let org of applicant.allOrganizations(); let i = index'>\\n            <div class=\\\"col-md-6\\\">PharmaNet Organization {{ i + 1 }}</div>\\n            <div class=\\\"col-md-6 font-weight-bold\\\">{{org.title}}</div>\\n          </div>\\n\\n      </section>\\n\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n\\n\\n\\n\\n\\n      <h2 class='prime-title'>Self Declaration\\n        <i class=\\\"fa fa-pencil float-right pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"goToProfessionalPage()\\\"></i>\\n      </h2>\\n\\n      <section class=\\\"bg-light\\\">\\n\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-8\\\">Have you ever been the subject of an order or a conviction for an information contravention?</div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ getSelfDeclarationAnswer(applicant.informationContravention.flag) }}</div>\\n        </div>\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-8\\\">Have you ever had your registration with a governing body of a health profession suspended or cancelled?</div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ getSelfDeclarationAnswer(applicant.cancelledRegistration.flag) }}</div>\\n        </div>\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-8\\\">Have you ever had Terms and Conditions imposed on your licence as a result of disciplinary actions taken by a governing\\n            body?\\n          </div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ getSelfDeclarationAnswer(applicant.licenceCondition.flag) }} </div>\\n        </div>\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-8\\\">Have you ever had your access to PharmaNet suspended or revoked?</div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ getSelfDeclarationAnswer(applicant.revokedAccess.flag) }}</div>\\n        </div>\\n\\n      </section>\\n\\n      <h2 class='prime-title'>Terms & Conditions of Access\\n        <i class=\\\"fa fa-pencil float-right pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"goToUAAPage()\\\"></i>\\n      </h2>\\n\\n      <section class=\\\"bg-light\\\">\\n        <div class=\\\"row p-md-1\\\" *ngFor=\\\"let clause of applicant.accessAcceptance; let i = index;\\\">\\n          <div class=\\\"col-md-8\\\">Clause {{i + 1}}</div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ getUAAAnswer( clause ) }}</div>\\n        </div>\\n\\n        <div class=\\\"row p-md-1\\\">\\n          <div class=\\\"col-md-8\\\">I declare that all information I provided is accurate</div>\\n          <div class=\\\"col-md-3 offset-md-1 font-weight-bold\\\">{{ applicant.isDeclaredCheck ? 'Yes' : 'No' }}</div>\\n        </div>\\n      </section>\\n\\n\\n    </div>\\n  </div>\\n\\n\\n\\n</prime-page-framework>\\n\"","module.exports = \".pointer {\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { CollegeHelper, WorkingOnBehalfTitleTypes } from '../../../../models/colleges.enum';\nimport { isNullOrUndefined } from 'util';\nimport { moment } from 'ngx-bootstrap/chronos/test/chain';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'prime-applicant-review-page',\n  templateUrl: './applicant-review-page.component.html',\n  styleUrls: ['./applicant-review-page.component.scss']\n})\nexport class ApplicantReviewPageComponent implements OnInit {\n\n  private _dateFormat = 'MMM DD, YYYY';\n  constructor(private dataService: PrimeDataService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  get applicant() {\n    return this.dataService.user;\n  }\n\n  get collegeType(): string {\n    const college = CollegeHelper.getFullCollegeNameFromString(this.applicant.collegeCertificationList[0].collegeType);\n    return college ? college : 'n/a';\n  }\n\n  get licenceExpiryDate(): string {\n    const expiryDate = this.applicant.collegeCertificationList[0].licenceExpiryDate;\n    return (isNullOrUndefined( expiryDate )) ? 'n/a' : moment( expiryDate ).format( this._dateFormat );\n  }\n\n  get jobTitle(): string {\n    const obj = Object.keys( WorkingOnBehalfTitleTypes ).filter(x => x === this.applicant.workingOnBehalfList[0].jobTitle );\n    return (obj.length > 0) ? WorkingOnBehalfTitleTypes[obj[0]] : 'n/a';\n  }\n\n  onSetHasCompletedWizardFlag(val: boolean){\n    //This person has completed the wizard process so set their flag to true\n    this.dataService.user._hasCompletedWizard = true;\n  }\n\n  /** Converts a boolean (from one of the Self Declaration answers) to a human readable string. */\n  getSelfDeclarationAnswer(val: boolean): string{\n    return val ? 'Yes, details provided' : 'No';\n  }\n\n  getUAAAnswer(val: boolean): string {\n    return val ? 'Accepted' : 'Not accepted';\n  }\n\n\n  goToContactPage(){\n    this.router.navigate(['applicant/contact']);\n  }\n\n  goToProfessionalPage(){\n    this.router.navigate(['applicant/professional']);\n  }\n\n  goToUAAPage(){\n    this.router.navigate(['applicant/access-acceptance']);\n  }\n\n  goToPharmaNetPage(){\n    this.router.navigate(['applicant/pharma-net']);\n  }\n\n}\n","module.exports = \"<prime-page-framework>\\n\\n<ng-container *ngIf=\\\"showApplicantNewText; else applicantChangeText\\\">\\n  \\n    <h1 id=\\\"regInfo\\\">Enrolment Completed</h1>\\n    <div>\\n      <h2>\\n        Your enrolment application was submitted successfully. Please wait for the provisioner to provision PharmaNet access\\n        for you. You will be asked to confirm the provisioning once the provisioner completes their tasks. Please do not\\n        attempt to access PharmaNet until you have confirmed.\\n      </h2>\\n    </div>\\n</ng-container>\\n  <div>\\n    <label class=\\\"has-float-label\\\">\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-primary mx-2\\\"\\n              (click)=\\\"continue()\\\"\\n              tabindex=\\\"0\\\">Ok</button>\\n    </label>\\n  </div>\\n\\n</prime-page-framework>\\n\\n<ng-template #applicantChangeText>\\n    <h1 id=\\\"regInfo\\\">Provisioning Confirmed</h1>\\n    <div>\\n      <h2>\\n        Thank you for confirming the provisioning at the specific sites. You now have access to PharmaNet at those confirmed sites.\\n      </h2>\\n    </div>\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { cloneDeep } from 'lodash';\nimport { Router } from '@angular/router';\nimport {PrimeDataService} from '../../../../services/prime-data.service';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\n\n\n@Component({\n  selector: 'prime-complete-submission',\n  templateUrl: './complete-submission.component.html',\n  styleUrls: ['./complete-submission.component.scss']\n})\nexport class CompleteSubmissionComponent implements OnInit {\n\n  constructor(private dataService: PrimeDataService, private router: Router) { }\n\n  showApplicantNewText: boolean = true;\n\n  ngOnInit() {\n    // If any sites are Active or Declined, show the other text\n    this.showApplicantNewText = this.dataService.user.allOrganizations()\n      .map(org => {\n        const sa = org.getSiteAccessWithStatus(EnrollmentStatus.Active);\n        sa.concat(org.getSiteAccessWithStatus(EnrollmentStatus.Declined));\n        return sa;\n      }).filter(arr => arr && arr.length >= 1)\n      .length === 0;\n  }\n\n\n  continue() {\n    this.router.navigate(['/applicant/dashboard']);\n  }\n}\n","module.exports = \"<prime-applicant-breadcrumbs\\n  pageName=\\\"PharmaNet Access\\\"\\n  nextPageLink=\\\"/applicant/access-acceptance\\\"\\n  previousPageLink=\\\"/applicant/professional\\\"\\n  [shouldDisableContinue]='!hasSelectedOrg'\\n>\\n</prime-applicant-breadcrumbs>\\n\\n<prime-pharma-net-access-list  [rowItems]=\\\"organizations\\\"></prime-pharma-net-access-list>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { PrimeDataService } from '../../../../services/prime-data.service';\nimport { Person } from '../../../../models/person.model';\nimport { EnrollmentStatus } from '../../../../models/enrollment-status.enum';\nimport { PharmaNetOrganization } from '../../../../models/organizations.model';\n\n@Component({\n  selector: 'prime-pharma-net-page',\n  templateUrl: './pharma-net-page.component.html',\n  styleUrls: ['./pharma-net-page.component.scss']\n})\nexport class PharmaNetPageComponent implements OnInit {\n\n  constructor(private dataService: PrimeDataService) { }\n\n  public hasSelectedOrg = false;\n\n  public organizations: PharmaNetOrganization[];\n\n  ngOnInit() {\n    this.organizations = this.applicant.allOrganizations();\n  }\n\n\n  ngDoCheck (){\n    this.hasSelectedOrg = this.applicant.organizationAccess.length > 0;\n\n    if (this.organizations.length !== this.applicant.allOrganizations().length ){\n      console.log('updating orgs');\n      this.organizations = this.applicant.allOrganizations();\n    }\n  }\n\n  get applicant(): Person {\n    return this.dataService.user;\n  }\n\n}\n"],"sourceRoot":""}